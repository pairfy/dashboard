{"version":3,"file":"js/69.423404c0.js","mappings":"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1jC,EAAM,IAE1B,MAAuB,WAAhB0jC,EAAS,GACVE,EAAMrnB,KAAK,KACXqnB,EAAMrnB,KAAK,IACrB,CACA,SAASmoB,EAAmBc,GACxB,MAAMC,EAA6B,EAAvBD,EAAc18B,OACpB48B,EAAKD,EAAM,GACX5kC,GAAO,IAAImiB,EAAAA,GACZzkB,OAAOinC,GACPtgB,SACL,OAAOmgB,EAAc/e,MAAMmF,KAAK5qB,IAAOuY,MAAM,EAAGssB,EACpD,CACA,SAASzB,EAAK1Y,EAAKoa,EAAW78B,GAC1B,MAAOyiB,EAAIziB,OAASA,EAChByiB,EAAMoa,EAAYpa,EAEtB,OAAOA,CACX,CACA,SAAS8Z,EAAc1qB,GACnB,OAAOA,EAAMzP,KAAK2V,GAAMojB,EAAKpjB,EAAEoE,SAAS,GAAI,IAAK,KAAI1I,KAAK,GAC9D,CACA,SAASsnB,EAAUtY,GACf,OAAQA,GAAO,IAAIsY,UAAU,OACjC,CACA,SAASU,EAAaqB,GAClB,OAAO1rB,SAAS0rB,EAAK,EACzB,CACA,MAAMjC,EAAmB,CACrB,UACA,UACA,OACA,QACA,QACA,SACA,SACA,WACA,SACA,QACA,SACA,WACA,UACA,SACA,UACA,OACA,WACA,UACA,SACA,MACA,SACA,QACA,UACA,SACA,QACA,MACA,SACA,UACA,SACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,QACA,MACA,QACA,QACA,QACA,MACA,MACA,UACA,QACA,QACA,QACA,UACA,QACA,QACA,MACA,QACA,QACA,SACA,QACA,QACA,UACA,OACA,QACA,SACA,UACA,UACA,QACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,QACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,UACA,MACA,QACA,UACA,SACA,QACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,MACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,QACA,MACA,WACA,SACA,UACA,MACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,WACA,UACA,UACA,QACA,SACA,OACA,SACA,OACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,UACA,QACA,UACA,OACA,OACA,WACA,QACA,QACA,MACA,UACA,UACA,OACA,SACA,SACA,SACA,MACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,SACA,UACA,SACA,OACA,SACA,QACA,SACA,SACA,UACA,QACA,OACA,QACA,UACA,OACA,SACA,SACA,UACA,SACA,UACA,MACA,OACA,OACA,UACA,OACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,SACA,SACA,SACA,OACA,SACA,SACA,MACA,MACA,UACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,WACA,SACA,SACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,UACA,QACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,QACA,MACA,WACA,OACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,OACA,OACA,OACA,SACA,OACA,MACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,MACA,SACA,OACA,QACA,SACA,QACA,OACA,OACA,OACA,SACA,SACA,SACA,MACA,UACA,QACA,WACA,SACA,SACA,QACA,UACA,OACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,WACA,SACA,QACA,UACA,SACA,QACA,OACA,QACA,QACA,SACA,OACA,SACA,QACA,UACA,QACA,QACA,UACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,OACA,QACA,QACA,OACA,UACA,OACA,OACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,UACA,OACA,SACA,OACA,OACA,UACA,QACA,SACA,UACA,OACA,UACA,QACA,SACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,UACA,WACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,SACA,UACA,SACA,QACA,MACA,UACA,OACA,UACA,MACA,WACA,UACA,UACA,UACA,QACA,UACA,SACA,OACA,QACA,MACA,SACA,OACA,QACA,SACA,SACA,OACA,WACA,OACA,MACA,OACA,SACA,SACA,SACA,WACA,SACA,UACA,WACA,WACA,OACA,UACA,SACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,SACA,OACA,UACA,UACA,SACA,SACA,UACA,SACA,SACA,UACA,OACA,UACA,QACA,OACA,SACA,OACA,SACA,UACA,UACA,UACA,SACA,WACA,SACA,OACA,WACA,WACA,UACA,OACA,UACA,WACA,UACA,WACA,SACA,SACA,UACA,QACA,SACA,WACA,MACA,OACA,UACA,SACA,SACA,SACA,QACA,OACA,OACA,SACA,OACA,QACA,SACA,QACA,UACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,SACA,OACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,SACA,OACA,OACA,OACA,UACA,UACA,OACA,OACA,UACA,SACA,MACA,QACA,SACA,QACA,QACA,WACA,UACA,UACA,WACA,WACA,QACA,OACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,QACA,SACA,QACA,MACA,UACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,WACA,UACA,QACA,QACA,MACA,QACA,QACA,UACA,QACA,QACA,SACA,QACA,UACA,SACA,UACA,SACA,WACA,OACA,QACA,SACA,QACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,MACA,UACA,SACA,OACA,UACA,OACA,QACA,QACA,OACA,QACA,OACA,SACA,SACA,MACA,QACA,UACA,OACA,UACA,MACA,QACA,SACA,UACA,QACA,WACA,UACA,WACA,UACA,MACA,OACA,OACA,SACA,QACA,WACA,QACA,QACA,MACA,QACA,UACA,QACA,SACA,OACA,OACA,SACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,QACA,SACA,OACA,MACA,UACA,MACA,OACA,QACA,QACA,OACA,SACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,MACA,OACA,QACA,MACA,OACA,OACA,SACA,OACA,OACA,QACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,SACA,QACA,MACA,UACA,QACA,WACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,MACA,QACA,UACA,OACA,SACA,SACA,OACA,SACA,UACA,OACA,MACA,SACA,UACA,SACA,SACA,UACA,MACA,OACA,OACA,SACA,QACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,UACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,UACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,OACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,MACA,MACA,QACA,OACA,OACA,SACA,UACA,OACA,QACA,SACA,OACA,QACA,UACA,MACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,WACA,SACA,QACA,SACA,OACA,MACA,OACA,SACA,OACA,OACA,OACA,MACA,OACA,UACA,QACA,SACA,OACA,OACA,UACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,QACA,WACA,OACA,QACA,OACA,QACA,MACA,OACA,QACA,SACA,QACA,UACA,SACA,OACA,SACA,QACA,OACA,UACA,SACA,MACA,OACA,OACA,WACA,OACA,SACA,MACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,SACA,UACA,UACA,OACA,UACA,SACA,WACA,QACA,WACA,SACA,WACA,SACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,UACA,SACA,SACA,SACA,UACA,UACA,SACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,UACA,QACA,OACA,QACA,SACA,SACA,MACA,OACA,UACA,QACA,QACA,QACA,MACA,OACA,OACA,UACA,MACA,QACA,QACA,OACA,SACA,SACA,OACA,OACA,WACA,OACA,OACA,UACA,MACA,OACA,MACA,SACA,OACA,UACA,OACA,MACA,UACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,MACA,QACA,QACA,SACA,OACA,OACA,OACA,WACA,SACA,QACA,QACA,QACA,QACA,UACA,OACA,MACA,OACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,UACA,QACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,UACA,UACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,QACA,OACA,QACA,SACA,OACA,OACA,UACA,OACA,SACA,OACA,QACA,QACA,UACA,SACA,QACA,QACA,SACA,SACA,UACA,MACA,QACA,SACA,OACA,OACA,OACA,QACA,OACA,SACA,MACA,SACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,WACA,OACA,OACA,SACA,QACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,OACA,UACA,OACA,WACA,QACA,QACA,SACA,OACA,SACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,OACA,UACA,QACA,SACA,SACA,WACA,OACA,UACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,SACA,OACA,UACA,MACA,QACA,UACA,SACA,QACA,SACA,MACA,SACA,UACA,SACA,UACA,QACA,OACA,QACA,OACA,UACA,WACA,SACA,SACA,QACA,WACA,QACA,OACA,QACA,OACA,SACA,OACA,WACA,SACA,SACA,WACA,QACA,OACA,SACA,SACA,UACA,OACA,QACA,OACA,SACA,SACA,QACA,SACA,SACA,OACA,OACA,OACA,WACA,UACA,UACA,SACA,QACA,OACA,MACA,UACA,UACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,OACA,UACA,OACA,UACA,SACA,QACA,MACA,UACA,SACA,QACA,MACA,MACA,OACA,SACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,QACA,MACA,OACA,MACA,QACA,UACA,OACA,OACA,MACA,QACA,SACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,QACA,UACA,QACA,WACA,QACA,SACA,WACA,SACA,UACA,QACA,UACA,QACA,SACA,UACA,OACA,OACA,OACA,MACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,SACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,SACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,SACA,UACA,QACA,OACA,UACA,QACA,SACA,OACA,UACA,UACA,MACA,UACA,SACA,SACA,SACA,UACA,SACA,SACA,MACA,QACA,QACA,SACA,WACA,QACA,SACA,UACA,QACA,MACA,SACA,OACA,QACA,OACA,UACA,OACA,SACA,QACA,QACA,QACA,SACA,UACA,QACA,OACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,OACA,OACA,UACA,UACA,WACA,WACA,OACA,SACA,UACA,UACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,QACA,WACA,UACA,UACA,QACA,UACA,SACA,UACA,OACA,OACA,QACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,QACA,OACA,MACA,SACA,UACA,UACA,UACA,UACA,WACA,QACA,OACA,OACA,QACA,SACA,UACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,OACA,SACA,QACA,MACA,QACA,QACA,OACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,OACA,SACA,WACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,WACA,SACA,WACA,WACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,MACA,SACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,UACA,OACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,MACA,SACA,UACA,OACA,OACA,QACA,SACA,QACA,OACA,SACA,OACA,SACA,OACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,UACA,QACA,SACA,SACA,UACA,WACA,WACA,QACA,QACA,SACA,SACA,QACA,MACA,SACA,SACA,OACA,SACA,SACA,UACA,WACA,OACA,OACA,UACA,SACA,OACA,UACA,SACA,QACA,WACA,SACA,UACA,UACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,QACA,WACA,QACA,SACA,QACA,UACA,MACA,UACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,UACA,SACA,QACA,OACA,QACA,SACA,UACA,MACA,OACA,QACA,SACA,MACA,QACA,OACA,QACA,QACA,OACA,OACA,QACA,UACA,QACA,QACA,SACA,OACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,OACA,QACA,UACA,QACA,WACA,QACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,SACA,MACA,SACA,UACA,WACA,SACA,UACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,WACA,SACA,SACA,SACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,SACA,UACA,OACA,SACA,SACA,QACA,UACA,OACA,SACA,MACA,QACA,SACA,QACA,SACA,UACA,OACA,UACA,QACA,WACA,WACA,SACA,UACA,UACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,OACA,OACA,OACA,SACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,MACA,SACA,SACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,QACA,SACA,QACA,QACA,UACA,SACA,OACA,QACA,OACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,QACA,UACA,QACA,UACA,MACA,WACA,SACA,QACA,SACA,WACA,OACA,SACA,UACA,OACA,QACA,MACA,QACA,SACA,QACA,UACA,WACA,OACA,QACA,UACA,SACA,QACA,OACA,MACA,QACA,QACA,UACA,SACA,QACA,WACA,OACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,UACA,OACA,OACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,QACA,MACA,OACA,UACA,SACA,OACA,SACA,SACA,OACA,SACA,SACA,SACA,QACA,OACA,QACA,MACA,OACA,UACA,OACA,WACA,SACA,UACA,QACA,UACA,QACA,OACA,SACA,SACA,UACA,UACA,SACA,OACA,WACA,UACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,OACA,QACA,QACA,QACA,OACA,QACA,MACA,OACA,SACA,UACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,MACA,SACA,QACA,UACA,OACA,QACA,UACA,SACA,SACA,UACA,QACA,OACA,SACA,UACA,OACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,OACA,UACA,UACA,SACA,UACA,QACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,UACA,SACA,OACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,OACA,UACA,OACA,UACA,OACA,OACA,QACA,QACA,OACA,MACA,SACA,SACA,OACA,SACA,UACA,MACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,UACA,OACA,QACA,OACA,OACA,OACA,MACA,SACA,OACA,OACA,OACA,SACA,SACA,OACA,SACA,OACA,OACA,UACA,OACA,QACA,SACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,OACA,S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","sources":["webpack://frontend-seller/./src/pages/dashboard/DashboardPage.vue","webpack://frontend-seller/./src/pages/dashboard/components/SlotsView.vue","webpack://frontend-seller/./src/pages/dashboard/api/index.js","webpack://frontend-seller/./src/components/LoadingBars.vue","webpack://frontend-seller/./src/components/LoadingBars.vue?be65","webpack://frontend-seller/./src/pages/dashboard/DashboardPage.vue?5f41","webpack://frontend-seller/./src/pages/dashboard/components/ProductsView.vue","webpack://frontend-seller/./src/pages/dashboard/components/ProductsView.vue?d65b","webpack://frontend-seller/./src/pages/dashboard/components/SlotsView.vue?301d","webpack://frontend-seller/./node_modules/lucid-cardano/esm/_dnt.polyfills.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/deps/deno.land/std@0.100.0/encoding/hex.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/deps/deno.land/std@0.153.0/hash/sha256.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/deps/deno.land/x/typebox@0.25.13/src/typebox.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/package.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/src/core/core.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/src/lucid/lucid.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/src/lucid/message.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/src/lucid/tx.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/src/lucid/tx_complete.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/src/lucid/tx_signed.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/src/misc/bip39.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/src/misc/crc8.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/src/misc/sign_data.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/src/misc/wallet.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/src/plutus/data.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/src/plutus/time.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/src/provider/blockfrost.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/src/provider/emulator.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/src/provider/maestro.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/src/utils/cost_model.js","webpack://frontend-seller/./node_modules/lucid-cardano/esm/src/utils/utils.js"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <div class=\"dashboard-nav\">\n      <div class=\"dashboard-nav-logo\">\n        <img src=\"./assets/logo.png\" alt=\"\" />\n      </div>\n\n      <div\n        class=\"dashboard-nav-item\"\n        :class=\"{ selected: selectedNav === item.name }\"\n        v-for=\"item in navTabs\"\n        :key=\"item\"\n        @click=\"selectTab(item.name)\"\n      >\n        <i :class=\"item.icon\" />\n        <span>{{ item.text }}</span>\n      </div>\n\n      <div class=\"dashboard-nav-item\" @click=\"getPubKeyHash\">\n        <i class=\"pi pi-wallet\" />\n\n        <span>Wallets</span>\n      </div>\n\n      <div class=\"dashboard-nav-item bottom\">\n        <img\n          class=\"avatar\"\n          src=\"https://api.dicebear.com/7.x/initials/svg?seed=tester1&backgroundColor=b6e3f4\"\n          alt=\"\"\n        />\n\n        <span>{{ getUserData?.username }}</span>\n      </div>\n    </div>\n\n    <ProductsView v-show=\"selectedNav === 'products'\" />\n    <SlotsView v-show=\"selectedNav === 'slots'\" />\n  </div>\n</template>\n\n<script>\nimport ProductsView from \"./components/ProductsView.vue\";\nimport entryAPI from \"@/pages/entry/api\";\nimport dashboardAPI from \"@/pages/dashboard/api\";\nimport SlotsView from \"./components/SlotsView.vue\";\nimport { Lucid, getAddressDetails } from \"lucid-cardano\";\n\nexport default {\n  components: {\n    ProductsView,\n    SlotsView,\n  },\n\n  setup() {\n    const { getUserData } = entryAPI();\n    const { getProducts, getSlots, setupLucid, getLucid } = dashboardAPI();\n\n    const update = {\n      lucid: async () => setupLucid(await Lucid.new()),\n      products: () =>\n        getProducts()\n          .then(() => console.info(\"products:updated\"))\n          .catch((err) => console.log(err)),\n\n      slots: () =>\n        getSlots()\n          .then(() => console.info(\"slots:updated\"))\n          .catch((err) => console.log(err)),\n    };\n\n    document.addEventListener(\"productEvents\", (event) => {\n      console.log(event.detail.data.type);\n      if (event.detail.data.type === \"product:created\") {\n        update.products();\n      }\n    });\n\n    document.addEventListener(\"gateEvents\", (event) => {\n      console.log(event.detail.data.type);\n      if (event.detail.data.type === \"slot:created\") {\n        update.slots();\n      }\n    });\n\n    document.addEventListener(\"getWalletEvent\", (event) => {\n      console.log(event);\n    });\n\n    update.lucid();\n    update.products();\n    update.slots();\n    return {\n      getUserData,\n      setupLucid,\n      getLucid,\n    };\n  },\n  data() {\n    return {\n      selectedNav: \"products\",  \n      lucidClient: null,\n      navTabs: [\n        {\n          name: \"home\",\n          text: \"Home\",\n          icon: \"pi pi-home\",\n          index: 0,\n          path: \"\",\n        },\n        {\n          name: \"products\",\n          text: \"Products\",\n          icon: \"pi pi-table\",\n          index: 1,\n          path: \"\",\n        },\n        {\n          name: \"slots\",\n          text: \"Slots\",\n          icon: \"pi pi-folder\",\n          index: 1,\n          path: \"\",\n        },\n        {\n          name: \"configuration\",\n          text: \"Configuration\",\n          icon: \"pi pi-cog\",\n          index: 1,\n          path: \"\",\n        },\n      ],\n    };\n  },\n  methods: {\n    selectTab(e) {\n      this.selectedNav = e;\n    },\n    async getPubKeyHash() {\n      const addr = await this.getLucid.wallet.address();\n      const details = await getAddressDetails(addr);\n      console.log(details);\n      console.log(details.paymentCredential.hash);\n    },\n  },\n\n  async mounted() {\n    const api = await window.cardano.nami.enable();\n\n    this.getLucid.selectWallet(api);\n  },\n};\n</script>\n\n<style lang=\"css\" scoped>\n.dashboard {\n  display: flex;\n  min-height: 100vh;\n}\n\n.dashboard-nav {\n  padding: 8px;\n  width: 56px;\n  transition: 0.2s cubic-bezier(0.08, 0.52, 0.52, 1);\n  box-shadow: var(--shadow-a);\n  position: fixed;\n  min-height: 100vh;\n  overflow: hidden;\n  z-index: 1000;\n  background: var(--base-a);\n}\n\n.dashboard-nav:hover {\n  width: 212px;\n}\n\n.dashboard-nav-item {\n  display: flex;\n  border-radius: 6px;\n  min-height: 40px;\n  color: var(--text-a);\n  padding: 8px;\n  align-items: center;\n  overflow: hidden;\n  margin-bottom: 0.5rem;\n  cursor: default;\n}\n\n.dashboard-nav-item:hover {\n  background: var(--base-b);\n}\n.dashboard-nav-item.selected {\n  background-color: #283943;\n  color: var(--text-w);\n}\n.dashboard-nav-item span {\n  margin-left: 1rem;\n  font-size: var(--text-size-a);\n  font-weight: 600;\n}\n\n.dashboard-nav-item i {\n  margin-left: 1rem;\n  margin-left: 3px;\n  font-size: var(--text-size-c);\n  font-weight: 100;\n}\n\n.dashboard-nav-logo {\n  margin: 1rem 0;\n  justify-content: flex-start;\n  display: flex;\n}\n\n.dashboard-nav-item.bottom {\n  position: absolute;\n  bottom: 1rem;\n  padding: 0;\n}\n\n.dashboard-nav-item.bottom span {\n  font-size: var(--text-size-b);\n}\n\n.avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n}\n</style>\n","<template>\n  <div class=\"slots\">\n    <!--DIALOG SECTION-->\n    <Dialog\n      v-model:visible=\"messageModalVisible\"\n      modal\n      header=\"Message\"\n      :draggable=\"false\"\n      :style=\"{ width: '35rem' }\"\n      :breakpoints=\"{ '1199px': '75vw', '575px': '90vw' }\"\n    >\n      <p>{{ messageModal }}</p>\n\n      <p v-for=\"e in errorModal\" :key=\"e\">{{ e }}</p>\n\n      <template #footer>\n        <div class=\"modal-footer\">\n          <Button type=\"button\" label=\"Ok\" @click=\"closeAllModals\" />\n        </div>\n      </template>\n    </Dialog>\n\n    <Dialog\n      v-model:visible=\"deleteProductDialog\"\n      :style=\"{ width: '425px' }\"\n      header=\"Confirm\"\n      :modal=\"true\"\n    >\n      <div class=\"confirmation-content\">\n        <i class=\"pi pi-exclamation-triangle\" style=\"font-size: 2rem\" />\n        <span v-if=\"product\"\n          >Are you sure you want to delete <b>{{ product.name }}</b\n          >?</span\n        >\n      </div>\n      <template #footer>\n        <Button\n          label=\"No\"\n          icon=\"pi pi-times\"\n          text\n          @click=\"deleteProductDialog = false\"\n        />\n        <Button label=\"Yes\" icon=\"pi pi-check\" text @click=\"deleteProduct\" />\n      </template>\n    </Dialog>\n\n    <Dialog\n      v-model:visible=\"deleteProductsDialog\"\n      :style=\"{ width: '425px' }\"\n      header=\"Confirm\"\n      :modal=\"true\"\n    >\n      <div class=\"confirmation-content\">\n        <i class=\"pi pi-exclamation-triangle\" style=\"font-size: 2rem\" />\n        <span v-if=\"product\"\n          >Are you sure you want to delete the selected slots?</span\n        >\n      </div>\n      <template #footer>\n        <Button\n          label=\"No\"\n          icon=\"pi pi-times\"\n          text\n          @click=\"deleteProductsDialog = false\"\n        />\n        <Button\n          label=\"Yes\"\n          icon=\"pi pi-check\"\n          text\n          @click=\"deleteSelectedProducts\"\n        />\n      </template>\n    </Dialog>\n\n    <Dialog\n      v-model:visible=\"createSlotDialogVisible\"\n      :style=\"{ width: '425px' }\"\n      header=\"Create slots\"\n      :modal=\"true\"\n      :draggable=\"false\"\n    >\n      <div class=\"createslot\">\n        <LoadingBars v-if=\"createSlotLoader\" />\n\n        <div class=\"createslot-wrap\" v-if=\"!createSlotLoader\">\n          <div class=\"field\">\n            <label for=\"batch_mode\" class=\"field-label\">\n              <span>Batch Mode</span>\n              <i\n                class=\"pi pi-info-circle\"\n                v-tooltip.top=\"\n                  'Allows to add discounts for the purchase of multiple units.'\n                \"\n              />\n            </label>\n            <InputSwitch id=\"batch_mode\" v-model=\"createSlotForm.batch_mode\" />\n          </div>\n\n          <div class=\"field\">\n            <label for=\"units\" class=\"field-label\">\n              <span>Units</span>\n              <i\n                class=\"pi pi-info-circle\"\n                v-tooltip.top=\"'Number of slots to create.'\"\n              />\n            </label>\n            <InputNumber\n              id=\"units\"\n              v-model=\"createSlotForm.product_units\"\n              showButtons\n              integeronly\n              locale=\"en-US\"\n              :min=\"0\"\n              :class=\"{ invalid: createSlotFormErrors.product_units }\"\n            />\n            <small class=\"p-error\" v-if=\"createSlotFormErrors.product_units\">\n              The unit is required and greater than 0.\n            </small>\n          </div>\n\n          <div class=\"field\">\n            <label for=\"batch\" class=\"field-label\">\n              <span>Batch</span>\n              <i\n                class=\"pi pi-info-circle\"\n                v-tooltip.top=\"\n                  'Each batch contains the chosen number of units.'\n                \"\n              />\n            </label>\n            <InputNumber\n              id=\"batch\"\n              v-model=\"createSlotForm.batch_number\"\n              showButtons\n              :disabled=\"!createSlotForm.batch_mode\"\n              integeronly\n              locale=\"en-US\"\n              :min=\"0\"\n              :class=\"{ invalid: createSlotFormErrors.batch_number }\"\n            />\n            <small class=\"p-error\" v-if=\"createSlotFormErrors.batch_number\">\n              The batch must be greater than 0.\n            </small>\n          </div>\n\n          <div class=\"field\">\n            <label for=\"unitDiscount\" class=\"field-label\">\n              <span>Discount</span>\n              <i\n                class=\"pi pi-info-circle\"\n                v-tooltip.top=\"'Discount per unit in batch mode.'\"\n              />\n            </label>\n            <InputNumber\n              id=\"unitDiscount\"\n              v-model=\"createSlotForm.product_discount\"\n              showButtons\n              :disabled=\"!createSlotForm.batch_mode\"\n              integeronly\n              suffix=\" % OFF\"\n              locale=\"en-US\"\n              :min=\"0\"\n              :max=\"100\"\n              :class=\"{ invalid: createSlotFormErrors.product_discount }\"\n            />\n            <small class=\"p-error\" v-if=\"createSlotFormErrors.product_discount\"\n              >The discount is required.</small\n            >\n          </div>\n\n          <div class=\"createslot-b-total\">\n            <p>Total slots {{ computedSlots }}</p>\n            <p>Stock: {{ productList[createSlotIndex].stock }}</p>\n            <p>Total Units: {{ computedUnits }}</p>\n            <p>Total Collateral: {{ computedCollateral }}</p>\n            <p>Unit Price: {{ computedPrice }}</p>\n          </div>\n        </div>\n      </div>\n\n      <template #footer>\n        <Button label=\"Cancel\" text @click=\"closeProductDialog\" />\n        <Button label=\"Create\" text @click=\"createSlots\" />\n      </template>\n    </Dialog>\n\n    <Dialog\n      v-model:visible=\"slotListDialogVisible\"\n      :style=\"{ width: '90vw' }\"\n      maximizable\n      modal\n      :draggable=\"false\"\n      :contentStyle=\"{ height: '80vw' }\"\n    >\n      <template #header>\n        <div class=\"dialog-header\">\n          <span class=\"dialog-title\">Product slots</span>\n          <div class=\"network-analyzer\">\n            <div class=\"loader\" />\n            <span>Scanning network 5s</span>\n          </div>\n        </div>\n      </template>\n\n      <DataTable\n        :value=\"productList[slotListDialogIndex].slots\"\n        stripedRows\n        scrollable\n        scrollHeight=\"flex\"\n        tableStyle=\"min-width: 50rem;\"\n      >\n        <Column\n          field=\"created_at\"\n          header=\"Date\"\n          sortable\n          style=\"max-width: 8rem\"\n        >\n          <template #body=\"slotProps\">\n            {{ formatDate(slotProps.data.created_at) }}\n          </template>\n        </Column>\n\n        <Column\n          field=\"mode\"\n          header=\"Mode\"\n          sortable\n          style=\"max-width: 5rem\"\n        ></Column>\n\n        <Column\n          field=\"status\"\n          header=\"Status\"\n          style=\"max-width: 5rem\"\n          sortable\n        ></Column>\n\n        <Column\n          field=\"contract_units\"\n          header=\"Units\"\n          sortable\n          style=\"max-width: 5rem\"\n        ></Column>\n\n        <Column field=\"contract_price\" header=\"Price\" sortable>\n          <template #body=\"slotProps\">\n            {{ formatCurrency(slotProps.data.contract_price) }}\n          </template>\n        </Column>\n\n        <Column\n          field=\"contract_collateral\"\n          header=\"Collateral\"\n          style=\"max-width: 5rem\"\n          sortable\n        >\n          <template #body=\"slotProps\">\n            {{ formatCurrency(slotProps.data.contract_collateral) }}\n          </template>\n        </Column>\n\n        <Column\n          field=\"actived\"\n          header=\"Actived\"\n          style=\"max-width: 5rem\"\n          sortable\n        >\n          <template #body=\"slotProps\">\n            <div class=\"switch-group\">\n              <InputSwitch\n                v-tooltip.top=\"\n                  'Generate the transaction to send to the network.'\n                \"\n                :disabled=\"slotProps.data.actived === 1 || activeSlotLoader\"\n                :modelValue=\"slotProps.data.actived === 1\"\n                @change=\"\n                  (e) => activeSlot(e.target.ariaChecked, slotProps.data.id)\n                \"\n              />\n\n              <span\n                v-if=\"slotProps.data.contract_utx_0 || activeSlotLoader\"\n                :class=\"{ disabled: activeSlotLoader }\"\n                v-tooltip.top=\"'⚠ Warning. Click to resend the transaction.'\"\n                @click=\"activeSlot('true', slotProps.data.contract_utx_0)\"\n              >\n                <i v-if=\"activeSlotLoader\" class=\"pi pi-spin pi-spinner\" />\n\n                <i v-if=\"!activeSlotLoader\" class=\"pi pi-replay\" />\n              </span>\n            </div>\n          </template>\n        </Column>\n\n        <Column\n          field=\"contract_state\"\n          header=\"State\"\n          style=\"min-width: 10rem\"\n          sortable\n        >\n          <template #body=\"slotProps\">\n            <div class=\"column-block\">\n              <div class=\"column-block-row\">\n                <span> {{ slotProps.data.contract_stage }}</span>\n                <span> 0 Confirmations</span>\n              </div>\n              <ProgressBar\n                :value=\"getStateBarValue(slotProps.data.contract_state)\"\n                :showValue=\"false\"\n              />\n            </div>\n          </template>\n        </Column>\n\n        <Column :exportable=\"false\">\n          <template #body=\"\">\n            <div class=\"table-buttons\">\n              <Button\n                class=\"table-button\"\n                type=\"button\"\n                icon=\"pi pi-ellipsis-h\"\n                outlined\n                rounded\n                aria-haspopup=\"true\"\n                aria-controls=\"slot_menu\"\n                @click=\"openSlotMenu\"\n              />\n              <Menu\n                ref=\"slotMenuRef\"\n                id=\"slot_menu\"\n                :model=\"slotMenu\"\n                :popup=\"true\"\n              />\n\n              <Button\n                class=\"table-button\"\n                icon=\"pi pi-eye\"\n                outlined\n                rounded\n                @click=\"openSlotListDialog(slotProps.data)\"\n              />\n            </div>\n          </template>\n        </Column>\n      </DataTable>\n      <template #footer>\n        <Button label=\"Done\" @click=\"slotListDialogVisible = false\" />\n      </template>\n    </Dialog>\n    <Toast />\n    <!--DIALOG SECTION-->\n\n    <!---CONTENT-->\n    <div class=\"slots-wrap\">\n      <div class=\"slots-card\">\n        <DataTable\n          ref=\"productListTable\"\n          resizableColumns\n          :value=\"productList\"\n          v-model:expandedRows=\"selectedProducts\"\n          dataKey=\"id\"\n          :paginator=\"true\"\n          :rows=\"10\"\n          :filters=\"filters\"\n          paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n          :rowsPerPageOptions=\"[5, 10, 25]\"\n          currentPageReportTemplate=\"{first} to {last} of {totalRecords} items\"\n        >\n          <template #expansion> x </template>\n          <template #header>\n            <div class=\"slots-header\">\n              <div class=\"slots-header-left\">\n                <span>Product slots</span>\n                <span @click=\"runTX\">Create or modify slots and more...</span>\n              </div>\n\n              <div class=\"slots-header-right\">\n                <div class=\"slots-header-right-search\">\n                  <i class=\"pi pi-search\" />\n                  <InputText\n                    v-model=\"filters['global'].value\"\n                    placeholder=\"Search\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <Toolbar>\n              <template #end>\n                <Button\n                  label=\"Export\"\n                  icon=\"pi pi-upload\"\n                  @click=\"exportCSV($event)\"\n                />\n              </template>\n            </Toolbar>\n          </template>\n\n          <Column expander style=\"width: 3rem\" :exportable=\"false\" />\n\n          <Column header=\"Image\" style=\"max-width: 8rem\">\n            <template #body=\"slotProps\">\n              <Image\n                :src=\"\n                  slotProps.data.image_base +\n                  slotProps.data.image_path +\n                  slotProps.data.image_main\n                \"\n                :alt=\"slotProps.data.image_main\"\n                width=\"70\"\n                height=\"70\"\n                imageStyle=\"border-radius: 4px; object-fit: contain;\"\n                preview\n              />\n            </template>\n          </Column>\n\n          <Column field=\"id\" header=\"Code\" sortable />\n\n          <Column\n            field=\"name\"\n            header=\"Name\"\n            sortable\n            style=\"max-width: 16rem; white-space: break-spaces\"\n          >\n            <template #body=\"slotProps\">\n              {{ slotProps.data.name.slice(0, 30) }}...\n            </template>\n          </Column>\n\n          <Column\n            field=\"category\"\n            header=\"Category\"\n            sortable\n            style=\"min-width: 8rem; text-transform: capitalize\"\n          >\n            <template #body=\"slotProps\">\n              {{ slotProps.data.category }}\n            </template>\n          </Column>\n\n          <Column field=\"price\" header=\"Price\" sortable style=\"min-width: 8rem\">\n            <template #body=\"slotProps\">\n              {{ formatCurrency(slotProps.data.price) }}\n            </template>\n          </Column>\n\n          <Column\n            field=\"collateral\"\n            header=\"Collateral\"\n            sortable\n            style=\"min-width: 8rem\"\n          >\n            <template #body=\"slotProps\">\n              {{ formatCurrency(slotProps.data.collateral) }}\n            </template>\n          </Column>\n\n          <Column\n            field=\"slots_count\"\n            header=\"Slots\"\n            sortable\n            style=\"min-width: 8rem\"\n          >\n            <template #body=\"slotProps\">\n              {{ slotProps.data.slots_count }}\n            </template>\n          </Column>\n\n          <Column field=\"stock\" header=\"Stock\" sortable style=\"min-width: 8rem\">\n            <template #body=\"slotProps\">\n              {{ slotProps.data.stock }}\n            </template>\n          </Column>\n\n          <Column :exportable=\"false\" style=\"min-width: 8rem\">\n            <template #body=\"slotProps\">\n              <div class=\"table-buttons\">\n                <Button\n                  class=\"table-button\"\n                  type=\"button\"\n                  icon=\"pi pi-ellipsis-h\"\n                  outlined\n                  rounded\n                  aria-haspopup=\"true\"\n                  aria-controls=\"product_menu\"\n                  @click=\"openProductMenu\"\n                />\n                <Menu\n                  ref=\"productMenuRef\"\n                  id=\"product_menu\"\n                  :model=\"productMenu\"\n                  :popup=\"true\"\n                />\n                <Button\n                  class=\"table-button\"\n                  icon=\"pi pi-plus\"\n                  outlined\n                  rounded\n                  v-tooltip.top=\"'Enable a slot'\"\n                  @click=\"openCreateSlotDialog(slotProps.index)\"\n                />\n                <Button\n                  class=\"table-button\"\n                  icon=\"pi pi-receipt\"\n                  outlined\n                  rounded\n                  :disabled=\"slotProps.data.slots_count < 1\"\n                  @click=\"openSlotListDialog(slotProps.index)\"\n                >\n                  <i\n                    v-if=\"slotProps.data.slots_count > 0\"\n                    v-badge.secondary\n                    class=\"pi pi-eye\"\n                  />\n                  <i\n                    v-if=\"slotProps.data.slots_count < 1\"\n                    class=\"pi pi-eye\"\n                  />\n                </Button>\n              </div>\n            </template>\n          </Column>\n        </DataTable>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport dashboardAPI from \"@/pages/dashboard/api/index\";\nimport LoadingBars from \"@/components/LoadingBars.vue\";\nimport { balanceTx } from \"@/api/wallet-api\";\nimport { getAddressDetails } from \"lucid-cardano\";\nimport { FilterMatchMode } from \"primevue/api\";\nimport { HOST } from \"@/api/index\";\nimport { ref } from \"vue\";\n\nexport default {\n  components: {\n    LoadingBars,\n  },\n  setup() {\n    const { getSlotsData, createProduct, createSlot, getLucid, startEndpoint } =\n      dashboardAPI();\n\n    const productList = ref(getSlotsData.value);\n\n    let product = ref({\n      id: null,\n      seller_id: null,\n      name: null,\n      description: \"\",\n      category: null,\n      price: null,\n      collateral: null,\n      stock: null,\n      stock_status: null,\n      keywords: null,\n      theme: null,\n      country: null,\n      moderated: false,\n      image_base: null,\n      image_path: null,\n      image_main: null,\n      image_set: [],\n      created_at: null,\n      schema_t: null,\n      schema_v: null,\n      slots: [],\n      slots_count: null,\n    });\n\n    let invalidProductName = ref(false);\n    let invalidProductDescription = ref(false);\n    let invalidProductCategory = ref(false);\n    let invalidSlotQuantity = ref(false);\n    let invalidProductCollateral = ref(false);\n    let invalidProductStock = ref(false);\n    let invalidProductKeywords = ref(false);\n    let invalidProductImages = ref(false);\n\n    let messageModalVisible = ref(false);\n    let messageModal = ref(null);\n    let errorModal = ref(null);\n    let disableUpload = ref(false);\n\n    const resetForm = () => {\n      product.value = {\n        id: null,\n        seller_id: null,\n        name: null,\n        description: \"\",\n        category: null,\n        price: null,\n        collateral: null,\n        stock: null,\n        stock_status: null,\n        keywords: null,\n        theme: null,\n        country: null,\n        moderated: false,\n        image_base: null,\n        image_path: null,\n        image_main: null,\n        image_set: [],\n        created_at: null,\n        schema_t: null,\n        schema_v: null,\n        slots: [],\n        slots_count: null,\n      };\n\n      invalidProductName.value = false;\n      invalidProductDescription.value = false;\n      invalidProductCategory.value = false;\n      invalidSlotQuantity.value = false;\n      invalidProductCollateral.value = false;\n      invalidProductStock.value = false;\n      invalidProductKeywords.value = false;\n      invalidProductImages.value = false;\n\n      messageModalVisible.value = false;\n      messageModal.value = null;\n      errorModal.value = null;\n      disableUpload.value = false;\n    };\n    const productMenuRef = ref();\n\n    const productMenu = ref([\n      {\n        label: \"Options\",\n        items: [\n          {\n            label: \"Refresh\",\n            icon: \"\",\n          },\n          {\n            label: \"Export\",\n            icon: \"\",\n          },\n        ],\n      },\n    ]);\n\n    const slotMenuRef = ref();\n\n    const slotMenu = ref([\n      {\n        label: \"Options\",\n        items: [\n          {\n            label: \"Transactions\",\n            icon: \"\",\n          },\n          {\n            label: \"Delete\",\n            icon: \"\",\n          },\n          {\n            label: \"Appeal\",\n            icon: \"\",\n          },\n          {\n            label: \"Sign\",\n            icon: \"\",\n          },\n        ],\n      },\n    ]);\n    const openProductMenu = (event) => {\n      productMenuRef.value.toggle(event);\n    };\n    const openSlotMenu = (event) => {\n      slotMenuRef.value.toggle(event);\n    };\n\n    const createSlotForm = ref({\n      batch_mode: false,\n      product_units: 0,\n      batch_number: 0,\n      product_discount: 0,\n    });\n\n    const createSlotFormErrors = ref({\n      batch_mode: false,\n      product_units: false,\n      batch_number: false,\n      product_discount: false,\n    });\n\n    return {\n      createSlotFormErrors,\n      createSlotForm,\n      createSlot,\n      productList,\n      startEndpoint,\n      getLucid,\n      openProductMenu,\n      product,\n      productMenu,\n      productMenuRef,\n      disableUpload,\n      slotMenuRef,\n      openSlotMenu,\n      slotMenu,\n      resetForm,\n      messageModalVisible,\n      messageModal,\n      errorModal,\n      getSlotsData,\n      createProduct,\n      invalidProductName,\n      invalidProductDescription,\n      invalidProductCategory,\n      invalidSlotQuantity,\n      invalidProductCollateral,\n      invalidProductStock,\n      invalidProductKeywords,\n      invalidProductImages,\n    };\n  },\n  data() {\n    return {\n      mediaHostURL: HOST + \"/api/media/create-image\",\n      createSlotLoader: false,\n      activeSlotLoader: false,\n      createSlotDialogVisible: false,\n      createSlotIndex: null,\n      deleteProductDialog: false,\n      deleteProductsDialog: false,\n      descriptionLengthLimit: 1000,\n      nameLengthLimit: 200,\n      minProductImages: 5,\n      slotListDialogVisible: false,\n      slotListDialogIndex: null,\n      customers: [\n        {\n          id: 1000,\n          name: \"James Butt\",\n          country: {\n            name: \"Algeria\",\n            code: \"dz\",\n          },\n          company: \"Benton, John B Jr\",\n          date: \"2015-09-13\",\n          status: \"unqualified\",\n          verified: true,\n          activity: 17,\n          representative: {\n            name: \"Ioni Bowcher\",\n            image: \"ionibowcher.png\",\n          },\n          balance: 70663,\n        },\n        {\n          id: 1001,\n          name: \"Josephine Darakjy\",\n          country: {\n            name: \"Egypt\",\n            code: \"eg\",\n          },\n          company: \"Chanay, Jeffrey A Esq\",\n          date: \"2019-02-09\",\n          status: \"proposal\",\n          verified: true,\n          activity: 0,\n          representative: {\n            name: \"Amy Elsner\",\n            image: \"amyelsner.png\",\n          },\n          balance: 82429,\n        },\n        {\n          id: 1002,\n          name: \"Art Venere\",\n          country: {\n            name: \"Panama\",\n            code: \"pa\",\n          },\n          company: \"Chemel, James L Cpa\",\n          date: \"2017-05-13\",\n          status: \"qualified\",\n          verified: false,\n          activity: 63,\n          representative: {\n            name: \"Asiya Javayant\",\n            image: \"asiyajavayant.png\",\n          },\n          balance: 28334,\n        },\n        {\n          id: 1003,\n          name: \"Lenna Paprocki\",\n          country: {\n            name: \"Slovenia\",\n            code: \"si\",\n          },\n          company: \"Feltz Printing Service\",\n          date: \"2020-09-15\",\n          status: \"new\",\n          verified: false,\n          activity: 37,\n          representative: {\n            name: \"Xuxue Feng\",\n            image: \"xuxuefeng.png\",\n          },\n          balance: 88521,\n        },\n        {\n          id: 1004,\n          name: \"Donette Foller\",\n          country: {\n            name: \"South Africa\",\n            code: \"za\",\n          },\n          company: \"Printing Dimensions\",\n          date: \"2016-05-20\",\n          status: \"proposal\",\n          verified: true,\n          activity: 33,\n          representative: {\n            name: \"Asiya Javayant\",\n            image: \"asiyajavayant.png\",\n          },\n          balance: 93905,\n        },\n        {\n          id: 1005,\n          name: \"Simona Morasca\",\n          country: {\n            name: \"Egypt\",\n            code: \"eg\",\n          },\n          company: \"Chapman, Ross E Esq\",\n          date: \"2018-02-16\",\n          status: \"qualified\",\n          verified: false,\n          activity: 68,\n          representative: {\n            name: \"Ivan Magalhaes\",\n            image: \"ivanmagalhaes.png\",\n          },\n          balance: 50041,\n        },\n      ],\n      maxProductImages: 5,\n      selectedProducts: null,\n      filters: {},\n      categories: [\n        { name: \"Home\", code: \"home\" },\n        { name: \"Electronics\", code: \"electronics\" },\n        { name: \"Fashion\", code: \"fashion\" },\n        { name: \"Beauty\", code: \"beauty\" },\n        { name: \"Toys\", code: \"toys\" },\n        { name: \"Tools\", code: \"tools\" },\n        { name: \"Sports\", code: \"sports\" },\n        { name: \"Health\", code: \"health\" },\n        { name: \"Books\", code: \"books\" },\n        { name: \"Automotive\", code: \"automotive\" },\n        { name: \"Appliances\", code: \"appliances\" },\n        { name: \"Furniture\", code: \"furniture\" },\n      ],\n      statuses: [\n        { label: \"STOCK\", value: \"stock\" },\n        { label: \"LOW\", value: \"low\" },\n        { label: \"OUT\", value: \"out\" },\n      ],\n    };\n  },\n  created() {\n    this.setupFilters();\n  },\n  computed: {\n    computedMode() {\n      return this.createSlotForm.batch_mode ? \"batch\" : \"unit\";\n    },\n    computedSlots() {\n      if (!this.createSlotForm.batch_mode) {\n        return this.createSlotForm.product_units;\n      }\n\n      if (this.createSlotForm.batch_mode) {\n        return this.createSlotForm.batch_number;\n      }\n\n      return 0;\n    },\n\n    computedUnits() {\n      if (!this.createSlotForm.batch_mode) {\n        return this.createSlotForm.product_units;\n      }\n\n      if (this.createSlotForm.batch_mode) {\n        return (\n          this.createSlotForm.product_units * this.createSlotForm.batch_number\n        );\n      }\n\n      return 0;\n    },\n\n    computedCollateral() {\n      if (!this.createSlotForm.batch_mode) {\n        let total =\n          this.productList[this.createSlotIndex].collateral *\n          this.createSlotForm.product_units;\n        return `${total} ADA`;\n      }\n\n      if (this.createSlotForm.batch_mode) {\n        let units =\n          this.createSlotForm.product_units * this.createSlotForm.batch_number;\n        let total = this.productList[this.createSlotIndex].collateral * units;\n        return `${total} ADA`;\n      }\n\n      return 0;\n    },\n\n    computedPrice() {\n      if (!this.createSlotForm.batch_mode) {\n        let total = this.productList[this.createSlotIndex].price;\n        return `${total} ADA`;\n      }\n\n      if (this.createSlotForm.batch_mode) {\n        let originalPrice = this.productList[this.createSlotIndex].price;\n\n        let discountPercentage = this.createSlotForm.product_discount;\n\n        let discountAmount = (originalPrice * discountPercentage) / 100;\n\n        let discountedPrice = originalPrice - discountAmount;\n\n        return `${originalPrice} ADA - ${discountPercentage} % = ${discountedPrice} ADA`;\n      }\n\n      return 0;\n    },\n  },\n  methods: {\n    async runTX() {\n      const tx =\n        \"84a400800181a300581d701fb4024cc499be27f67a2901b4d116dde050c0e5f6564222ed19adff011a08f0d180028201d8185845d8799f004777616974696e67d87980d87980d87980581c4068ce72a0f73e850f19899a10b82ec534a55a6d860e5c5267dca2b9d87a801b00000001a13b86001a08f0d180ff02000e81581c4068ce72a0f73e850f19899a10b82ec534a55a6d860e5c5267dca2b9a0f5f6\";\n      const res = await balanceTx(tx);\n\n      console.log(res);\n    },\n    async activeSlot(actived, data) {\n      this.activeSlotLoader = true;\n\n      if (actived === \"false\") {\n        const addr = await this.getLucid.wallet.address();\n        const address = await getAddressDetails(addr);\n\n        const params = {\n          slot_id: data,\n          seller_pubkeyhash: address.paymentCredential.hash,\n        };\n\n        await this.startEndpoint(params)\n          .then((res) => balanceTx(res.response.payload.transaction))\n          .then((tx) => {\n            console.log(tx);\n\n            this.$toast.add({\n              severity: \"success\",\n              summary: \"Successful\",\n              detail: \"Transaction sent to the network.\",\n              life: 5000,\n            });\n          })\n          .catch((err) => {\n            console.error(err);\n\n            this.$toast.add({\n              severity: \"error\",\n              summary: \"Error Message\",\n              detail: \"Try again later.\",\n              life: 5000,\n            });\n          });\n      }\n\n      if (actived === \"true\") {\n        await balanceTx(data)\n          .then((tx) => {\n            console.log(tx);\n\n            this.$toast.add({\n              severity: \"success\",\n              summary: \"Successful\",\n              detail: \"Transaction sent to the network.\",\n              life: 5000,\n            });\n          })\n          .catch((err) => {\n            console.error(err);\n\n            this.$toast.add({\n              severity: \"error\",\n              summary: \"Error Message\",\n              detail: \"Transaction canceled.\",\n              life: 5000,\n            });\n          });\n      }\n\n      this.activeSlotLoader = false;\n    },\n    getStateBarValue(e) {\n      return e * 20;\n    },\n    openSlotListDialog(productIndex) {\n      if (this.productList[productIndex].slots_count < 1) {\n        return;\n      }\n\n      this.slotListDialogIndex = productIndex;\n      this.slotListDialogVisible = true;\n    },\n    onBeforeUpload() {\n      if (this.product.image_set.length < this.maxProductImages) {\n        this.disableUpload = false;\n      }\n    },\n    openMessageDialog(type, message) {\n      this.messageModalVisible = true;\n\n      if (type === \"response\") {\n        this.messageModal = message.response.message;\n      }\n\n      if (type === \"error\") {\n        this.errorModal = message.response.errors;\n      }\n    },\n    formatDate(e) {\n      return e.split(\".\")[0];\n    },\n    closeAllModals() {\n      this.messageModalVisible = false;\n    },\n    onAdvancedUpload(e) {\n      const response = JSON.parse(e.xhr.response);\n\n      if (response.success === true) {\n        this.product.image_set.push(...response.payload);\n\n        if (this.product.image_set.length >= this.maxProductImages) {\n          this.disableUpload = true;\n        }\n\n        this.$toast.add({\n          severity: \"info\",\n          summary: \"Success\",\n          detail: this.product.image_set.length + \" File Uploaded\",\n          life: 3000,\n        });\n      }\n    },\n    formatCurrency(value) {\n      if (value) {\n        return value + \" ADA\";\n      }\n    },\n    openProductDialog() {\n      this.resetForm();\n      this.createSlotDialogVisible = true;\n    },\n    closeProductDialog() {\n      this.createSlotDialogVisible = false;\n    },\n    async createSlots() {\n      this.createSlotFormErrors.product_units = this.checkUnitNumber(\n        this.createSlotForm.product_units\n      );\n\n      this.createSlotFormErrors.batch_number = this.checkBatchNumber(\n        this.createSlotForm.batch_mode,\n        this.createSlotForm.batch_number\n      );\n\n      this.createSlotFormErrors.product_discount = this.checkProductDiscount(\n        this.createSlotForm.product_discount\n      );\n\n      if (Object.values(this.createSlotFormErrors).includes(true)) {\n        return;\n      }\n\n      const params = {\n        wallet_id: \"c08b3754a3fc2c4cb063e12295e903d14edc899d\",\n        product_id: this.productList[this.createSlotIndex].id,\n        ...this.createSlotForm,\n      };\n\n      console.log(params);\n\n      this.createSlotLoader = true;\n\n      await this.createSlot(params)\n        .then((res) => {\n          if (res.response.success === true) {\n            this.createSlotDialogVisible = false;\n\n            this.openSlotListDialog(this.createSlotIndex);\n\n            this.$toast.add({\n              severity: \"success\",\n              summary: \"Successful\",\n              detail: \"Check the slot folder.\",\n              life: 5000,\n            });\n          }\n\n          if (res.response.success === false) {\n            this.$toast.add({\n              severity: \"error\",\n              summary: \"Error Message\",\n              detail: \"Try again later.\",\n              life: 3000,\n            });\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n          this.$toast.add({\n            severity: \"error\",\n            summary: \"Error Message\",\n            detail: \"Please try again later.\",\n            life: 3000,\n          });\n        })\n        .finally(() => (this.createSlotLoader = false));\n    },\n    checkUnitNumber(value) {\n      if (!value) {\n        return true;\n      }\n\n      if (typeof value !== \"number\") {\n        return true;\n      }\n\n      if (value < 1) {\n        return true;\n      }\n\n      return false;\n    },\n    checkBatchNumber(batchMode, value) {\n      if (batchMode === true) {\n        if (!value) {\n          return true;\n        }\n\n        if (typeof value !== \"number\") {\n          return true;\n        }\n\n        if (value < 1) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    checkProductDiscount(value) {\n      if (value < 0) {\n        return true;\n      }\n\n      if (typeof value !== \"number\") {\n        return true;\n      }\n\n      return false;\n    },\n\n    openCreateSlotDialog(productIndex) {\n      this.createSlotIndex = productIndex;\n      this.createSlotDialogVisible = true;\n    },\n\n    confirmDeleteProduct(productData) {\n      this.product = productData;\n      this.deleteProductDialog = true;\n    },\n\n    deleteProduct() {\n      this.productList = this.productList.filter(\n        (val) => val.id !== this.product.id\n      );\n\n      this.deleteProductDialog = false;\n\n      this.resetForm();\n\n      this.$toast.add({\n        severity: \"success\",\n        summary: \"Successful\",\n        detail: \"Product Deleted\",\n        life: 3000,\n      });\n    },\n    checkMainImage(e) {\n      return this.product.image_main === e;\n    },\n    setMainImage(e) {\n      this.product.image_main = e;\n    },\n    getImages(product) {\n      const data = product.image_set;\n\n      return data.map((imageId) => ({\n        main: product.image_main,\n        id: imageId,\n        image: product.image_base + product.image_path + imageId,\n      }));\n    },\n    exportCSV() {\n      this.$refs.productListTable.exportCSV();\n    },\n    confirmDeleteSelected() {\n      this.deleteProductsDialog = true;\n    },\n    deleteSelectedProducts() {\n      this.productList = this.productList.filter(\n        (value) => !this.selectedProducts.includes(value)\n      );\n      this.deleteProductsDialog = false;\n      this.selectedProducts = null;\n      this.$toast.add({\n        severity: \"success\",\n        summary: \"Successful\",\n        detail: \"Products Deleted\",\n        life: 3000,\n      });\n    },\n    setupFilters() {\n      this.filters = {\n        global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      };\n    },\n    getStatusLabel(status) {\n      switch (status) {\n        case \"stock\":\n          return \"success\";\n\n        case \"low\":\n          return \"warning\";\n\n        case \"out\":\n          return \"danger\";\n\n        default:\n          return null;\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"css\" scoped>\n::v-deep(.p-progressbar) {\n  height: 4px;\n}\n\n.column-block-row {\n  display: flex;\n  justify-content: space-between;\n}\n\n.column-block-row span:nth-child(2) {\n  color: var(--text-b);\n  font-size: var(--text-size-a);\n  font-weight: 500;\n}\n\n.disabled {\n  pointer-events: none;\n}\n\n.network-analyzer {\n  display: flex;\n  align-items: center;\n  margin-right: 1rem;\n}\n\n.network-analyzer span {\n  margin-left: 1rem;\n  font-size: var(--text-size-a);\n  font-weight: 500;\n  color: var(--blue-c);\n}\n\n.dialog-title {\n  font-size: var(--text-size-f);\n  font-weight: bold;\n}\n\n.loader {\n  width: 10px;\n  aspect-ratio: 1;\n  border-radius: 50%;\n  background: var(--blue-c);\n  box-shadow: 0 0 0 0 var(--blue-s);\n  animation: l1 1s infinite;\n}\n@keyframes l1 {\n  100% {\n    box-shadow: 0 0 0 20px #0000;\n  }\n}\n\n.dialog-header {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  justify-content: space-between;\n}\n\n.switch-group {\n  display: flex;\n  align-items: center;\n}\n\n.switch-group span {\n  margin-left: 0.5rem;\n  color: var(--text-b);\n  cursor: pointer;\n}\n\n.createslot-b-form {\n  margin-bottom: 0rem;\n}\n\n.column-block {\n  display: block;\n}\n\n.column-block div:nth-child(1) {\n  line-height: 3rem;\n  font-weight: 400;\n  font-size: var(--text-size-b);\n}\n.createslot {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  min-height: 685px;\n}\n\n.createslot-wrap {\n  width: 100%;\n}\n\n.createslot-b-total {\n  color: var(--text-w);\n  margin-top: 0rem;\n  margin-bottom: 0rem;\n  background: var(--blue-c);\n  border-radius: 8px;\n  padding: 1rem;\n  box-shadow: var(--shadow-b);\n}\n\n.createslot-b-total p {\n  line-height: 1rem;\n}\n\n.createslot-b-total p:nth-child(1) {\n  font-size: var(--text-size-f);\n  font-weight: 600;\n}\n\n.product-image-main {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 80px;\n}\n.product-image-main div {\n  padding: 0.25rem;\n  border: 1px solid transparent;\n  border-radius: 6px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 1rem;\n}\n\n.product-image-main div.mainImage {\n  border: 1px solid var(--blue-a);\n}\n.product-image-wrap {\n  display: block;\n}\n.product-image-preview {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.product-image-preview img {\n  border-radius: 18px;\n  width: 300px;\n  height: 300px;\n}\n\n.confirmation-content {\n  display: flex;\n  align-items: center;\n}\n\n.confirmation-content span {\n  margin-left: 1rem;\n}\n.table-tag {\n  padding: 0.5rem 0;\n}\n\n.table-image {\n  width: 80px;\n  height: 80px;\n}\n.table-buttons {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.product-upload small {\n  padding: 5px;\n  line-height: 50px;\n}\n.p-counter {\n  font-weight: 500;\n  text-align: right;\n  padding: 1px 5px;\n}\n.invalid {\n  border: 1px solid red;\n  color: red;\n  border-radius: 6px;\n}\n\nimg {\n  border-radius: 8px;\n}\n.slots {\n  display: flex;\n  justify-content: center;\n  padding-left: 56px;\n  width: 100%;\n  background-size: 156.45vw 99.03vw, 156.45vw 99.03vw, 156.45vw 99.03vw,\n    226.86vw 145.44vw, 226.86vw 145.44vw, 226.86vw 145.44vw, 171.96vw 110.31vw,\n    171.96vw 110.31vw, 171.96vw 110.31vw, 130.29vw 83.58vw, 130.29vw 83.58vw,\n    130.29vw 83.58vw, 198vw 126.9vw, 198vw 126.9vw, 198vw 126.9vw, 300vw 192vw,\n    300vw 192vw, 300vw 192vw;\n\n  background-position: 37.97vw calc(((300vw - 100vh) / 2 - 85.77vw) * -1),\n    37.97vw calc(((300vw - 100vh) / 2 - 85.77vw) * -1),\n    37.97vw calc(((300vw - 100vh) / 2 - 85.77vw) * -1),\n    -100vw calc(((300vw - 100vh) / 2 - 154.56vw) * -1),\n    -100vw calc(((300vw - 100vh) / 2 - 154.56vw) * -1),\n    -100vw calc(((300vw - 100vh) / 2 - 154.56vw) * -1),\n    13.34vw calc(((300vw - 100vh) / 2 - 53.88vw) * -1),\n    13.34vw calc(((300vw - 100vh) / 2 - 53.88vw) * -1),\n    13.34vw calc(((300vw - 100vh) / 2 - 53.88vw) * -1),\n    10.64vw calc(((300vw - 100vh) / 2 - 17.19vw) * -1),\n    10.64vw calc(((300vw - 100vh) / 2 - 17.19vw) * -1),\n    10.64vw calc(((300vw - 100vh) / 2 - 17.19vw) * -1),\n    -49vw calc(((300vw - 100vh) / 2 - 41.1vw) * -1),\n    -49vw calc(((300vw - 100vh) / 2 - 41.1vw) * -1),\n    -49vw calc(((300vw - 100vh) / 2 - 41.1vw) * -1),\n    -100vw calc(((300vw - 100vh) / 2 - 78vw) * -1),\n    -100vw calc(((300vw - 100vh) / 2 - 78vw) * -1),\n    -100vw calc(((300vw - 100vh) / 2 - 78vw) * -1);\n\n  background-image: radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(160, 51, 255, 0.024) 0,\n      rgba(160, 51, 255, 0) 50%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(160, 51, 255, 0.04) 0,\n      rgba(160, 51, 255, 0) 75%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(160, 51, 255, 0.064) 0,\n      rgba(160, 51, 255, 0) 100%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(24, 119, 242, 0.024) 0,\n      rgba(24, 119, 242, 0) 50%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(24, 119, 242, 0.04) 0,\n      rgba(24, 119, 242, 0) 75%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(24, 119, 242, 0.064) 0,\n      rgba(24, 119, 242, 0) 100%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(255, 108, 92, 0.024) 0,\n      rgba(255, 108, 92, 0) 50%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(255, 108, 92, 0.04) 0,\n      rgba(255, 108, 92, 0) 75%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(255, 108, 92, 0.064) 0,\n      rgba(255, 108, 92, 0) 100%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(245, 206, 51, 0.024) 0,\n      rgba(245, 206, 51, 0) 50%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(245, 206, 51, 0.04) 0,\n      rgba(245, 206, 51, 0) 75%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(245, 206, 51, 0.064) 0,\n      rgba(245, 206, 51, 0) 100%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(37, 211, 102, 0.024) 0,\n      rgba(37, 211, 102, 0) 50%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(37, 211, 102, 0.04) 0,\n      rgba(37, 211, 102, 0) 75%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(37, 211, 102, 0.064) 0,\n      rgba(37, 211, 102, 0) 100%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(24, 119, 242, 0.024) 0,\n      rgba(24, 119, 242, 0) 50%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(24, 119, 242, 0.04) 0,\n      rgba(24, 119, 242, 0) 75%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(24, 119, 242, 0.064) 0,\n      rgba(24, 119, 242, 0) 100%\n    );\n}\n\n.slots-wrap {\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  padding: 1rem 2rem;\n}\n\n.slots-card {\n  width: inherit;\n  border-radius: 18px;\n  box-shadow: var(--shadow-a);\n  padding: 0 2rem;\n  background: var(--base-a);\n  overflow-y: hide;\n}\n\n.product-upload {\n  margin-top: 1rem;\n}\n.table-button {\n  margin-left: 1rem;\n}\n\n.field {\n  margin-bottom: 1rem;\n}\n.field-radiobutton {\n  display: flex;\n  align-items: center;\n}\n\n.field-radiobutton label {\n  margin-left: 0.25rem;\n}\n.field-label {\n  line-height: 40px;\n  color: var(--text-a);\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n}\n\n.field-label i {\n  font-size: var(--text-size-a);\n  margin-left: 0.5rem;\n  margin-top: 3px;\n}\n\n.slots-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid var(--border-a);\n  padding: 0.5rem 0;\n}\n\n.slots-header-left {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 1rem 0;\n  text-align: left;\n}\n\n.slots-header-left span:nth-child(1) {\n  font-weight: 700;\n  font-size: var(--text-size-f);\n}\n\n.slots-header-left span:nth-child(2) {\n  font-weight: 400;\n  line-height: 2rem;\n  font-size: var(--text-size-c);\n}\n\n.slots-header-right-search {\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n\n.slots-header-right-search i {\n  right: 0;\n  position: absolute;\n  margin-right: 1rem;\n}\n\n::v-deep(.p-dropdown) {\n  width: initial;\n}\n\n@media only screen and (max-width: 767px) {\n  .slots-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .slots-card {\n    padding: 0 1rem;\n  }\n\n  .slots-wrap {\n    padding: 1rem;\n  }\n}\n\n@media only screen and (min-width: 768px) and (max-width: 991px) {\n  .slots-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .slots-card {\n    padding: 0 1rem;\n  }\n\n  .slots-wrap {\n    padding: 1rem;\n  }\n}\n\n@media only screen and (min-width: 992px) and (max-width: 1199px) {\n  .slots-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .slots-card {\n    padding: 0 1rem;\n  }\n\n  .slots-wrap {\n    padding: 1rem;\n  }\n}\n\n@media only screen and (min-width: 1200px) {\n}\n</style>\n","import { useStore } from \"vuex\";\nimport { computed } from \"vue\";\n\nconst dashboardAPI = () => {\n  const store = useStore();\n\n  const fetchProductData = async (params) =>\n    await store.dispatch(\"dashboard/fetchProductData\", params);\n\n  const createProduct = async (params) =>\n    await store.dispatch(\"dashboard/createProduct\", params);\n\n  const createImages = async (params) =>\n    await store.dispatch(\"dashboard/createImages\", params);\n\n  const createSlot = async (params) =>\n    await store.dispatch(\"dashboard/createSlot\", params);\n\n  const startEndpoint = async (params) =>\n    await store.dispatch(\"dashboard/startEndpoint\", params);\n\n  const getProducts = async (params) =>\n    await store.dispatch(\"dashboard/getProducts\", params);\n\n  const getSlots = async (params) =>\n    await store.dispatch(\"dashboard/getSlots\", params);\n\n  const setupLucid = async (data) =>\n    await store.dispatch(\"dashboard/setupLucid\", data);\n\n  const sleep = (timeInMs) =>\n    new Promise((resolve) => setTimeout(() => resolve(false), timeInMs));\n\n  return {\n    getProductsData: computed(() => store.getters[\"dashboard/getProductsData\"]),\n    getSlotsData: computed(() => store.getters[\"dashboard/getSlotsData\"]),\n    getLucid: computed(() => store.getters[\"dashboard/getLucid\"]),\n    fetchProductData,\n    createProduct,\n    startEndpoint,\n    getProducts,\n    createSlot,\n    setupLucid,\n    createImages,\n    getSlots,\n    sleep,\n  };\n};\n\nexport default dashboardAPI;\n","<template>\n  <div class=\"p-loading\">\n   <div class=\"p-loading-wrap\">\n    <span class=\"bars\"/>\n   </div>\n  </div>\n</template>\n\n<script>\nexport default {};\n</script>\n\n<style lang=\"css\" scoped>\n.p-loading{\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  position: absolute;\n}\n\n.p-loading-wrap{\n    width: 100px;\n    height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.bars {\n  width: 8px;\n  height: 40px;\n  display: inline-block;\n  position: relative;\n  left: calc(50% - 90px);\n  top: 0;\n  border-radius: 4px;\n  color: var(--base-c);\n  box-sizing: border-box;\n  animation: animbars 0.6s linear infinite;\n}\n\n@keyframes animbars {\n  0% {\n    box-shadow: 20px -10px, 40px 10px, 60px 0px;\n  }\n  25% {\n    box-shadow: 20px 0px, 40px 0px, 60px 10px;\n  }\n  50% {\n    box-shadow: 20px 10px, 40px -10px, 60px 0px;\n  }\n  75% {\n    box-shadow: 20px 0px, 40px 0px, 60px -10px;\n  }\n  100% {\n    box-shadow: 20px -10px, 40px 10px, 60px 0px;\n  }\n}\n</style>\n","import { render } from \"./LoadingBars.vue?vue&type=template&id=037e9f12&scoped=true\"\nimport script from \"./LoadingBars.vue?vue&type=script&lang=js\"\nexport * from \"./LoadingBars.vue?vue&type=script&lang=js\"\n\nimport \"./LoadingBars.vue?vue&type=style&index=0&id=037e9f12&lang=css&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-037e9f12\"]])\n\nexport default __exports__","import { render } from \"./DashboardPage.vue?vue&type=template&id=f36416be&scoped=true\"\nimport script from \"./DashboardPage.vue?vue&type=script&lang=js\"\nexport * from \"./DashboardPage.vue?vue&type=script&lang=js\"\n\nimport \"./DashboardPage.vue?vue&type=style&index=0&id=f36416be&lang=css&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f36416be\"]])\n\nexport default __exports__","<template>\n  <div class=\"products\">\n    <!--DIALOG SECTION-->\n    <Dialog\n      v-model:visible=\"messageModalVisible\"\n      modal\n      header=\"Message\"\n      :draggable=\"false\"\n      :style=\"{ width: '35rem' }\"\n      :breakpoints=\"{ '1199px': '75vw', '575px': '90vw' }\"\n    >\n      <p>{{ messageModal }}</p>\n\n      <p v-for=\"e in errorModal\" :key=\"e\">{{ e }}</p>\n\n      <template #footer>\n        <div class=\"modal-footer\">\n          <Button type=\"button\" label=\"Ok\" @click=\"hideModals\" />\n        </div>\n      </template>\n    </Dialog>\n\n    <Dialog\n      v-model:visible=\"deleteProductDialog\"\n      :style=\"{ width: '425px' }\"\n      header=\"Confirm\"\n      :modal=\"true\"\n    >\n      <div class=\"confirmation-content\">\n        <i class=\"pi pi-exclamation-triangle\" style=\"font-size: 2rem\" />\n        <span v-if=\"productData\"\n          >Are you sure you want to delete <b>{{ productData.name }}</b\n          >?</span\n        >\n      </div>\n      <template #footer>\n        <Button\n          label=\"No\"\n          icon=\"pi pi-times\"\n          text\n          @click=\"deleteProductDialog = false\"\n        />\n        <Button label=\"Yes\" icon=\"pi pi-check\" text @click=\"deleteProduct\" />\n      </template>\n    </Dialog>\n\n    <Dialog\n      v-model:visible=\"deleteProductsDialog\"\n      :style=\"{ width: '425px' }\"\n      header=\"Confirm\"\n      :modal=\"true\"\n    >\n      <div class=\"confirmation-content\">\n        <i class=\"pi pi-exclamation-triangle\" style=\"font-size: 2rem\" />\n        <span v-if=\"productData\"\n          >Are you sure you want to delete the selected products?</span\n        >\n      </div>\n      <template #footer>\n        <Button\n          label=\"No\"\n          icon=\"pi pi-times\"\n          text\n          @click=\"deleteProductsDialog = false\"\n        />\n        <Button\n          label=\"Yes\"\n          icon=\"pi pi-check\"\n          text\n          @click=\"deleteSelectedProducts\"\n        />\n      </template>\n    </Dialog>\n\n    <Dialog\n      v-model:visible=\"productDialog\"\n      :style=\"{ width: '450px' }\"\n      header=\"Product details\"\n      :modal=\"true\"\n      :draggable=\"false\"\n      :closeOnEscape=\"false\"\n      class=\"p-fluid\"\n    >\n      <Carousel\n        v-if=\"productData.image_base\"\n        :value=\"getImages(productData)\"\n        :numVisible=\"1\"\n        :numScroll=\"1\"\n        orientation=\"horizontal\"\n        verticalViewPortHeight=\"300px\"\n        contentClass=\"flex align-items-center\"\n      >\n        <template #item=\"slotProps\">\n          <div class=\"product-image-wrap\">\n            <div class=\"product-image-preview\">\n              <Image\n                :src=\"slotProps.data.image\"\n                imageStyle=\"object-fit: contain;\"\n                alt=\"Image\"\n                width=\"300\"\n                height=\"300\"\n                preview\n              />\n            </div>\n          </div>\n        </template>\n      </Carousel>\n\n      <div v-if=\"productData.image_base\" class=\"field\">\n        <label for=\"mainImage\" class=\"field-label\">\n          <span>Thumbnail</span>\n          <i class=\"pi pi-info-circle\" v-tooltip.top=\"'First image.'\" />\n        </label>\n\n        <div id=\"mainImage\" class=\"product-image-main\">\n          <div\n            v-for=\"item in getImages(productData)\"\n            :key=\"item\"\n            :class=\"{ mainImage: isMainImage(item.id) }\"\n            @click=\"setMainImage(item.id)\"\n          >\n            <Image\n              :src=\"item.image\"\n              imageStyle=\"border-radius: 6px;display: flex;align-items: center; object-fit: contain;\"\n              alt=\"Image\"\n              width=\"50\"\n              height=\"50\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div class=\"field\">\n        <label for=\"name\" class=\"field-label\">\n          <span>Name</span>\n          <i\n            class=\"pi pi-info-circle\"\n            v-tooltip.top=\"'Declarative and descriptive name of the product.'\"\n          />\n        </label>\n\n        <InputText\n          id=\"name\"\n          placeholder=\"Name\"\n          v-model=\"productData.name\"\n          required=\"true\"\n          autofocus\n          :class=\"{ invalid: formValidator.value.name }\"\n        />\n\n        <small class=\"p-error\" v-if=\"formValidator.value.name\">\n          {{ formValidatorText.name }}\n        </small>\n      </div>\n\n      <div class=\"field\">\n        <label for=\"description\" class=\"field-label\">\n          <span>Description</span>\n          <i\n            class=\"pi pi-info-circle\"\n            v-tooltip.top=\"'Write a clear description about the product.'\"\n          />\n        </label>\n        <Textarea\n          id=\"description\"\n          v-model=\"productData.description\"\n          placeholder=\"\"\n          required=\"true\"\n          rows=\"3\"\n          cols=\"20\"\n          autoResize\n          :class=\"{ invalid: formValidator.value.description }\"\n        />\n        <small\n          class=\"p-counter\"\n          :class=\"{\n            invalid: productData.description.length > descriptionLimit,\n          }\"\n          v-if=\"!formValidator.value.description\"\n        >\n          {{ productData.description.length }} / {{ descriptionLimit }}\n        </small>\n\n        <small class=\"p-error\" v-if=\"formValidator.value.description\"\n          >{{ formValidatorText.description }}\n        </small>\n      </div>\n\n      <div class=\"formgrid grid\">\n        <div class=\"field col\">\n          <label for=\"category\" class=\"field-label\">\n            <span>Category</span>\n            <i\n              class=\"pi pi-info-circle\"\n              v-tooltip.top=\"\n                'Select the category corresponding to the product.'\n              \"\n            />\n          </label>\n          <Dropdown\n            v-model=\"productData.category\"\n            :options=\"categories\"\n            id=\"category\"\n            placeholder=\"Select\"\n            optionLabel=\"name\"\n            :class=\"{ invalid: formValidator.value.category }\"\n            :highlightOnSelect=\"false\"\n          />\n          <small class=\"p-error\" v-if=\"formValidator.value.category\"\n            >{{ formValidatorText.category }}\n          </small>\n        </div>\n\n        <div class=\"field col\">\n          <label for=\"price\" class=\"field-label\">\n            <span>Price</span>\n            <i\n              class=\"pi pi-info-circle\"\n              v-tooltip.top=\"'Product price in ADA.'\"\n            />\n          </label>\n          <InputNumber\n            id=\"price\"\n            v-model=\"productData.price\"\n            showButtons\n            integeronly\n            placeholder=\"ADA\"\n            suffix=\" ADA\"\n            locale=\"en-US\"\n            :min=\"1\"\n            :class=\"{ invalid: formValidator.value.price }\"\n          />\n          <small class=\"p-error\" v-if=\"formValidator.value.price\">{{\n            formValidatorText.price\n          }}</small>\n        </div>\n\n        <div class=\"field col\">\n          <label for=\"collateral\" class=\"field-label\">\n            <span>Collateral</span>\n            <i\n              class=\"pi pi-info-circle\"\n              v-tooltip.top=\"\n                'Assign an ADA amount as your compliance guarantee.'\n              \"\n            />\n          </label>\n          <InputNumber\n            id=\"collateral\"\n            v-model=\"productData.collateral\"\n            showButtons\n            integeronly\n            placeholder=\"ADA\"\n            suffix=\" ADA\"\n            locale=\"en-US\"\n            :min=\"1\"\n            :class=\"{ invalid: formValidator.value.collateral }\"\n          />\n          <small class=\"p-error\" v-if=\"formValidator.value.collateral\"\n            >{{ formValidatorText.collateral }}\n          </small>\n        </div>\n\n        <div class=\"field col\">\n          <label for=\"quantity\" class=\"field-label\">\n            <span>Stock</span>\n            <i\n              class=\"pi pi-info-circle\"\n              v-tooltip.top=\"'Current number of units of the product.'\"\n            />\n          </label>\n          <InputNumber\n            id=\"quantity\"\n            placeholder=\"Stock\"\n            v-model=\"productData.stock\"\n            integeronly\n            :min=\"0\"\n            :max=\"1000000\"\n            :class=\"{ invalid: formValidator.value.stock }\"\n          />\n\n          <small class=\"p-error\" v-if=\"formValidator.value.stock\"\n            >{{ formValidatorText.stock }}\n          </small>\n        </div>\n        <div class=\"field col\">\n          <label for=\"keywords\" class=\"field-label\">Keywords</label>\n          <Chips\n            id=\"keywords\"\n            v-model=\"productData.keywords\"\n            :allowDuplicate=\"false\"\n            separator=\",\"\n            :max=\"3\"\n            placeholder=\"Separate with (,) or  ↵\"\n            :class=\"{ invalid: formValidator.value.keywords }\"\n          />\n          <small class=\"p-error\" v-if=\"formValidator.value.keywords\">\n            {{ formValidatorText.keywords }}\n          </small>\n        </div>\n      </div>\n\n      <!--FILEUPLOAD-->\n      <div class=\"field\">\n        <div class=\"product-upload\">\n          <label for=\"fileupload\" class=\"field-label\">\n            <span>Images</span>\n            <i\n              class=\"pi pi-info-circle\"\n              v-tooltip.top=\"'The first image is the preview image.'\"\n            />\n          </label>\n          <Toast />\n\n          <FileUpload\n            name=\"image\"\n            :customUpload=\"true\"\n            :multiple=\"true\"\n            :fileLimit=\"5\"\n            accept=\"image/*\"\n            :maxFileSize=\"1000000\"\n            @select=\"onSelectedFiles\"\n          >\n            <template\n              #header=\"{ chooseCallback, uploadCallback, clearCallback, files }\"\n            >\n              <div class=\"upload-buttons\">\n                <div\n                  class=\"upload-button\"\n                  :class=\"{ disabled: disableUpload }\"\n                  @click=\"chooseCallback()\"\n                >\n                  <i class=\"pi pi pi-images\" />\n                </div>\n\n                <div\n                  class=\"upload-button\"\n                  :class=\"{ disabled: !files || files.length === 0 }\"\n                  @click=\"uploadEvent(uploadCallback, files)\"\n                >\n                  <i class=\"pi pi-cloud-upload\" />\n                </div>\n\n                <div\n                  class=\"upload-button\"\n                  :class=\"{ disabled: !files || files.length === 0 }\"\n                  @click=\"clearCallback()\"\n                >\n                  <i class=\"pi pi-times\" />\n                </div>\n              </div>\n            </template>\n\n            <template #content=\"{ files, removeFileCallback }\">\n              <div v-if=\"files.length > 0\">\n                <div class=\"upload-list\">\n                  <div\n                    v-for=\"(file, index) of files\"\n                    :key=\"file.name + file.type + file.size\"\n                    class=\"upload-box\"\n                  >\n                    <img\n                      role=\"presentation\"\n                      :alt=\"file.name\"\n                      :src=\"file.objectURL\"\n                      width=\"100\"\n                      height=\"50\"\n                    />\n\n                    <span class=\"filename\">{{ file.name }}</span>\n\n                    <div class=\"filename\">{{ formatSize(file.size) }}</div>\n\n                    <div class=\"upload-control\">\n                      <div class=\"pending-badge\">\n                        <span>Pending</span>\n                      </div>\n\n                      <div\n                        class=\"upload-remove\"\n                        @click=\"\n                          onRemoveTemplatingFile(\n                            file,\n                            removeFileCallback,\n                            index\n                          )\n                        \"\n                      >\n                        Delete\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </template>\n            <template #empty>\n              <div v-if=\"filesUploaded === false\" class=\"upload-banner\">\n                <i class=\"pi pi-cloud-upload\" />\n                <span>Drag and drop files to here to upload.</span>\n              </div>\n\n              <div v-if=\"filesUploaded === true\" class=\"upload-banner\">\n                <i class=\"pi pi-cloud-upload\" style=\"color: var(--green-a)\" />\n                <span>Successfully completed</span>\n              </div>\n            </template>\n          </FileUpload>\n\n          <small class=\"invalid\" v-if=\"formValidator.value.images\">\n            {{ formValidatorText.images }}\n          </small>\n        </div>\n      </div>\n      <!--FILEUPLOAD-->\n\n      <template #footer>\n        <Button label=\"Cancel\" text @click=\"hideDialog\" />\n        <Button label=\"Save\" text @click=\"submitForm\" />\n      </template>\n    </Dialog>\n    <!--DIALOG SECTION-->\n\n    <!---CONTENT-->\n    <div class=\"products-wrap\">\n      <div class=\"products-card\">\n        <DataTable\n          ref=\"dt\"\n          resizableColumns\n          :value=\"products\"\n          v-model:selection=\"selectedProducts\"\n          selectionMode=\"single\"\n          dataKey=\"id\"\n          :paginator=\"true\"\n          :rows=\"10\"\n          :filters=\"filters\"\n          paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n          :rowsPerPageOptions=\"[5, 10, 25]\"\n          currentPageReportTemplate=\"{first} to {last} of {totalRecords} items\"\n        >\n          <template #header>\n            <div class=\"products-header\">\n              <div class=\"products-header-left\">\n                <span>Products</span>\n                <span>Create and modify product and more...</span>\n              </div>\n\n              <span class=\"p-input-icon-left\">\n                <i class=\"pi pi-search\" />\n                <InputText\n                  v-model=\"filters['global'].value\"\n                  placeholder=\"Search\"\n                />\n              </span>\n            </div>\n\n            <Toolbar>\n              <template #start>\n                <Button label=\"New\" icon=\"pi pi-plus\" @click=\"newProduct\" />\n                <Button\n                  label=\"Delete\"\n                  icon=\"pi pi-trash\"\n                  style=\"margin-left: 1rem\"\n                  @click=\"confirmDeleteSelected\"\n                  :disabled=\"!selectedProducts || !selectedProducts.length\"\n                />\n              </template>\n\n              <template #end>\n                <Button\n                  label=\"Export\"\n                  icon=\"pi pi-upload\"\n                  @click=\"exportCSV($event)\"\n                />\n              </template>\n            </Toolbar>\n          </template>\n\n          <Column\n            selectionMode=\"multiple\"\n            style=\"width: 3rem\"\n            :exportable=\"false\"\n          />\n\n          <Column header=\"Image\" style=\"max-width: 8rem\">\n            <template #body=\"slotProps\">\n              <Image\n                :src=\"\n                  slotProps.data.image_base +\n                  slotProps.data.image_path +\n                  slotProps.data.image_main\n                \"\n                :alt=\"slotProps.data.image_main\"\n                width=\"70\"\n                height=\"70\"\n                imageStyle=\"border-radius: 6px; object-fit: contain;\"\n                preview\n              />\n            </template>\n          </Column>\n\n          <Column field=\"id\" header=\"Code\" sortable style=\"min-width: 12rem\" />\n\n          <Column\n            field=\"name\"\n            header=\"Name\"\n            sortable\n            style=\"max-width: 16rem; white-space: break-spaces\"\n          >\n            <template #body=\"slotProps\">\n              {{ slotProps.data.name.slice(0, 50) }}...\n            </template>\n          </Column>\n\n          <Column\n            field=\"category\"\n            header=\"Category\"\n            sortable\n            style=\"min-width: 8rem; text-transform: capitalize\"\n          >\n            <template #body=\"slotProps\">\n              {{ slotProps.data.category.code || slotProps.data.category }}\n            </template>\n          </Column>\n\n          <Column field=\"price\" header=\"Price\" sortable style=\"min-width: 8rem\">\n            <template #body=\"slotProps\">\n              {{ formatCurrency(slotProps.data.price) }}\n            </template>\n          </Column>\n\n          <Column\n            field=\"collateral\"\n            header=\"Collateral\"\n            sortable\n            style=\"min-width: 8rem\"\n          >\n            <template #body=\"slotProps\">\n              {{ formatCurrency(slotProps.data.collateral) }}\n            </template>\n          </Column>\n\n          <Column\n            field=\"moderated\"\n            header=\"Status\"\n            sortable\n            style=\"min-width: 8rem\"\n          >\n            <template #body=\"slotProps\">\n              <div\n                class=\"table-tag\"\n                :class=\"{\n                  pending: slotProps.data.moderated === 0,\n                  moderated: slotProps.data.moderated === 1,\n                }\"\n              >\n                {{ checkModerated(slotProps.data.moderated) }}\n              </div>\n            </template>\n          </Column>\n\n          <Column\n            field=\"stock_status\"\n            header=\"Stock\"\n            sortable\n            style=\"min-width: 8rem\"\n          >\n            <template #body=\"slotProps\">\n              <Tag\n                :value=\"slotProps.data.stock_status\"\n                :severity=\"getStatusLabel(slotProps.data.stock_status)\"\n              />\n            </template>\n          </Column>\n\n          <Column\n            field=\"rating\"\n            header=\"Reviews\"\n            sortable\n            style=\"min-width: 8rem\"\n          >\n            <template #body=\"slotProps\">\n              <Rating\n                :modelValue=\"slotProps.data.rating\"\n                :readonly=\"true\"\n                :cancel=\"false\"\n              />\n            </template>\n          </Column>\n\n          <Column :exportable=\"false\" style=\"min-width: 8rem\">\n            <template #body=\"slotProps\">\n              <div class=\"table-buttons\">\n                <Button\n                  class=\"table-button\"\n                  icon=\"pi pi-pencil\"\n                  outlined\n                  rounded\n                  @click=\"editProduct(slotProps.data)\"\n                />\n                <Button\n                  class=\"table-button\"\n                  icon=\"pi pi-trash\"\n                  outlined\n                  rounded\n                  @click=\"confirmDeleteProduct(slotProps.data)\"\n                />\n              </div>\n            </template>\n          </Column>\n        </DataTable>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport dashboardAPI from \"@/pages/dashboard/api/index\";\nimport { FilterMatchMode } from \"primevue/api\";\nimport { HOST } from \"@/api/index\";\nimport { ref } from \"vue\";\nimport { usePrimeVue } from \"primevue/config\";\nimport { useToast } from \"primevue/usetoast\";\n\nexport default {\n  setup() {\n    const { getProductsData, createProduct, createImages } = dashboardAPI();\n\n    let productData = ref({\n      id: null,\n      seller_id: null,\n      name: null,\n      description: \"\",\n      category: null,\n      price: null,\n      collateral: null,\n      stock: null,\n      stock_status: null,\n      slots: null,\n      keywords: null,\n      theme: null,\n      country: null,\n      moderated: false,\n      image_base: null,\n      image_path: null,\n      image_main: null,\n      image_set: [],\n      created_at: null,\n      schema_t: null,\n      schema_v: null,\n    });\n\n    let formValidator = ref({\n      name: false,\n      description: false,\n      category: false,\n      price: false,\n      collateral: false,\n      stock: false,\n      keywords: false,\n      images: false,\n    });\n\n    let messageModalVisible = ref(false);\n    let messageModal = ref(null);\n    let errorModal = ref(null);\n    let disableUpload = ref(false);\n\n    const resetForm = () => {\n      productData.value = {\n        id: null,\n        seller_id: null,\n        name: null,\n        description: \"\",\n        category: null,\n        price: null,\n        collateral: null,\n        stock: null,\n        stock_status: null,\n        slots: null,\n        keywords: null,\n        theme: null,\n        country: null,\n        moderated: false,\n        image_base: null,\n        image_path: null,\n        image_main: null,\n        image_set: [],\n        created_at: null,\n        schema_t: null,\n        schema_v: null,\n      };\n\n      formValidator.value = ref({\n        name: false,\n        description: false,\n        category: false,\n        price: false,\n        collateral: false,\n        stock: false,\n        keywords: false,\n        images: false,\n      });\n\n      messageModalVisible.value = false;\n      messageModal.value = null;\n      errorModal.value = null;\n      disableUpload.value = false;\n    };\n\n    const totalSize = ref(0);\n    const totalSizePercent = ref(0);\n    const files = ref([]);\n\n    const onRemoveTemplatingFile = (file, removeFileCallback, index) => {\n      removeFileCallback(index);\n      totalSize.value -= parseInt(formatSize(file.size));\n      totalSizePercent.value = totalSize.value / 10;\n    };\n\n    const onClearTemplatingUpload = (clear) => {\n      clear();\n      totalSize.value = 0;\n      totalSizePercent.value = 0;\n    };\n\n    const onSelectedFiles = (event) => {\n      files.value = event.files;\n      files.value.forEach((file) => {\n        totalSize.value += parseInt(formatSize(file.size));\n      });\n    };\n\n    const maxProductImages = ref(5);\n\n    const minProductImages = ref(5);\n\n    const uploadEvent = async (callback, files) => {\n      totalSizePercent.value = totalSize.value / 10;\n\n      if (files.length < maxProductImages.value) {\n        return toast.add({\n          severity: \"error\",\n          summary: \"Try Again\",\n          detail: \"Select at least (5) images\",\n          life: 10000,\n        });\n      }\n\n      if (files.length > maxProductImages.value) {\n        return toast.add({\n          severity: \"error\",\n          summary: \"Try Again\",\n          detail: \"Select only (5) images\",\n          life: 10000,\n        });\n      }\n\n      const formData = new FormData();\n\n      files.forEach((file, index) => {\n        console.log(index);\n\n        formData.append(`image`, file, file.name);\n      });\n\n      await createImages(formData).then((res) => {\n        const data = res.response;\n\n        if (data.success === true) {\n          productData.value.image_set.push(...data.payload);\n          disableUpload.value = true;\n          filesUploaded.value = true;\n          callback();\n\n          toast.add({\n            severity: \"info\",\n            summary: \"Success\",\n            detail: \"Files Uploaded\",\n            life: 5000,\n          });\n        }\n      });\n    };\n\n    const formatSize = (bytes) => {\n      const k = 1024;\n      const dm = 3;\n      const sizes = $primevue.config.locale.fileSizeTypes;\n\n      if (bytes === 0) {\n        return `0 ${sizes[0]}`;\n      }\n\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      const formattedSize = parseFloat((bytes / Math.pow(k, i)).toFixed(dm));\n\n      return `${formattedSize} ${sizes[i]}`;\n    };\n\n    const $primevue = usePrimeVue();\n\n    const toast = useToast();\n\n    const nameLimit = ref(200);\n\n    const descriptionLimit = ref(1000);\n\n    const filesUploaded = ref(false);\n\n    const formValidatorText = ref({\n      name:\n        \"The name is required and max \" + nameLimit.value + \" characters long.\",\n      description:\n        \"The description is required and no maximum \" +\n        descriptionLimit.value +\n        \" characters.\",\n\n      category: \"The category is required.\",\n      price: \"The price is required.\",\n      collateral: \"The collateral is required.\",\n      stock: \"The current stock is required.\",\n      keywords: \"3 keywords are required.\",\n      images:\n        productData.value.image_set.length +\n        \" / \" +\n        minProductImages.value +\n        \"images are required.\",\n    });\n\n    return {\n      descriptionLimit,\n      filesUploaded,\n      formValidatorText,\n      onRemoveTemplatingFile,\n      onClearTemplatingUpload,\n      onSelectedFiles,\n      usePrimeVue,\n      formatSize,\n      uploadEvent,\n      productData,\n      disableUpload,\n      resetForm,\n      messageModalVisible,\n      messageModal,\n      errorModal,\n      totalSizePercent,\n      formValidator,\n      getProductsData,\n      createProduct,\n      createImages,\n      minProductImages,\n      nameLimit,\n    };\n  },\n  data() {\n    return {\n      mediaHostURL: HOST + \"/api/media/create-image\",\n      products: null,\n      productDialog: false,\n      deleteProductDialog: false,\n      deleteProductsDialog: false,\n      selectedProducts: null,\n      filters: {},\n      categories: [\n        { name: \"Home\", code: \"home\" },\n        { name: \"Electronics\", code: \"electronics\" },\n        { name: \"Fashion\", code: \"fashion\" },\n        { name: \"Beauty\", code: \"beauty\" },\n        { name: \"Toys\", code: \"toys\" },\n        { name: \"Tools\", code: \"tools\" },\n        { name: \"Sports\", code: \"sports\" },\n        { name: \"Health\", code: \"health\" },\n        { name: \"Books\", code: \"books\" },\n        { name: \"Automotive\", code: \"automotive\" },\n        { name: \"Appliances\", code: \"appliances\" },\n        { name: \"Furniture\", code: \"furniture\" },\n      ],\n      statuses: [\n        { label: \"STOCK\", value: \"stock\" },\n        { label: \"LOW\", value: \"low\" },\n        { label: \"OUT\", value: \"out\" },\n      ],\n    };\n  },\n  created() {\n    this.setupFilters();\n  },\n  mounted() {\n    this.products = this.getProductsData;\n  },\n  methods: {\n    handleMessage(type, message) {\n      this.messageModalVisible = true;\n\n      if (type === \"response\") {\n        this.messageModal = message.response.message;\n      }\n\n      if (type === \"error\") {\n        this.errorModal = message.response.errors;\n      }\n    },\n    hideModals() {\n      this.messageModalVisible = false;\n    },\n\n    onFileRemoved(e) {\n      console.log(e.files.length);\n\n      if (e.files.length < this.maxProductImages) {\n        this.disableUpload = false;\n      }\n    },\n    onUpload(e) {\n      const response = JSON.parse(e.xhr.response);\n\n      if (response.success === true) {\n        if (this.productData.image_set.length < this.maxProductImages) {\n          this.productData.image_set.push(...response.payload);\n        } else {\n          this.disableUpload = true;\n        }\n      }\n    },\n    formatCurrency(value) {\n      if (value) {\n        return value + \" ADA\";\n      }\n    },\n    newProduct() {\n      this.resetForm();\n      this.productDialog = true;\n    },\n    hideDialog() {\n      this.productDialog = false;\n    },\n    async submitForm() {\n      this.formValidator.value = {\n        name: this.validateName(this.productData.name),\n        description: this.validateDescription(this.productData.description),\n        category: this.validateCategory(this.productData.category),\n        price: this.validatePrice(this.productData.price),\n        collateral: this.validateCollateral(this.productData.collateral),\n        stock: this.validateStock(this.productData.stock),\n        keywords: this.validateKeywords(this.productData.keywords),\n        images: this.validateImages(this.productData.image_set),\n      };\n\n      console.log(this.formValidator.value);\n\n      if (Object.values(this.formValidator.value).includes(true)) {\n        return;\n      }\n\n      const params = {\n        name: this.productData.name,\n        description: this.productData.description,\n        category: this.productData.category.code,\n        price: this.productData.price,\n        collateral: this.productData.collateral,\n        stock: this.productData.stock,\n        keywords: this.productData.keywords.join(\",\"),\n        image_set: this.productData.image_set.join(\",\"),\n      };\n\n      await this.createProduct(params).then((res) => {\n        if (res.response.success === true) {\n          this.$toast.add({\n            severity: \"success\",\n            summary: \"Successful\",\n            detail: \"Product Created\",\n            life: 3000,\n          });\n\n          this.resetForm();\n          this.productDialog = false;\n        }\n      });\n    },\n\n    editProduct(productData) {\n      productData.keywords =\n        typeof productData.keywords === \"string\"\n          ? productData.keywords.split(\",\")\n          : productData.keywords;\n\n      productData.image_set =\n        typeof productData.image_set === \"string\"\n          ? productData.image_set.split(\",\")\n          : productData.image_set;\n\n      let categoryCode = productData.category;\n\n      let categoryName =\n        categoryCode.charAt(0).toUpperCase() + categoryCode.slice(1);\n\n      productData.category = {\n        name: categoryName,\n        code: categoryCode,\n      };\n\n      this.productData = productData;\n\n      this.productDialog = true;\n    },\n\n    confirmDeleteProduct(productData) {\n      this.productData = productData;\n      this.deleteProductDialog = true;\n    },\n\n    deleteProduct() {\n      this.products = this.products.filter(\n        (val) => val.id !== this.productData.id\n      );\n\n      this.deleteProductDialog = false;\n\n      this.resetForm();\n\n      this.$toast.add({\n        severity: \"success\",\n        summary: \"Successful\",\n        detail: \"Product Deleted\",\n        life: 3000,\n      });\n    },\n    isMainImage(e) {\n      return this.productData.image_main === e;\n    },\n    setMainImage(e) {\n      this.productData.image_main = e;\n    },\n    getImages(productData) {\n      const data = productData.image_set;\n\n      return data.map((imageId) => ({\n        main: productData.image_main,\n        id: imageId,\n        image: productData.image_base + productData.image_path + imageId,\n      }));\n    },\n    exportCSV() {\n      this.$refs.dt.exportCSV();\n    },\n    confirmDeleteSelected() {\n      this.deleteProductsDialog = true;\n    },\n    deleteSelectedProducts() {\n      this.products = this.products.filter(\n        (e) => !this.selectedProducts.includes(e)\n      );\n      this.deleteProductsDialog = false;\n      this.selectedProducts = null;\n      this.$toast.add({\n        severity: \"success\",\n        summary: \"Successful\",\n        detail: \"Products Deleted\",\n        life: 3000,\n      });\n    },\n    setupFilters() {\n      this.filters = {\n        global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      };\n    },\n    getStatusLabel(status) {\n      switch (status) {\n        case \"stock\":\n          return \"success\";\n\n        case \"low\":\n          return \"warning\";\n\n        case \"out\":\n          return \"danger\";\n\n        default:\n          return null;\n      }\n    },\n\n    validateName(e) {\n      if (!e) {\n        return true;\n      }\n\n      if (e.length > this.nameLimit) {\n        return true;\n      }\n\n      return false;\n    },\n    validateDescription(e) {\n      if (!e) {\n        return true;\n      }\n\n      if (e.length < 1) {\n        return true;\n      }\n\n      if (e.length > this.descriptionLimit) {\n        return true;\n      }\n\n      return false;\n    },\n\n    validateCategory(e) {\n      return !e ? true : false;\n    },\n\n    validatePrice(e) {\n      if (typeof e !== \"number\") {\n        return true;\n      }\n\n      if (!Number.isInteger(e)) {\n        return true;\n      }\n\n      if (e < 1) {\n        return true;\n      }\n\n      return false;\n    },\n    validateCollateral(e) {\n      if (typeof e !== \"number\") {\n        return true;\n      }\n\n      if (!Number.isInteger(e)) {\n        return true;\n      }\n\n      if (e < 1) {\n        return true;\n      }\n\n      return false;\n    },\n    validateStock(e) {\n      if (typeof e !== \"number\") {\n        return true;\n      }\n\n      if (!Number.isInteger(e)) {\n        return true;\n      }\n\n      if (e < 1) {\n        return true;\n      }\n\n      return false;\n    },\n    validateKeywords(e) {\n      if (!e) {\n        return true;\n      }\n\n      if (e.length < 3) {\n        return true;\n      }\n\n      return false;\n    },\n    validateImages(e) {\n      if (!e) {\n        return true;\n      }\n\n      if (e.length < this.minProductImages) {\n        return true;\n      }\n\n      return false;\n    },\n    checkModerated(e) {\n      if (e === 0) {\n        return \"Pending\";\n      }\n      if (e === 1) {\n        return \"Published\";\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"css\" scoped>\n.pending-badge,\n.completed-badge {\n  background: var(--yellow-b);\n  text-align: center;\n  border-radius: 999px;\n  font-size: var(--text-size-a);\n  padding: 0.25rem;\n  width: 100px;\n}\n\n.completed-badge {\n  background: var(--green-a);\n}\n\n.upload-list {\n  display: flex;\n  flex-direction: column;\n}\n\n.upload-box {\n  border: 1px solid var(--border-a);\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 1rem;\n  border-radius: 8px;\n  padding: 1rem;\n  flex-direction: column;\n}\n\n.upload-control {\n  display: flex;\n  align-items: center;\n  margin-top: 0.5rem;\n}\n\n.upload-remove {\n  padding: 0.25rem 1rem;\n  border-radius: 999px;\n  border: 1px solid var(--border-b);\n  margin-left: 0.5rem;\n  font-size: var(--text-size-a);\n  cursor: pointer;\n}\n\n.upload-banner {\n  display: flex;\n  flex-direction: column;\n  min-height: 200px;\n  justify-content: center;\n  align-items: center;\n}\n\n.upload-banner i {\n  font-size: 4rem;\n}\n\n.upload-banner span {\n  margin-top: 1rem;\n}\n\n.upload-box img {\n  border: 1px solid var(--border-a);\n  border-radius: 8px;\n  height: 125px;\n  object-fit: contain;\n  width: 125px;\n  padding: 0.5rem;\n}\n\n.upload-box .filename {\n  font-size: var(--text-size-a);\n  margin-top: 0.5rem;\n}\n\n.upload-buttons {\n  display: flex;\n  align-items: center;\n}\n\n.upload-button.disabled {\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.upload-button {\n  cursor: pointer;\n  padding: 0.5rem 1rem;\n  border-radius: 8px;\n  margin-right: 1rem;\n  border: 1px solid var(--border-a);\n}\n\n.product-image-main {\n  display: flex;\n  align-items: center;\n  height: 80px;\n}\n.product-image-main div {\n  padding: 0.25rem;\n  border: 1px solid transparent;\n  border-radius: 6px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 1rem;\n}\n\n.product-image-main div.mainImage {\n  border: 1px solid var(--blue-a);\n}\n.product-image-wrap {\n  display: block;\n}\n.product-image-preview {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.product-image-preview img {\n  border-radius: 18px;\n  width: 300px;\n  height: 300px;\n}\n\n.confirmation-content {\n  display: flex;\n  align-items: center;\n}\n\n.confirmation-content span {\n  margin-left: 1rem;\n}\n.table-tag {\n  padding: 0.5rem 0;\n}\n\n.table-tag.moderated {\n}\n\n.table-tag.pending {\n}\n.table-buttons {\n  display: flex;\n  align-items: center;\n}\n.product-upload small {\n  padding: 5px;\n  line-height: 50px;\n}\n.p-counter {\n  font-weight: 500;\n  text-align: right;\n  padding: 1px 5px;\n}\n.invalid {\n  border: 1px solid red;\n  color: red;\n  border-radius: 6px;\n}\n\nimg {\n  border-radius: 8px;\n}\n\n.products {\n  display: flex;\n  justify-content: center;\n  padding-left: 56px;\n  width: 100%;\n  background-size: 156.45vw 99.03vw, 156.45vw 99.03vw, 156.45vw 99.03vw,\n    226.86vw 145.44vw, 226.86vw 145.44vw, 226.86vw 145.44vw, 171.96vw 110.31vw,\n    171.96vw 110.31vw, 171.96vw 110.31vw, 130.29vw 83.58vw, 130.29vw 83.58vw,\n    130.29vw 83.58vw, 198vw 126.9vw, 198vw 126.9vw, 198vw 126.9vw, 300vw 192vw,\n    300vw 192vw, 300vw 192vw;\n\n  background-position: 37.97vw calc(((300vw - 100vh) / 2 - 85.77vw) * -1),\n    37.97vw calc(((300vw - 100vh) / 2 - 85.77vw) * -1),\n    37.97vw calc(((300vw - 100vh) / 2 - 85.77vw) * -1),\n    -100vw calc(((300vw - 100vh) / 2 - 154.56vw) * -1),\n    -100vw calc(((300vw - 100vh) / 2 - 154.56vw) * -1),\n    -100vw calc(((300vw - 100vh) / 2 - 154.56vw) * -1),\n    13.34vw calc(((300vw - 100vh) / 2 - 53.88vw) * -1),\n    13.34vw calc(((300vw - 100vh) / 2 - 53.88vw) * -1),\n    13.34vw calc(((300vw - 100vh) / 2 - 53.88vw) * -1),\n    10.64vw calc(((300vw - 100vh) / 2 - 17.19vw) * -1),\n    10.64vw calc(((300vw - 100vh) / 2 - 17.19vw) * -1),\n    10.64vw calc(((300vw - 100vh) / 2 - 17.19vw) * -1),\n    -49vw calc(((300vw - 100vh) / 2 - 41.1vw) * -1),\n    -49vw calc(((300vw - 100vh) / 2 - 41.1vw) * -1),\n    -49vw calc(((300vw - 100vh) / 2 - 41.1vw) * -1),\n    -100vw calc(((300vw - 100vh) / 2 - 78vw) * -1),\n    -100vw calc(((300vw - 100vh) / 2 - 78vw) * -1),\n    -100vw calc(((300vw - 100vh) / 2 - 78vw) * -1);\n\n  background-image: radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(160, 51, 255, 0.024) 0,\n      rgba(160, 51, 255, 0) 50%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(160, 51, 255, 0.04) 0,\n      rgba(160, 51, 255, 0) 75%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(160, 51, 255, 0.064) 0,\n      rgba(160, 51, 255, 0) 100%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(24, 119, 242, 0.024) 0,\n      rgba(24, 119, 242, 0) 50%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(24, 119, 242, 0.04) 0,\n      rgba(24, 119, 242, 0) 75%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(24, 119, 242, 0.064) 0,\n      rgba(24, 119, 242, 0) 100%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(255, 108, 92, 0.024) 0,\n      rgba(255, 108, 92, 0) 50%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(255, 108, 92, 0.04) 0,\n      rgba(255, 108, 92, 0) 75%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(255, 108, 92, 0.064) 0,\n      rgba(255, 108, 92, 0) 100%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(245, 206, 51, 0.024) 0,\n      rgba(245, 206, 51, 0) 50%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(245, 206, 51, 0.04) 0,\n      rgba(245, 206, 51, 0) 75%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(245, 206, 51, 0.064) 0,\n      rgba(245, 206, 51, 0) 100%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(37, 211, 102, 0.024) 0,\n      rgba(37, 211, 102, 0) 50%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(37, 211, 102, 0.04) 0,\n      rgba(37, 211, 102, 0) 75%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(37, 211, 102, 0.064) 0,\n      rgba(37, 211, 102, 0) 100%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(24, 119, 242, 0.024) 0,\n      rgba(24, 119, 242, 0) 50%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(24, 119, 242, 0.04) 0,\n      rgba(24, 119, 242, 0) 75%\n    ),\n    radial-gradient(\n      50% 50% at 50% 50%,\n      rgba(24, 119, 242, 0.064) 0,\n      rgba(24, 119, 242, 0) 100%\n    );\n}\n\n.products-wrap {\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  padding: 1rem 2rem;\n}\n\n.products-card {\n  width: inherit;\n  border-radius: 18px;\n  box-shadow: var(--shadow-a);\n  padding: 0 2rem;\n  background: var(--base-a);\n  overflow-y: hide;\n}\n\n.product-upload {\n  margin-top: 1rem;\n}\n.table-button {\n  margin-left: 1rem;\n}\n\n.field {\n  margin-bottom: 1.5rem;\n}\n.field-radiobutton {\n  display: flex;\n  align-items: center;\n}\n\n.field-radiobutton label {\n  margin-left: 0.25rem;\n}\n.field-label {\n  line-height: 40px;\n  color: var(--text-a);\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n}\n\n.field-label i {\n  font-size: var(--text-size-a);\n  margin-left: 0.5rem;\n  margin-top: 3px;\n}\n\n.products-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid var(--border-a);\n  padding: 1rem 0;\n}\n\n.products-header-left {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 1rem 0;\n}\n\n.products-header-left span:nth-child(1) {\n  font-weight: 700;\n  font-size: var(--text-size-f);\n}\n\n.products-header-left span:nth-child(2) {\n  font-weight: 400;\n  font-size: var(--text-size-c);\n  text-align: left;\n}\n\n::v-deep(.p-dropdown) {\n  width: initial;\n}\n\n@media only screen and (max-width: 767px) {\n  .products-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .products-card {\n    padding: 0 1rem;\n  }\n\n  .products-wrap{\n    padding: 1rem;\n  }\n}\n\n@media only screen and (min-width: 768px) and (max-width: 991px) {\n  .products-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n\n\n  .products-wrap{\n    padding: 1rem;\n  }\n}\n\n@media only screen and (min-width: 992px) and (max-width: 1199px) {\n  .products-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n\n\n  .products-wrap{\n    padding: 1rem;\n  }\n}\n\n@media only screen and (min-width: 1200px) {\n\n\n}\n</style>\n","import { render } from \"./ProductsView.vue?vue&type=template&id=bf1ecf0a&scoped=true\"\nimport script from \"./ProductsView.vue?vue&type=script&lang=js\"\nexport * from \"./ProductsView.vue?vue&type=script&lang=js\"\n\nimport \"./ProductsView.vue?vue&type=style&index=0&id=bf1ecf0a&lang=css&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-bf1ecf0a\"]])\n\nexport default __exports__","import { render } from \"./SlotsView.vue?vue&type=template&id=9f372b56&scoped=true\"\nimport script from \"./SlotsView.vue?vue&type=script&lang=js\"\nexport * from \"./SlotsView.vue?vue&type=script&lang=js\"\n\nimport \"./SlotsView.vue?vue&type=style&index=0&id=9f372b56&lang=css&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9f372b56\"]])\n\nexport default __exports__","// https://github.com/tc39/proposal-accessible-object-hasownproperty/blob/main/polyfill.js\nif (!Object.hasOwn) {\n    Object.defineProperty(Object, \"hasOwn\", {\n        value: function (object, property) {\n            if (object == null) {\n                throw new TypeError(\"Cannot convert undefined or null to object\");\n            }\n            return Object.prototype.hasOwnProperty.call(Object(object), property);\n        },\n        configurable: true,\n        enumerable: false,\n        writable: true,\n    });\n}\nexport {};\n","// Ported from Go\n// https://github.com/golang/go/blob/go1.12.5/src/encoding/hex/hex.go\n// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\nconst hexTable = new TextEncoder().encode(\"0123456789abcdef\");\n/**\n * ErrInvalidByte takes an invalid byte and returns an Error.\n * @param byte\n */\nexport function errInvalidByte(byte) {\n    return new Error(\"encoding/hex: invalid byte: \" +\n        new TextDecoder().decode(new Uint8Array([byte])));\n}\n/** ErrLength returns an error about odd string length. */\nexport function errLength() {\n    return new Error(\"encoding/hex: odd length hex string\");\n}\n// fromHexChar converts a hex character into its value.\nfunction fromHexChar(byte) {\n    // '0' <= byte && byte <= '9'\n    if (48 <= byte && byte <= 57)\n        return byte - 48;\n    // 'a' <= byte && byte <= 'f'\n    if (97 <= byte && byte <= 102)\n        return byte - 97 + 10;\n    // 'A' <= byte && byte <= 'F'\n    if (65 <= byte && byte <= 70)\n        return byte - 65 + 10;\n    throw errInvalidByte(byte);\n}\n/**\n * EncodedLen returns the length of an encoding of n source bytes. Specifically,\n * it returns n * 2.\n * @param n\n */\nexport function encodedLen(n) {\n    return n * 2;\n}\n/**\n * Encode encodes `src` into `encodedLen(src.length)` bytes.\n * @param src\n */\nexport function encode(src) {\n    const dst = new Uint8Array(encodedLen(src.length));\n    for (let i = 0; i < dst.length; i++) {\n        const v = src[i];\n        dst[i * 2] = hexTable[v >> 4];\n        dst[i * 2 + 1] = hexTable[v & 0x0f];\n    }\n    return dst;\n}\n/**\n * EncodeToString returns the hexadecimal encoding of `src`.\n * @param src\n */\nexport function encodeToString(src) {\n    return new TextDecoder().decode(encode(src));\n}\n/**\n * Decode decodes `src` into `decodedLen(src.length)` bytes\n * If the input is malformed an error will be thrown\n * the error.\n * @param src\n */\nexport function decode(src) {\n    const dst = new Uint8Array(decodedLen(src.length));\n    for (let i = 0; i < dst.length; i++) {\n        const a = fromHexChar(src[i * 2]);\n        const b = fromHexChar(src[i * 2 + 1]);\n        dst[i] = (a << 4) | b;\n    }\n    if (src.length % 2 == 1) {\n        // Check for invalid char before reporting bad length,\n        // since the invalid char (if present) is an earlier problem.\n        fromHexChar(src[dst.length * 2]);\n        throw errLength();\n    }\n    return dst;\n}\n/**\n * DecodedLen returns the length of decoding `x` source bytes.\n * Specifically, it returns `x / 2`.\n * @param x\n */\nexport function decodedLen(x) {\n    return x >>> 1;\n}\n/**\n * DecodeString returns the bytes represented by the hexadecimal string `s`.\n * DecodeString expects that src contains only hexadecimal characters and that\n * src has even length.\n * If the input is malformed, DecodeString will throw an error.\n * @param s the `string` to decode to `Uint8Array`\n */\nexport function decodeString(s) {\n    return decode(new TextEncoder().encode(s));\n}\n","// Copyright 2018-2022 the Deno authors. All rights reserved. MIT license.\n// This module is browser compatible.\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Sha256_block, _Sha256_blocks, _Sha256_bytes, _Sha256_finalized, _Sha256_first, _Sha256_h0, _Sha256_h1, _Sha256_h2, _Sha256_h3, _Sha256_h4, _Sha256_h5, _Sha256_h6, _Sha256_h7, _Sha256_hashed, _Sha256_hBytes, _Sha256_is224, _Sha256_lastByteIndex, _Sha256_start, _HmacSha256_inner, _HmacSha256_is224, _HmacSha256_oKeyPad, _HmacSha256_sharedMemory;\nconst HEX_CHARS = \"0123456789abcdef\".split(\"\");\nconst EXTRA = [-2147483648, 8388608, 32768, 128];\nconst SHIFT = [24, 16, 8, 0];\nconst K = [\n    0x428a2f98,\n    0x71374491,\n    0xb5c0fbcf,\n    0xe9b5dba5,\n    0x3956c25b,\n    0x59f111f1,\n    0x923f82a4,\n    0xab1c5ed5,\n    0xd807aa98,\n    0x12835b01,\n    0x243185be,\n    0x550c7dc3,\n    0x72be5d74,\n    0x80deb1fe,\n    0x9bdc06a7,\n    0xc19bf174,\n    0xe49b69c1,\n    0xefbe4786,\n    0x0fc19dc6,\n    0x240ca1cc,\n    0x2de92c6f,\n    0x4a7484aa,\n    0x5cb0a9dc,\n    0x76f988da,\n    0x983e5152,\n    0xa831c66d,\n    0xb00327c8,\n    0xbf597fc7,\n    0xc6e00bf3,\n    0xd5a79147,\n    0x06ca6351,\n    0x14292967,\n    0x27b70a85,\n    0x2e1b2138,\n    0x4d2c6dfc,\n    0x53380d13,\n    0x650a7354,\n    0x766a0abb,\n    0x81c2c92e,\n    0x92722c85,\n    0xa2bfe8a1,\n    0xa81a664b,\n    0xc24b8b70,\n    0xc76c51a3,\n    0xd192e819,\n    0xd6990624,\n    0xf40e3585,\n    0x106aa070,\n    0x19a4c116,\n    0x1e376c08,\n    0x2748774c,\n    0x34b0bcb5,\n    0x391c0cb3,\n    0x4ed8aa4a,\n    0x5b9cca4f,\n    0x682e6ff3,\n    0x748f82ee,\n    0x78a5636f,\n    0x84c87814,\n    0x8cc70208,\n    0x90befffa,\n    0xa4506ceb,\n    0xbef9a3f7,\n    0xc67178f2,\n];\nconst blocks = [];\nexport class Sha256 {\n    constructor(is224 = false, sharedMemory = false) {\n        _Sha256_block.set(this, void 0);\n        _Sha256_blocks.set(this, void 0);\n        _Sha256_bytes.set(this, void 0);\n        _Sha256_finalized.set(this, void 0);\n        _Sha256_first.set(this, void 0);\n        _Sha256_h0.set(this, void 0);\n        _Sha256_h1.set(this, void 0);\n        _Sha256_h2.set(this, void 0);\n        _Sha256_h3.set(this, void 0);\n        _Sha256_h4.set(this, void 0);\n        _Sha256_h5.set(this, void 0);\n        _Sha256_h6.set(this, void 0);\n        _Sha256_h7.set(this, void 0);\n        _Sha256_hashed.set(this, void 0);\n        _Sha256_hBytes.set(this, void 0);\n        _Sha256_is224.set(this, void 0);\n        _Sha256_lastByteIndex.set(this, 0);\n        _Sha256_start.set(this, void 0);\n        this.init(is224, sharedMemory);\n    }\n    init(is224, sharedMemory) {\n        if (sharedMemory) {\n            blocks[0] =\n                blocks[16] =\n                    blocks[1] =\n                        blocks[2] =\n                            blocks[3] =\n                                blocks[4] =\n                                    blocks[5] =\n                                        blocks[6] =\n                                            blocks[7] =\n                                                blocks[8] =\n                                                    blocks[9] =\n                                                        blocks[10] =\n                                                            blocks[11] =\n                                                                blocks[12] =\n                                                                    blocks[13] =\n                                                                        blocks[14] =\n                                                                            blocks[15] =\n                                                                                0;\n            __classPrivateFieldSet(this, _Sha256_blocks, blocks, \"f\");\n        }\n        else {\n            __classPrivateFieldSet(this, _Sha256_blocks, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"f\");\n        }\n        if (is224) {\n            __classPrivateFieldSet(this, _Sha256_h0, 0xc1059ed8, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h1, 0x367cd507, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h2, 0x3070dd17, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h3, 0xf70e5939, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h4, 0xffc00b31, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h5, 0x68581511, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h6, 0x64f98fa7, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h7, 0xbefa4fa4, \"f\");\n        }\n        else {\n            // 256\n            __classPrivateFieldSet(this, _Sha256_h0, 0x6a09e667, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h1, 0xbb67ae85, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h2, 0x3c6ef372, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h3, 0xa54ff53a, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h4, 0x510e527f, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h5, 0x9b05688c, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h6, 0x1f83d9ab, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h7, 0x5be0cd19, \"f\");\n        }\n        __classPrivateFieldSet(this, _Sha256_block, __classPrivateFieldSet(this, _Sha256_start, __classPrivateFieldSet(this, _Sha256_bytes, __classPrivateFieldSet(this, _Sha256_hBytes, 0, \"f\"), \"f\"), \"f\"), \"f\");\n        __classPrivateFieldSet(this, _Sha256_finalized, __classPrivateFieldSet(this, _Sha256_hashed, false, \"f\"), \"f\");\n        __classPrivateFieldSet(this, _Sha256_first, true, \"f\");\n        __classPrivateFieldSet(this, _Sha256_is224, is224, \"f\");\n    }\n    /** Update hash\n     *\n     * @param message The message you want to hash.\n     */\n    update(message) {\n        if (__classPrivateFieldGet(this, _Sha256_finalized, \"f\")) {\n            return this;\n        }\n        let msg;\n        if (message instanceof ArrayBuffer) {\n            msg = new Uint8Array(message);\n        }\n        else {\n            msg = message;\n        }\n        let index = 0;\n        const length = msg.length;\n        const blocks = __classPrivateFieldGet(this, _Sha256_blocks, \"f\");\n        while (index < length) {\n            let i;\n            if (__classPrivateFieldGet(this, _Sha256_hashed, \"f\")) {\n                __classPrivateFieldSet(this, _Sha256_hashed, false, \"f\");\n                blocks[0] = __classPrivateFieldGet(this, _Sha256_block, \"f\");\n                blocks[16] =\n                    blocks[1] =\n                        blocks[2] =\n                            blocks[3] =\n                                blocks[4] =\n                                    blocks[5] =\n                                        blocks[6] =\n                                            blocks[7] =\n                                                blocks[8] =\n                                                    blocks[9] =\n                                                        blocks[10] =\n                                                            blocks[11] =\n                                                                blocks[12] =\n                                                                    blocks[13] =\n                                                                        blocks[14] =\n                                                                            blocks[15] =\n                                                                                0;\n            }\n            if (typeof msg !== \"string\") {\n                for (i = __classPrivateFieldGet(this, _Sha256_start, \"f\"); index < length && i < 64; ++index) {\n                    blocks[i >> 2] |= msg[index] << SHIFT[i++ & 3];\n                }\n            }\n            else {\n                for (i = __classPrivateFieldGet(this, _Sha256_start, \"f\"); index < length && i < 64; ++index) {\n                    let code = msg.charCodeAt(index);\n                    if (code < 0x80) {\n                        blocks[i >> 2] |= code << SHIFT[i++ & 3];\n                    }\n                    else if (code < 0x800) {\n                        blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n                        blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                    }\n                    else if (code < 0xd800 || code >= 0xe000) {\n                        blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n                        blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                        blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                    }\n                    else {\n                        code = 0x10000 +\n                            (((code & 0x3ff) << 10) | (msg.charCodeAt(++index) & 0x3ff));\n                        blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n                        blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n                        blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                        blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                    }\n                }\n            }\n            __classPrivateFieldSet(this, _Sha256_lastByteIndex, i, \"f\");\n            __classPrivateFieldSet(this, _Sha256_bytes, __classPrivateFieldGet(this, _Sha256_bytes, \"f\") + (i - __classPrivateFieldGet(this, _Sha256_start, \"f\")), \"f\");\n            if (i >= 64) {\n                __classPrivateFieldSet(this, _Sha256_block, blocks[16], \"f\");\n                __classPrivateFieldSet(this, _Sha256_start, i - 64, \"f\");\n                this.hash();\n                __classPrivateFieldSet(this, _Sha256_hashed, true, \"f\");\n            }\n            else {\n                __classPrivateFieldSet(this, _Sha256_start, i, \"f\");\n            }\n        }\n        if (__classPrivateFieldGet(this, _Sha256_bytes, \"f\") > 4294967295) {\n            __classPrivateFieldSet(this, _Sha256_hBytes, __classPrivateFieldGet(this, _Sha256_hBytes, \"f\") + ((__classPrivateFieldGet(this, _Sha256_bytes, \"f\") / 4294967296) << 0), \"f\");\n            __classPrivateFieldSet(this, _Sha256_bytes, __classPrivateFieldGet(this, _Sha256_bytes, \"f\") % 4294967296, \"f\");\n        }\n        return this;\n    }\n    finalize() {\n        if (__classPrivateFieldGet(this, _Sha256_finalized, \"f\")) {\n            return;\n        }\n        __classPrivateFieldSet(this, _Sha256_finalized, true, \"f\");\n        const blocks = __classPrivateFieldGet(this, _Sha256_blocks, \"f\");\n        const i = __classPrivateFieldGet(this, _Sha256_lastByteIndex, \"f\");\n        blocks[16] = __classPrivateFieldGet(this, _Sha256_block, \"f\");\n        blocks[i >> 2] |= EXTRA[i & 3];\n        __classPrivateFieldSet(this, _Sha256_block, blocks[16], \"f\");\n        if (i >= 56) {\n            if (!__classPrivateFieldGet(this, _Sha256_hashed, \"f\")) {\n                this.hash();\n            }\n            blocks[0] = __classPrivateFieldGet(this, _Sha256_block, \"f\");\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        }\n        blocks[14] = (__classPrivateFieldGet(this, _Sha256_hBytes, \"f\") << 3) | (__classPrivateFieldGet(this, _Sha256_bytes, \"f\") >>> 29);\n        blocks[15] = __classPrivateFieldGet(this, _Sha256_bytes, \"f\") << 3;\n        this.hash();\n    }\n    hash() {\n        let a = __classPrivateFieldGet(this, _Sha256_h0, \"f\");\n        let b = __classPrivateFieldGet(this, _Sha256_h1, \"f\");\n        let c = __classPrivateFieldGet(this, _Sha256_h2, \"f\");\n        let d = __classPrivateFieldGet(this, _Sha256_h3, \"f\");\n        let e = __classPrivateFieldGet(this, _Sha256_h4, \"f\");\n        let f = __classPrivateFieldGet(this, _Sha256_h5, \"f\");\n        let g = __classPrivateFieldGet(this, _Sha256_h6, \"f\");\n        let h = __classPrivateFieldGet(this, _Sha256_h7, \"f\");\n        const blocks = __classPrivateFieldGet(this, _Sha256_blocks, \"f\");\n        let s0;\n        let s1;\n        let maj;\n        let t1;\n        let t2;\n        let ch;\n        let ab;\n        let da;\n        let cd;\n        let bc;\n        for (let j = 16; j < 64; ++j) {\n            // rightrotate\n            t1 = blocks[j - 15];\n            s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n            t1 = blocks[j - 2];\n            s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^\n                (t1 >>> 10);\n            blocks[j] = (blocks[j - 16] + s0 + blocks[j - 7] + s1) << 0;\n        }\n        bc = b & c;\n        for (let j = 0; j < 64; j += 4) {\n            if (__classPrivateFieldGet(this, _Sha256_first, \"f\")) {\n                if (__classPrivateFieldGet(this, _Sha256_is224, \"f\")) {\n                    ab = 300032;\n                    t1 = blocks[0] - 1413257819;\n                    h = (t1 - 150054599) << 0;\n                    d = (t1 + 24177077) << 0;\n                }\n                else {\n                    ab = 704751109;\n                    t1 = blocks[0] - 210244248;\n                    h = (t1 - 1521486534) << 0;\n                    d = (t1 + 143694565) << 0;\n                }\n                __classPrivateFieldSet(this, _Sha256_first, false, \"f\");\n            }\n            else {\n                s0 = ((a >>> 2) | (a << 30)) ^\n                    ((a >>> 13) | (a << 19)) ^\n                    ((a >>> 22) | (a << 10));\n                s1 = ((e >>> 6) | (e << 26)) ^\n                    ((e >>> 11) | (e << 21)) ^\n                    ((e >>> 25) | (e << 7));\n                ab = a & b;\n                maj = ab ^ (a & c) ^ bc;\n                ch = (e & f) ^ (~e & g);\n                t1 = h + s1 + ch + K[j] + blocks[j];\n                t2 = s0 + maj;\n                h = (d + t1) << 0;\n                d = (t1 + t2) << 0;\n            }\n            s0 = ((d >>> 2) | (d << 30)) ^\n                ((d >>> 13) | (d << 19)) ^\n                ((d >>> 22) | (d << 10));\n            s1 = ((h >>> 6) | (h << 26)) ^\n                ((h >>> 11) | (h << 21)) ^\n                ((h >>> 25) | (h << 7));\n            da = d & a;\n            maj = da ^ (d & b) ^ ab;\n            ch = (h & e) ^ (~h & f);\n            t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n            t2 = s0 + maj;\n            g = (c + t1) << 0;\n            c = (t1 + t2) << 0;\n            s0 = ((c >>> 2) | (c << 30)) ^\n                ((c >>> 13) | (c << 19)) ^\n                ((c >>> 22) | (c << 10));\n            s1 = ((g >>> 6) | (g << 26)) ^\n                ((g >>> 11) | (g << 21)) ^\n                ((g >>> 25) | (g << 7));\n            cd = c & d;\n            maj = cd ^ (c & a) ^ da;\n            ch = (g & h) ^ (~g & e);\n            t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n            t2 = s0 + maj;\n            f = (b + t1) << 0;\n            b = (t1 + t2) << 0;\n            s0 = ((b >>> 2) | (b << 30)) ^\n                ((b >>> 13) | (b << 19)) ^\n                ((b >>> 22) | (b << 10));\n            s1 = ((f >>> 6) | (f << 26)) ^\n                ((f >>> 11) | (f << 21)) ^\n                ((f >>> 25) | (f << 7));\n            bc = b & c;\n            maj = bc ^ (b & d) ^ cd;\n            ch = (f & g) ^ (~f & h);\n            t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n            t2 = s0 + maj;\n            e = (a + t1) << 0;\n            a = (t1 + t2) << 0;\n        }\n        __classPrivateFieldSet(this, _Sha256_h0, (__classPrivateFieldGet(this, _Sha256_h0, \"f\") + a) << 0, \"f\");\n        __classPrivateFieldSet(this, _Sha256_h1, (__classPrivateFieldGet(this, _Sha256_h1, \"f\") + b) << 0, \"f\");\n        __classPrivateFieldSet(this, _Sha256_h2, (__classPrivateFieldGet(this, _Sha256_h2, \"f\") + c) << 0, \"f\");\n        __classPrivateFieldSet(this, _Sha256_h3, (__classPrivateFieldGet(this, _Sha256_h3, \"f\") + d) << 0, \"f\");\n        __classPrivateFieldSet(this, _Sha256_h4, (__classPrivateFieldGet(this, _Sha256_h4, \"f\") + e) << 0, \"f\");\n        __classPrivateFieldSet(this, _Sha256_h5, (__classPrivateFieldGet(this, _Sha256_h5, \"f\") + f) << 0, \"f\");\n        __classPrivateFieldSet(this, _Sha256_h6, (__classPrivateFieldGet(this, _Sha256_h6, \"f\") + g) << 0, \"f\");\n        __classPrivateFieldSet(this, _Sha256_h7, (__classPrivateFieldGet(this, _Sha256_h7, \"f\") + h) << 0, \"f\");\n    }\n    /** Return hash in hex string. */\n    hex() {\n        this.finalize();\n        const h0 = __classPrivateFieldGet(this, _Sha256_h0, \"f\");\n        const h1 = __classPrivateFieldGet(this, _Sha256_h1, \"f\");\n        const h2 = __classPrivateFieldGet(this, _Sha256_h2, \"f\");\n        const h3 = __classPrivateFieldGet(this, _Sha256_h3, \"f\");\n        const h4 = __classPrivateFieldGet(this, _Sha256_h4, \"f\");\n        const h5 = __classPrivateFieldGet(this, _Sha256_h5, \"f\");\n        const h6 = __classPrivateFieldGet(this, _Sha256_h6, \"f\");\n        const h7 = __classPrivateFieldGet(this, _Sha256_h7, \"f\");\n        let hex = HEX_CHARS[(h0 >> 28) & 0x0f] +\n            HEX_CHARS[(h0 >> 24) & 0x0f] +\n            HEX_CHARS[(h0 >> 20) & 0x0f] +\n            HEX_CHARS[(h0 >> 16) & 0x0f] +\n            HEX_CHARS[(h0 >> 12) & 0x0f] +\n            HEX_CHARS[(h0 >> 8) & 0x0f] +\n            HEX_CHARS[(h0 >> 4) & 0x0f] +\n            HEX_CHARS[h0 & 0x0f] +\n            HEX_CHARS[(h1 >> 28) & 0x0f] +\n            HEX_CHARS[(h1 >> 24) & 0x0f] +\n            HEX_CHARS[(h1 >> 20) & 0x0f] +\n            HEX_CHARS[(h1 >> 16) & 0x0f] +\n            HEX_CHARS[(h1 >> 12) & 0x0f] +\n            HEX_CHARS[(h1 >> 8) & 0x0f] +\n            HEX_CHARS[(h1 >> 4) & 0x0f] +\n            HEX_CHARS[h1 & 0x0f] +\n            HEX_CHARS[(h2 >> 28) & 0x0f] +\n            HEX_CHARS[(h2 >> 24) & 0x0f] +\n            HEX_CHARS[(h2 >> 20) & 0x0f] +\n            HEX_CHARS[(h2 >> 16) & 0x0f] +\n            HEX_CHARS[(h2 >> 12) & 0x0f] +\n            HEX_CHARS[(h2 >> 8) & 0x0f] +\n            HEX_CHARS[(h2 >> 4) & 0x0f] +\n            HEX_CHARS[h2 & 0x0f] +\n            HEX_CHARS[(h3 >> 28) & 0x0f] +\n            HEX_CHARS[(h3 >> 24) & 0x0f] +\n            HEX_CHARS[(h3 >> 20) & 0x0f] +\n            HEX_CHARS[(h3 >> 16) & 0x0f] +\n            HEX_CHARS[(h3 >> 12) & 0x0f] +\n            HEX_CHARS[(h3 >> 8) & 0x0f] +\n            HEX_CHARS[(h3 >> 4) & 0x0f] +\n            HEX_CHARS[h3 & 0x0f] +\n            HEX_CHARS[(h4 >> 28) & 0x0f] +\n            HEX_CHARS[(h4 >> 24) & 0x0f] +\n            HEX_CHARS[(h4 >> 20) & 0x0f] +\n            HEX_CHARS[(h4 >> 16) & 0x0f] +\n            HEX_CHARS[(h4 >> 12) & 0x0f] +\n            HEX_CHARS[(h4 >> 8) & 0x0f] +\n            HEX_CHARS[(h4 >> 4) & 0x0f] +\n            HEX_CHARS[h4 & 0x0f] +\n            HEX_CHARS[(h5 >> 28) & 0x0f] +\n            HEX_CHARS[(h5 >> 24) & 0x0f] +\n            HEX_CHARS[(h5 >> 20) & 0x0f] +\n            HEX_CHARS[(h5 >> 16) & 0x0f] +\n            HEX_CHARS[(h5 >> 12) & 0x0f] +\n            HEX_CHARS[(h5 >> 8) & 0x0f] +\n            HEX_CHARS[(h5 >> 4) & 0x0f] +\n            HEX_CHARS[h5 & 0x0f] +\n            HEX_CHARS[(h6 >> 28) & 0x0f] +\n            HEX_CHARS[(h6 >> 24) & 0x0f] +\n            HEX_CHARS[(h6 >> 20) & 0x0f] +\n            HEX_CHARS[(h6 >> 16) & 0x0f] +\n            HEX_CHARS[(h6 >> 12) & 0x0f] +\n            HEX_CHARS[(h6 >> 8) & 0x0f] +\n            HEX_CHARS[(h6 >> 4) & 0x0f] +\n            HEX_CHARS[h6 & 0x0f];\n        if (!__classPrivateFieldGet(this, _Sha256_is224, \"f\")) {\n            hex += HEX_CHARS[(h7 >> 28) & 0x0f] +\n                HEX_CHARS[(h7 >> 24) & 0x0f] +\n                HEX_CHARS[(h7 >> 20) & 0x0f] +\n                HEX_CHARS[(h7 >> 16) & 0x0f] +\n                HEX_CHARS[(h7 >> 12) & 0x0f] +\n                HEX_CHARS[(h7 >> 8) & 0x0f] +\n                HEX_CHARS[(h7 >> 4) & 0x0f] +\n                HEX_CHARS[h7 & 0x0f];\n        }\n        return hex;\n    }\n    /** Return hash in hex string. */\n    toString() {\n        return this.hex();\n    }\n    /** Return hash in integer array. */\n    digest() {\n        this.finalize();\n        const h0 = __classPrivateFieldGet(this, _Sha256_h0, \"f\");\n        const h1 = __classPrivateFieldGet(this, _Sha256_h1, \"f\");\n        const h2 = __classPrivateFieldGet(this, _Sha256_h2, \"f\");\n        const h3 = __classPrivateFieldGet(this, _Sha256_h3, \"f\");\n        const h4 = __classPrivateFieldGet(this, _Sha256_h4, \"f\");\n        const h5 = __classPrivateFieldGet(this, _Sha256_h5, \"f\");\n        const h6 = __classPrivateFieldGet(this, _Sha256_h6, \"f\");\n        const h7 = __classPrivateFieldGet(this, _Sha256_h7, \"f\");\n        const arr = [\n            (h0 >> 24) & 0xff,\n            (h0 >> 16) & 0xff,\n            (h0 >> 8) & 0xff,\n            h0 & 0xff,\n            (h1 >> 24) & 0xff,\n            (h1 >> 16) & 0xff,\n            (h1 >> 8) & 0xff,\n            h1 & 0xff,\n            (h2 >> 24) & 0xff,\n            (h2 >> 16) & 0xff,\n            (h2 >> 8) & 0xff,\n            h2 & 0xff,\n            (h3 >> 24) & 0xff,\n            (h3 >> 16) & 0xff,\n            (h3 >> 8) & 0xff,\n            h3 & 0xff,\n            (h4 >> 24) & 0xff,\n            (h4 >> 16) & 0xff,\n            (h4 >> 8) & 0xff,\n            h4 & 0xff,\n            (h5 >> 24) & 0xff,\n            (h5 >> 16) & 0xff,\n            (h5 >> 8) & 0xff,\n            h5 & 0xff,\n            (h6 >> 24) & 0xff,\n            (h6 >> 16) & 0xff,\n            (h6 >> 8) & 0xff,\n            h6 & 0xff,\n        ];\n        if (!__classPrivateFieldGet(this, _Sha256_is224, \"f\")) {\n            arr.push((h7 >> 24) & 0xff, (h7 >> 16) & 0xff, (h7 >> 8) & 0xff, h7 & 0xff);\n        }\n        return arr;\n    }\n    /** Return hash in integer array. */\n    array() {\n        return this.digest();\n    }\n    /** Return hash in ArrayBuffer. */\n    arrayBuffer() {\n        this.finalize();\n        const buffer = new ArrayBuffer(__classPrivateFieldGet(this, _Sha256_is224, \"f\") ? 28 : 32);\n        const dataView = new DataView(buffer);\n        dataView.setUint32(0, __classPrivateFieldGet(this, _Sha256_h0, \"f\"));\n        dataView.setUint32(4, __classPrivateFieldGet(this, _Sha256_h1, \"f\"));\n        dataView.setUint32(8, __classPrivateFieldGet(this, _Sha256_h2, \"f\"));\n        dataView.setUint32(12, __classPrivateFieldGet(this, _Sha256_h3, \"f\"));\n        dataView.setUint32(16, __classPrivateFieldGet(this, _Sha256_h4, \"f\"));\n        dataView.setUint32(20, __classPrivateFieldGet(this, _Sha256_h5, \"f\"));\n        dataView.setUint32(24, __classPrivateFieldGet(this, _Sha256_h6, \"f\"));\n        if (!__classPrivateFieldGet(this, _Sha256_is224, \"f\")) {\n            dataView.setUint32(28, __classPrivateFieldGet(this, _Sha256_h7, \"f\"));\n        }\n        return buffer;\n    }\n}\n_Sha256_block = new WeakMap(), _Sha256_blocks = new WeakMap(), _Sha256_bytes = new WeakMap(), _Sha256_finalized = new WeakMap(), _Sha256_first = new WeakMap(), _Sha256_h0 = new WeakMap(), _Sha256_h1 = new WeakMap(), _Sha256_h2 = new WeakMap(), _Sha256_h3 = new WeakMap(), _Sha256_h4 = new WeakMap(), _Sha256_h5 = new WeakMap(), _Sha256_h6 = new WeakMap(), _Sha256_h7 = new WeakMap(), _Sha256_hashed = new WeakMap(), _Sha256_hBytes = new WeakMap(), _Sha256_is224 = new WeakMap(), _Sha256_lastByteIndex = new WeakMap(), _Sha256_start = new WeakMap();\nexport class HmacSha256 extends Sha256 {\n    constructor(secretKey, is224 = false, sharedMemory = false) {\n        super(is224, sharedMemory);\n        _HmacSha256_inner.set(this, void 0);\n        _HmacSha256_is224.set(this, void 0);\n        _HmacSha256_oKeyPad.set(this, void 0);\n        _HmacSha256_sharedMemory.set(this, void 0);\n        let key;\n        if (typeof secretKey === \"string\") {\n            const bytes = [];\n            const length = secretKey.length;\n            let index = 0;\n            for (let i = 0; i < length; ++i) {\n                let code = secretKey.charCodeAt(i);\n                if (code < 0x80) {\n                    bytes[index++] = code;\n                }\n                else if (code < 0x800) {\n                    bytes[index++] = 0xc0 | (code >> 6);\n                    bytes[index++] = 0x80 | (code & 0x3f);\n                }\n                else if (code < 0xd800 || code >= 0xe000) {\n                    bytes[index++] = 0xe0 | (code >> 12);\n                    bytes[index++] = 0x80 | ((code >> 6) & 0x3f);\n                    bytes[index++] = 0x80 | (code & 0x3f);\n                }\n                else {\n                    code = 0x10000 +\n                        (((code & 0x3ff) << 10) | (secretKey.charCodeAt(++i) & 0x3ff));\n                    bytes[index++] = 0xf0 | (code >> 18);\n                    bytes[index++] = 0x80 | ((code >> 12) & 0x3f);\n                    bytes[index++] = 0x80 | ((code >> 6) & 0x3f);\n                    bytes[index++] = 0x80 | (code & 0x3f);\n                }\n            }\n            key = bytes;\n        }\n        else {\n            if (secretKey instanceof ArrayBuffer) {\n                key = new Uint8Array(secretKey);\n            }\n            else {\n                key = secretKey;\n            }\n        }\n        if (key.length > 64) {\n            key = new Sha256(is224, true).update(key).array();\n        }\n        const oKeyPad = [];\n        const iKeyPad = [];\n        for (let i = 0; i < 64; ++i) {\n            const b = key[i] || 0;\n            oKeyPad[i] = 0x5c ^ b;\n            iKeyPad[i] = 0x36 ^ b;\n        }\n        this.update(iKeyPad);\n        __classPrivateFieldSet(this, _HmacSha256_oKeyPad, oKeyPad, \"f\");\n        __classPrivateFieldSet(this, _HmacSha256_inner, true, \"f\");\n        __classPrivateFieldSet(this, _HmacSha256_is224, is224, \"f\");\n        __classPrivateFieldSet(this, _HmacSha256_sharedMemory, sharedMemory, \"f\");\n    }\n    finalize() {\n        super.finalize();\n        if (__classPrivateFieldGet(this, _HmacSha256_inner, \"f\")) {\n            __classPrivateFieldSet(this, _HmacSha256_inner, false, \"f\");\n            const innerHash = this.array();\n            super.init(__classPrivateFieldGet(this, _HmacSha256_is224, \"f\"), __classPrivateFieldGet(this, _HmacSha256_sharedMemory, \"f\"));\n            this.update(__classPrivateFieldGet(this, _HmacSha256_oKeyPad, \"f\"));\n            this.update(innerHash);\n            super.finalize();\n        }\n    }\n}\n_HmacSha256_inner = new WeakMap(), _HmacSha256_is224 = new WeakMap(), _HmacSha256_oKeyPad = new WeakMap(), _HmacSha256_sharedMemory = new WeakMap();\n","/*--------------------------------------------------------------------------\n\r\n@sinclair/typebox\n\r\nThe MIT License (MIT)\n\r\nCopyright (c) 2022 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\r\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\r\n---------------------------------------------------------------------------*/\n// --------------------------------------------------------------------------\n// Symbols\n// --------------------------------------------------------------------------\nexport const Kind = Symbol.for('TypeBox.Kind');\nexport const Hint = Symbol.for('TypeBox.Hint');\nexport const Modifier = Symbol.for('TypeBox.Modifier');\n// --------------------------------------------------------------------------\n// TypeBuilder\n// --------------------------------------------------------------------------\nlet TypeOrdinal = 0;\nexport class TypeBuilder {\n    // ----------------------------------------------------------------------\n    // Modifiers\n    // ----------------------------------------------------------------------\n    /** Creates a readonly optional property */\n    ReadonlyOptional(item) {\n        return { [Modifier]: 'ReadonlyOptional', ...item };\n    }\n    /** Creates a readonly property */\n    Readonly(item) {\n        return { [Modifier]: 'Readonly', ...item };\n    }\n    /** Creates a optional property */\n    Optional(item) {\n        return { [Modifier]: 'Optional', ...item };\n    }\n    // ----------------------------------------------------------------------\n    // Types\n    // ----------------------------------------------------------------------\n    /** `Standard` Creates a any type */\n    Any(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Any' });\n    }\n    /** `Standard` Creates a array type */\n    Array(items, options = {}) {\n        return this.Create({ ...options, [Kind]: 'Array', type: 'array', items });\n    }\n    /** `Standard` Creates a boolean type */\n    Boolean(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Boolean', type: 'boolean' });\n    }\n    /** `Extended` Creates a tuple type from this constructors parameters */\n    ConstructorParameters(schema, options = {}) {\n        return this.Tuple([...schema.parameters], { ...options });\n    }\n    /** `Extended` Creates a constructor type */\n    Constructor(parameters, returns, options = {}) {\n        if (parameters[Kind] === 'Tuple') {\n            const inner = parameters.items === undefined ? [] : parameters.items;\n            return this.Create({ ...options, [Kind]: 'Constructor', type: 'object', instanceOf: 'Constructor', parameters: inner, returns });\n        }\n        else if (globalThis.Array.isArray(parameters)) {\n            return this.Create({ ...options, [Kind]: 'Constructor', type: 'object', instanceOf: 'Constructor', parameters, returns });\n        }\n        else {\n            throw new Error('TypeBuilder.Constructor: Invalid parameters');\n        }\n    }\n    /** `Extended` Creates a Date type */\n    Date(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Date', type: 'object', instanceOf: 'Date' });\n    }\n    /** `Standard` Creates a enum type */\n    Enum(item, options = {}) {\n        const values = Object.keys(item)\n            .filter((key) => isNaN(key))\n            .map((key) => item[key]);\n        const anyOf = values.map((value) => (typeof value === 'string' ? { [Kind]: 'Literal', type: 'string', const: value } : { [Kind]: 'Literal', type: 'number', const: value }));\n        return this.Create({ ...options, [Kind]: 'Union', [Hint]: 'Enum', anyOf });\n    }\n    /** `Extended` Creates a function type */\n    Function(parameters, returns, options = {}) {\n        if (parameters[Kind] === 'Tuple') {\n            const inner = parameters.items === undefined ? [] : parameters.items;\n            return this.Create({ ...options, [Kind]: 'Function', type: 'object', instanceOf: 'Function', parameters: inner, returns });\n        }\n        else if (globalThis.Array.isArray(parameters)) {\n            return this.Create({ ...options, [Kind]: 'Function', type: 'object', instanceOf: 'Function', parameters, returns });\n        }\n        else {\n            throw new Error('TypeBuilder.Function: Invalid parameters');\n        }\n    }\n    /** `Extended` Creates a type from this constructors instance type */\n    InstanceType(schema, options = {}) {\n        return { ...options, ...this.Clone(schema.returns) };\n    }\n    /** `Standard` Creates a integer type */\n    Integer(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Integer', type: 'integer' });\n    }\n    /** `Standard` Creates a intersect type. */\n    Intersect(objects, options = {}) {\n        const isOptional = (schema) => (schema[Modifier] && schema[Modifier] === 'Optional') || schema[Modifier] === 'ReadonlyOptional';\n        const [required, optional] = [new Set(), new Set()];\n        for (const object of objects) {\n            for (const [key, schema] of Object.entries(object.properties)) {\n                if (isOptional(schema))\n                    optional.add(key);\n            }\n        }\n        for (const object of objects) {\n            for (const key of Object.keys(object.properties)) {\n                if (!optional.has(key))\n                    required.add(key);\n            }\n        }\n        const properties = {};\n        for (const object of objects) {\n            for (const [key, schema] of Object.entries(object.properties)) {\n                properties[key] = properties[key] === undefined ? schema : { [Kind]: 'Union', anyOf: [properties[key], { ...schema }] };\n            }\n        }\n        if (required.size > 0) {\n            return this.Create({ ...options, [Kind]: 'Object', type: 'object', properties, required: [...required] });\n        }\n        else {\n            return this.Create({ ...options, [Kind]: 'Object', type: 'object', properties });\n        }\n    }\n    /** `Standard` Creates a keyof type */\n    KeyOf(object, options = {}) {\n        const items = Object.keys(object.properties).map((key) => this.Create({ ...options, [Kind]: 'Literal', type: 'string', const: key }));\n        return this.Create({ ...options, [Kind]: 'Union', [Hint]: 'KeyOf', anyOf: items });\n    }\n    /** `Standard` Creates a literal type. */\n    Literal(value, options = {}) {\n        return this.Create({ ...options, [Kind]: 'Literal', const: value, type: typeof value });\n    }\n    /** `Standard` Creates a never type */\n    Never(options = {}) {\n        return this.Create({\n            ...options,\n            [Kind]: 'Never',\n            allOf: [\n                { type: 'boolean', const: false },\n                { type: 'boolean', const: true },\n            ],\n        });\n    }\n    /** `Standard` Creates a null type */\n    Null(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Null', type: 'null' });\n    }\n    /** `Standard` Creates a number type */\n    Number(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Number', type: 'number' });\n    }\n    /** `Standard` Creates an object type */\n    Object(properties, options = {}) {\n        const property_names = Object.keys(properties);\n        const optional = property_names.filter((name) => {\n            const property = properties[name];\n            const modifier = property[Modifier];\n            return modifier && (modifier === 'Optional' || modifier === 'ReadonlyOptional');\n        });\n        const required = property_names.filter((name) => !optional.includes(name));\n        if (required.length > 0) {\n            return this.Create({ ...options, [Kind]: 'Object', type: 'object', properties, required });\n        }\n        else {\n            return this.Create({ ...options, [Kind]: 'Object', type: 'object', properties });\n        }\n    }\n    /** `Standard` Creates a new object type whose keys are omitted from the given source type */\n    Omit(schema, keys, options = {}) {\n        const select = keys[Kind] === 'Union' ? keys.anyOf.map((schema) => schema.const) : keys;\n        const next = { ...this.Clone(schema), ...options, [Hint]: 'Omit' };\n        if (next.required) {\n            next.required = next.required.filter((key) => !select.includes(key));\n            if (next.required.length === 0)\n                delete next.required;\n        }\n        for (const key of Object.keys(next.properties)) {\n            if (select.includes(key))\n                delete next.properties[key];\n        }\n        return this.Create(next);\n    }\n    /** `Extended` Creates a tuple type from this functions parameters */\n    Parameters(schema, options = {}) {\n        return Type.Tuple(schema.parameters, { ...options });\n    }\n    /** `Standard` Creates an object type whose properties are all optional */\n    Partial(schema, options = {}) {\n        const next = { ...this.Clone(schema), ...options, [Hint]: 'Partial' };\n        delete next.required;\n        for (const key of Object.keys(next.properties)) {\n            const property = next.properties[key];\n            const modifer = property[Modifier];\n            switch (modifer) {\n                case 'ReadonlyOptional':\n                    property[Modifier] = 'ReadonlyOptional';\n                    break;\n                case 'Readonly':\n                    property[Modifier] = 'ReadonlyOptional';\n                    break;\n                case 'Optional':\n                    property[Modifier] = 'Optional';\n                    break;\n                default:\n                    property[Modifier] = 'Optional';\n                    break;\n            }\n        }\n        return this.Create(next);\n    }\n    /** `Standard` Creates a new object type whose keys are picked from the given source type */\n    Pick(schema, keys, options = {}) {\n        const select = keys[Kind] === 'Union' ? keys.anyOf.map((schema) => schema.const) : keys;\n        const next = { ...this.Clone(schema), ...options, [Hint]: 'Pick' };\n        if (next.required) {\n            next.required = next.required.filter((key) => select.includes(key));\n            if (next.required.length === 0)\n                delete next.required;\n        }\n        for (const key of Object.keys(next.properties)) {\n            if (!select.includes(key))\n                delete next.properties[key];\n        }\n        return this.Create(next);\n    }\n    /** `Extended` Creates a Promise type */\n    Promise(item, options = {}) {\n        return this.Create({ ...options, [Kind]: 'Promise', type: 'object', instanceOf: 'Promise', item });\n    }\n    /** `Standard` Creates a record type */\n    Record(key, value, options = {}) {\n        // If string literal union return TObject with properties extracted from union.\n        if (key[Kind] === 'Union') {\n            return this.Object(key.anyOf.reduce((acc, literal) => {\n                return { ...acc, [literal.const]: value };\n            }, {}), { ...options, [Hint]: 'Record' });\n        }\n        // otherwise return TRecord with patternProperties\n        const pattern = ['Integer', 'Number'].includes(key[Kind]) ? '^(0|[1-9][0-9]*)$' : key[Kind] === 'String' && key.pattern ? key.pattern : '^.*$';\n        return this.Create({\n            ...options,\n            [Kind]: 'Record',\n            type: 'object',\n            patternProperties: { [pattern]: value },\n            additionalProperties: false,\n        });\n    }\n    /** `Standard` Creates recursive type */\n    Recursive(callback, options = {}) {\n        if (options.$id === undefined)\n            options.$id = `T${TypeOrdinal++}`;\n        const self = callback({ [Kind]: 'Self', $ref: `${options.$id}` });\n        self.$id = options.$id;\n        return this.Create({ ...options, ...self });\n    }\n    /** `Standard` Creates a reference type. The referenced type must contain a $id. */\n    Ref(schema, options = {}) {\n        if (schema.$id === undefined)\n            throw Error('TypeBuilder.Ref: Referenced schema must specify an $id');\n        return this.Create({ ...options, [Kind]: 'Ref', $ref: schema.$id });\n    }\n    /** `Standard` Creates a string type from a regular expression */\n    RegEx(regex, options = {}) {\n        return this.Create({ ...options, [Kind]: 'String', type: 'string', pattern: regex.source });\n    }\n    /** `Standard` Creates an object type whose properties are all required */\n    Required(schema, options = {}) {\n        const next = { ...this.Clone(schema), ...options, [Hint]: 'Required' };\n        next.required = Object.keys(next.properties);\n        for (const key of Object.keys(next.properties)) {\n            const property = next.properties[key];\n            const modifier = property[Modifier];\n            switch (modifier) {\n                case 'ReadonlyOptional':\n                    property[Modifier] = 'Readonly';\n                    break;\n                case 'Readonly':\n                    property[Modifier] = 'Readonly';\n                    break;\n                case 'Optional':\n                    delete property[Modifier];\n                    break;\n                default:\n                    delete property[Modifier];\n                    break;\n            }\n        }\n        return this.Create(next);\n    }\n    /** `Extended` Creates a type from this functions return type */\n    ReturnType(schema, options = {}) {\n        return { ...options, ...this.Clone(schema.returns) };\n    }\n    /** Removes Kind and Modifier symbol property keys from this schema */\n    Strict(schema) {\n        return JSON.parse(JSON.stringify(schema));\n    }\n    /** `Standard` Creates a string type */\n    String(options = {}) {\n        return this.Create({ ...options, [Kind]: 'String', type: 'string' });\n    }\n    /** `Standard` Creates a tuple type */\n    Tuple(items, options = {}) {\n        const additionalItems = false;\n        const minItems = items.length;\n        const maxItems = items.length;\n        const schema = (items.length > 0 ? { ...options, [Kind]: 'Tuple', type: 'array', items, additionalItems, minItems, maxItems } : { ...options, [Kind]: 'Tuple', type: 'array', minItems, maxItems });\n        return this.Create(schema);\n    }\n    /** `Extended` Creates a undefined type */\n    Undefined(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Undefined', type: 'null', typeOf: 'Undefined' });\n    }\n    /** `Standard` Creates a union type */\n    Union(items, options = {}) {\n        return items.length === 0 ? Type.Never({ ...options }) : this.Create({ ...options, [Kind]: 'Union', anyOf: items });\n    }\n    /** `Extended` Creates a Uint8Array type */\n    Uint8Array(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Uint8Array', type: 'object', instanceOf: 'Uint8Array' });\n    }\n    /** `Standard` Creates an unknown type */\n    Unknown(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Unknown' });\n    }\n    /** `Standard` Creates a user defined schema that infers as type T  */\n    Unsafe(options = {}) {\n        return this.Create({ ...options, [Kind]: options[Kind] || 'Unsafe' });\n    }\n    /** `Extended` Creates a void type */\n    Void(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Void', type: 'null', typeOf: 'Void' });\n    }\n    /** Use this function to return TSchema with static and params omitted */\n    Create(schema) {\n        return schema;\n    }\n    /** Clones the given value */\n    Clone(value) {\n        const isObject = (object) => typeof object === 'object' && object !== null && !Array.isArray(object);\n        const isArray = (object) => typeof object === 'object' && object !== null && Array.isArray(object);\n        if (isObject(value)) {\n            return Object.keys(value).reduce((acc, key) => ({\n                ...acc,\n                [key]: this.Clone(value[key]),\n            }), Object.getOwnPropertySymbols(value).reduce((acc, key) => ({\n                ...acc,\n                [key]: this.Clone(value[key]),\n            }), {}));\n        }\n        else if (isArray(value)) {\n            return value.map((item) => this.Clone(item));\n        }\n        else {\n            return value;\n        }\n    }\n}\n/** JSON Schema Type Builder with Static Type Resolution for TypeScript */\nexport const Type = new TypeBuilder();\n","export default {\n    \"name\": \"lucid-cardano\",\n    \"version\": \"0.10.7\",\n    \"license\": \"MIT\",\n    \"author\": \"Alessandro Konrad\",\n    \"description\": \"Lucid is a library, which allows you to create Cardano transactions and off-chain code for your Plutus contracts in JavaScript, Deno and Node.js.\",\n    \"repository\": \"https://github.com/spacebudz/lucid\"\n};\n","const isNode = globalThis?.process?.versions?.node;\nif (isNode) {\n    if (typeof btoa === 'undefined') {globalThis.btoa = function (str) {return Buffer.from(str, 'binary').toString('base64');}; globalThis.atob = function (b64Encoded) {return Buffer.from(b64Encoded, 'base64').toString('binary');};}\n    const fetch = /* #__PURE__ */ await import(/* webpackIgnore: true */ \"node-fetch\");\n    const { Crypto } = /* #__PURE__ */ await import(/* webpackIgnore: true */ \"@peculiar/webcrypto\");\n    const { WebSocket } = /* #__PURE__ */ await import(/* webpackIgnore: true */ \"ws\");\n    const fs = /* #__PURE__ */ await import(/* webpackIgnore: true */ \"fs\");\n    if (!globalThis.WebSocket) globalThis.WebSocket = WebSocket;\n    if (!globalThis.crypto) globalThis.crypto = new Crypto();\n    if (!globalThis.fetch) globalThis.fetch = fetch.default;\n    if (!globalThis.Headers) globalThis.Headers = fetch.Headers;\n    if (!globalThis.Request) globalThis.Request = fetch.Request;\n    if (!globalThis.Response) globalThis.Response = fetch.Response;\n    if (!globalThis.fs) globalThis.fs = fs; \n}\n\nconst C = await (async () => {\n  try {\n    if (isNode) {\n      return await import(\n        /* webpackIgnore: true */ \"./libs/cardano_multiplatform_lib/nodejs/cardano_multiplatform_lib.generated.js\"\n      );\n    }\n    return await import(\n      \"./libs/cardano_multiplatform_lib/cardano_multiplatform_lib.generated.js\"\n    );\n  } catch (_e) {\n    // This only ever happens during SSR rendering\n    return null;\n  }\n})();\nconst M = await (async () => {\n  try {\n    if (isNode) {\n      return await import(\n        /* webpackIgnore: true */ \"./libs/cardano_message_signing/nodejs/cardano_message_signing.generated.js\"\n      );\n    }\n    return await import(\n      \"./libs/cardano_message_signing/cardano_message_signing.generated.js\"\n    );\n  } catch (_e) {\n    // This only ever happens during SSR rendering\n    return null;\n  }\n})();\nif (!isNode) {\n  async function unsafeInstantiate(module) {\n    try {\n      await module.instantiate();\n    } catch (_e) {\n      // This only ever happens during SSR rendering\n    }\n  }\n  await Promise.all([\n    unsafeInstantiate(C),\n    unsafeInstantiate(M),\n  ]);\n}\nexport { C, M };\n","import { C } from \"../core/mod.js\";\nimport { coreToUtxo, createCostModels, fromHex, fromUnit, paymentCredentialOf, toHex, toUnit, Utils, utxoToCore, } from \"../utils/mod.js\";\nimport { Tx } from \"./tx.js\";\nimport { TxComplete } from \"./tx_complete.js\";\nimport { discoverOwnUsedTxKeyHashes, walletFromSeed } from \"../misc/wallet.js\";\nimport { signData, verifyData } from \"../misc/sign_data.js\";\nimport { Message } from \"./message.js\";\nimport { SLOT_CONFIG_NETWORK } from \"../plutus/time.js\";\nimport { Data } from \"../plutus/data.js\";\nimport { Emulator } from \"../provider/emulator.js\";\nexport class Lucid {\n    constructor() {\n        Object.defineProperty(this, \"txBuilderConfig\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"wallet\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"provider\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"network\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"Mainnet\"\n        });\n        Object.defineProperty(this, \"utils\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    static async new(provider, network) {\n        const lucid = new this();\n        if (network)\n            lucid.network = network;\n        if (provider) {\n            lucid.provider = provider;\n            const protocolParameters = await provider.getProtocolParameters();\n            if (lucid.provider instanceof Emulator) {\n                lucid.network = \"Custom\";\n                SLOT_CONFIG_NETWORK[lucid.network] = {\n                    zeroTime: lucid.provider.now(),\n                    zeroSlot: 0,\n                    slotLength: 1000,\n                };\n            }\n            const slotConfig = SLOT_CONFIG_NETWORK[lucid.network];\n            lucid.txBuilderConfig = C.TransactionBuilderConfigBuilder.new()\n                .coins_per_utxo_byte(C.BigNum.from_str(protocolParameters.coinsPerUtxoByte.toString()))\n                .fee_algo(C.LinearFee.new(C.BigNum.from_str(protocolParameters.minFeeA.toString()), C.BigNum.from_str(protocolParameters.minFeeB.toString())))\n                .key_deposit(C.BigNum.from_str(protocolParameters.keyDeposit.toString()))\n                .pool_deposit(C.BigNum.from_str(protocolParameters.poolDeposit.toString()))\n                .max_tx_size(protocolParameters.maxTxSize)\n                .max_value_size(protocolParameters.maxValSize)\n                .collateral_percentage(protocolParameters.collateralPercentage)\n                .max_collateral_inputs(protocolParameters.maxCollateralInputs)\n                .max_tx_ex_units(C.ExUnits.new(C.BigNum.from_str(protocolParameters.maxTxExMem.toString()), C.BigNum.from_str(protocolParameters.maxTxExSteps.toString())))\n                .ex_unit_prices(C.ExUnitPrices.from_float(protocolParameters.priceMem, protocolParameters.priceStep))\n                .slot_config(C.BigNum.from_str(slotConfig.zeroTime.toString()), C.BigNum.from_str(slotConfig.zeroSlot.toString()), slotConfig.slotLength)\n                .blockfrost(\n            // We have Aiken now as native plutus core engine (primary), but we still support blockfrost (secondary) in case of bugs.\n            C.Blockfrost.new(\n            // deno-lint-ignore no-explicit-any\n            (provider?.url || \"\") + \"/utils/txs/evaluate\", \n            // deno-lint-ignore no-explicit-any\n            provider?.projectId || \"\"))\n                .costmdls(createCostModels(protocolParameters.costModels))\n                .build();\n        }\n        lucid.utils = new Utils(lucid);\n        return lucid;\n    }\n    /**\n     * Switch provider and/or network.\n     * If provider or network unset, no overwriting happens. Provider or network from current instance are taken then.\n     */\n    async switchProvider(provider, network) {\n        if (this.network === \"Custom\") {\n            throw new Error(\"Cannot switch when on custom network.\");\n        }\n        const lucid = await Lucid.new(provider, network);\n        this.txBuilderConfig = lucid.txBuilderConfig;\n        this.provider = provider || this.provider;\n        this.network = network || this.network;\n        this.wallet = lucid.wallet;\n        return this;\n    }\n    newTx() {\n        return new Tx(this);\n    }\n    fromTx(tx) {\n        return new TxComplete(this, C.Transaction.from_bytes(fromHex(tx)));\n    }\n    /** Signs a message. Expects the payload to be Hex encoded. */\n    newMessage(address, payload) {\n        return new Message(this, address, payload);\n    }\n    /** Verify a message. Expects the payload to be Hex encoded. */\n    verifyMessage(address, payload, signedMessage) {\n        const { paymentCredential, stakeCredential, address: { hex: addressHex } } = this.utils.getAddressDetails(address);\n        const keyHash = paymentCredential?.hash || stakeCredential?.hash;\n        if (!keyHash)\n            throw new Error(\"Not a valid address provided.\");\n        return verifyData(addressHex, keyHash, payload, signedMessage);\n    }\n    currentSlot() {\n        return this.utils.unixTimeToSlot(Date.now());\n    }\n    utxosAt(addressOrCredential) {\n        return this.provider.getUtxos(addressOrCredential);\n    }\n    utxosAtWithUnit(addressOrCredential, unit) {\n        return this.provider.getUtxosWithUnit(addressOrCredential, unit);\n    }\n    /** Unit needs to be an NFT (or optionally the entire supply in one UTxO). */\n    utxoByUnit(unit) {\n        return this.provider.getUtxoByUnit(unit);\n    }\n    utxosByOutRef(outRefs) {\n        return this.provider.getUtxosByOutRef(outRefs);\n    }\n    delegationAt(rewardAddress) {\n        return this.provider.getDelegation(rewardAddress);\n    }\n    awaitTx(txHash, checkInterval = 3000) {\n        return this.provider.awaitTx(txHash, checkInterval);\n    }\n    async datumOf(utxo, type) {\n        if (!utxo.datum) {\n            if (!utxo.datumHash) {\n                throw new Error(\"This UTxO does not have a datum hash.\");\n            }\n            utxo.datum = await this.provider.getDatum(utxo.datumHash);\n        }\n        return Data.from(utxo.datum, type);\n    }\n    /** Query CIP-0068 metadata for a specifc asset. */\n    async metadataOf(unit) {\n        const { policyId, name, label } = fromUnit(unit);\n        switch (label) {\n            case 222:\n            case 333:\n            case 444: {\n                const utxo = await this.utxoByUnit(toUnit(policyId, name, 100));\n                const metadata = await this.datumOf(utxo);\n                return Data.toJson(metadata.fields[0]);\n            }\n            default:\n                throw new Error(\"No variant matched.\");\n        }\n    }\n    /**\n     * Cardano Private key in bech32; not the BIP32 private key or any key that is not fully derived.\n     * Only an Enteprise address (without stake credential) is derived.\n     */\n    selectWalletFromPrivateKey(privateKey) {\n        const priv = C.PrivateKey.from_bech32(privateKey);\n        const pubKeyHash = priv.to_public().hash();\n        this.wallet = {\n            // deno-lint-ignore require-await\n            address: async () => C.EnterpriseAddress.new(this.network === \"Mainnet\" ? 1 : 0, C.StakeCredential.from_keyhash(pubKeyHash))\n                .to_address()\n                .to_bech32(undefined),\n            // deno-lint-ignore require-await\n            rewardAddress: async () => null,\n            getUtxos: async () => {\n                return await this.utxosAt(paymentCredentialOf(await this.wallet.address()));\n            },\n            getUtxosCore: async () => {\n                const utxos = await this.utxosAt(paymentCredentialOf(await this.wallet.address()));\n                const coreUtxos = C.TransactionUnspentOutputs.new();\n                utxos.forEach((utxo) => {\n                    coreUtxos.add(utxoToCore(utxo));\n                });\n                return coreUtxos;\n            },\n            // deno-lint-ignore require-await\n            getDelegation: async () => {\n                return { poolId: null, rewards: 0n };\n            },\n            // deno-lint-ignore require-await\n            signTx: async (tx) => {\n                const witness = C.make_vkey_witness(C.hash_transaction(tx.body()), priv);\n                const txWitnessSetBuilder = C.TransactionWitnessSetBuilder.new();\n                txWitnessSetBuilder.add_vkey(witness);\n                return txWitnessSetBuilder.build();\n            },\n            // deno-lint-ignore require-await\n            signMessage: async (address, payload) => {\n                const { paymentCredential, address: { hex: hexAddress } } = this.utils\n                    .getAddressDetails(address);\n                const keyHash = paymentCredential?.hash;\n                const originalKeyHash = pubKeyHash.to_hex();\n                if (!keyHash || keyHash !== originalKeyHash) {\n                    throw new Error(`Cannot sign message for address: ${address}.`);\n                }\n                return signData(hexAddress, payload, privateKey);\n            },\n            submitTx: async (tx) => {\n                return await this.provider.submitTx(tx);\n            },\n        };\n        return this;\n    }\n    selectWallet(api) {\n        const getAddressHex = async () => {\n            const [addressHex] = await api.getUsedAddresses();\n            if (addressHex)\n                return addressHex;\n            const [unusedAddressHex] = await api.getUnusedAddresses();\n            return unusedAddressHex;\n        };\n        this.wallet = {\n            address: async () => C.Address.from_bytes(fromHex(await getAddressHex())).to_bech32(undefined),\n            rewardAddress: async () => {\n                const [rewardAddressHex] = await api.getRewardAddresses();\n                const rewardAddress = rewardAddressHex\n                    ? C.RewardAddress.from_address(C.Address.from_bytes(fromHex(rewardAddressHex)))\n                        .to_address()\n                        .to_bech32(undefined)\n                    : null;\n                return rewardAddress;\n            },\n            getUtxos: async () => {\n                const utxos = ((await api.getUtxos()) || []).map((utxo) => {\n                    const parsedUtxo = C.TransactionUnspentOutput.from_bytes(fromHex(utxo));\n                    return coreToUtxo(parsedUtxo);\n                });\n                return utxos;\n            },\n            getUtxosCore: async () => {\n                const utxos = C.TransactionUnspentOutputs.new();\n                ((await api.getUtxos()) || []).forEach((utxo) => {\n                    utxos.add(C.TransactionUnspentOutput.from_bytes(fromHex(utxo)));\n                });\n                return utxos;\n            },\n            getDelegation: async () => {\n                const rewardAddr = await this.wallet.rewardAddress();\n                return rewardAddr\n                    ? await this.delegationAt(rewardAddr)\n                    : { poolId: null, rewards: 0n };\n            },\n            signTx: async (tx) => {\n                const witnessSet = await api.signTx(toHex(tx.to_bytes()), true);\n                return C.TransactionWitnessSet.from_bytes(fromHex(witnessSet));\n            },\n            signMessage: async (address, payload) => {\n                const hexAddress = toHex(C.Address.from_bech32(address).to_bytes());\n                return await api.signData(hexAddress, payload);\n            },\n            submitTx: async (tx) => {\n                const txHash = await api.submitTx(tx);\n                return txHash;\n            },\n        };\n        return this;\n    }\n    /**\n     * Emulates a wallet by constructing it with the utxos and an address.\n     * If utxos are not set, utxos are fetched from the provided address.\n     */\n    selectWalletFrom({ address, utxos, rewardAddress, }) {\n        const addressDetails = this.utils.getAddressDetails(address);\n        this.wallet = {\n            // deno-lint-ignore require-await\n            address: async () => address,\n            // deno-lint-ignore require-await\n            rewardAddress: async () => {\n                const rewardAddr = !rewardAddress && addressDetails.stakeCredential\n                    ? (() => {\n                        if (addressDetails.stakeCredential.type === \"Key\") {\n                            return C.RewardAddress.new(this.network === \"Mainnet\" ? 1 : 0, C.StakeCredential.from_keyhash(C.Ed25519KeyHash.from_hex(addressDetails.stakeCredential.hash)))\n                                .to_address()\n                                .to_bech32(undefined);\n                        }\n                        return C.RewardAddress.new(this.network === \"Mainnet\" ? 1 : 0, C.StakeCredential.from_scripthash(C.ScriptHash.from_hex(addressDetails.stakeCredential.hash)))\n                            .to_address()\n                            .to_bech32(undefined);\n                    })()\n                    : rewardAddress;\n                return rewardAddr || null;\n            },\n            getUtxos: async () => {\n                return utxos ? utxos : await this.utxosAt(paymentCredentialOf(address));\n            },\n            getUtxosCore: async () => {\n                const coreUtxos = C.TransactionUnspentOutputs.new();\n                (utxos ? utxos : await this.utxosAt(paymentCredentialOf(address)))\n                    .forEach((utxo) => coreUtxos.add(utxoToCore(utxo)));\n                return coreUtxos;\n            },\n            getDelegation: async () => {\n                const rewardAddr = await this.wallet.rewardAddress();\n                return rewardAddr\n                    ? await this.delegationAt(rewardAddr)\n                    : { poolId: null, rewards: 0n };\n            },\n            // deno-lint-ignore require-await\n            signTx: async () => {\n                throw new Error(\"Not implemented\");\n            },\n            // deno-lint-ignore require-await\n            signMessage: async () => {\n                throw new Error(\"Not implemented\");\n            },\n            submitTx: async (tx) => {\n                return await this.provider.submitTx(tx);\n            },\n        };\n        return this;\n    }\n    /**\n     * Select wallet from a seed phrase (e.g. 15 or 24 words). You have the option to choose between a Base address (with stake credential)\n     * and Enterprise address (without stake credential). You can also decide which account index to derive. By default account 0 is derived.\n     */\n    selectWalletFromSeed(seed, options) {\n        const { address, rewardAddress, paymentKey, stakeKey } = walletFromSeed(seed, {\n            addressType: options?.addressType || \"Base\",\n            accountIndex: options?.accountIndex || 0,\n            password: options?.password,\n            network: this.network,\n        });\n        const paymentKeyHash = C.PrivateKey.from_bech32(paymentKey).to_public()\n            .hash().to_hex();\n        const stakeKeyHash = stakeKey\n            ? C.PrivateKey.from_bech32(stakeKey).to_public().hash().to_hex()\n            : \"\";\n        const privKeyHashMap = {\n            [paymentKeyHash]: paymentKey,\n            [stakeKeyHash]: stakeKey,\n        };\n        this.wallet = {\n            // deno-lint-ignore require-await\n            address: async () => address,\n            // deno-lint-ignore require-await\n            rewardAddress: async () => rewardAddress || null,\n            // deno-lint-ignore require-await\n            getUtxos: async () => this.utxosAt(paymentCredentialOf(address)),\n            getUtxosCore: async () => {\n                const coreUtxos = C.TransactionUnspentOutputs.new();\n                (await this.utxosAt(paymentCredentialOf(address))).forEach((utxo) => coreUtxos.add(utxoToCore(utxo)));\n                return coreUtxos;\n            },\n            getDelegation: async () => {\n                const rewardAddr = await this.wallet.rewardAddress();\n                return rewardAddr\n                    ? await this.delegationAt(rewardAddr)\n                    : { poolId: null, rewards: 0n };\n            },\n            signTx: async (tx) => {\n                const utxos = await this.utxosAt(address);\n                const ownKeyHashes = [paymentKeyHash, stakeKeyHash];\n                const usedKeyHashes = discoverOwnUsedTxKeyHashes(tx, ownKeyHashes, utxos);\n                const txWitnessSetBuilder = C.TransactionWitnessSetBuilder.new();\n                usedKeyHashes.forEach((keyHash) => {\n                    const witness = C.make_vkey_witness(C.hash_transaction(tx.body()), C.PrivateKey.from_bech32(privKeyHashMap[keyHash]));\n                    txWitnessSetBuilder.add_vkey(witness);\n                });\n                return txWitnessSetBuilder.build();\n            },\n            // deno-lint-ignore require-await\n            signMessage: async (address, payload) => {\n                const { paymentCredential, stakeCredential, address: { hex: hexAddress }, } = this.utils\n                    .getAddressDetails(address);\n                const keyHash = paymentCredential?.hash || stakeCredential?.hash;\n                const privateKey = privKeyHashMap[keyHash];\n                if (!privateKey) {\n                    throw new Error(`Cannot sign message for address: ${address}.`);\n                }\n                return signData(hexAddress, payload, privateKey);\n            },\n            submitTx: async (tx) => {\n                return await this.provider.submitTx(tx);\n            },\n        };\n        return this;\n    }\n}\n","import { signData } from \"../misc/sign_data.js\";\nimport { C } from \"../mod.js\";\nexport class Message {\n    constructor(lucid, address, payload) {\n        Object.defineProperty(this, \"lucid\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"address\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"payload\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.lucid = lucid;\n        this.address = address;\n        this.payload = payload;\n    }\n    /** Sign message with selected wallet. */\n    sign() {\n        return this.lucid.wallet.signMessage(this.address, this.payload);\n    }\n    /** Sign message with a separate private key. */\n    signWithPrivateKey(privateKey) {\n        const { paymentCredential, stakeCredential, address: { hex: hexAddress } } = this.lucid.utils.getAddressDetails(this.address);\n        const keyHash = paymentCredential?.hash || stakeCredential?.hash;\n        const keyHashOriginal = C.PrivateKey.from_bech32(privateKey).to_public()\n            .hash().to_hex();\n        if (!keyHash || keyHash !== keyHashOriginal) {\n            throw new Error(`Cannot sign message for address: ${this.address}.`);\n        }\n        return signData(hexAddress, this.payload, privateKey);\n    }\n}\n","import { C } from \"../core/mod.js\";\nimport { Data } from \"../mod.js\";\nimport { assetsToValue, fromHex, networkToId, toHex, toScriptRef, utxoToCore, } from \"../utils/mod.js\";\nimport { applyDoubleCborEncoding } from \"../utils/utils.js\";\nimport { TxComplete } from \"./tx_complete.js\";\nexport class Tx {\n    constructor(lucid) {\n        Object.defineProperty(this, \"txBuilder\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Stores the tx instructions, which get executed after calling .complete() */\n        Object.defineProperty(this, \"tasks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"lucid\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.lucid = lucid;\n        this.txBuilder = C.TransactionBuilder.new(this.lucid.txBuilderConfig);\n        this.tasks = [];\n    }\n    /** Read data from utxos. These utxos are only referenced and not spent. */\n    readFrom(utxos) {\n        this.tasks.push(async (that) => {\n            for (const utxo of utxos) {\n                if (utxo.datumHash) {\n                    utxo.datum = Data.to(await that.lucid.datumOf(utxo));\n                    // Add datum to witness set, so it can be read from validators\n                    const plutusData = C.PlutusData.from_bytes(fromHex(utxo.datum));\n                    that.txBuilder.add_plutus_data(plutusData);\n                }\n                const coreUtxo = utxoToCore(utxo);\n                that.txBuilder.add_reference_input(coreUtxo);\n            }\n        });\n        return this;\n    }\n    /**\n     * A public key or native script input.\n     * With redeemer it's a plutus script input.\n     */\n    collectFrom(utxos, redeemer) {\n        this.tasks.push(async (that) => {\n            for (const utxo of utxos) {\n                if (utxo.datumHash && !utxo.datum) {\n                    utxo.datum = Data.to(await that.lucid.datumOf(utxo));\n                }\n                const coreUtxo = utxoToCore(utxo);\n                that.txBuilder.add_input(coreUtxo, redeemer &&\n                    C.ScriptWitness.new_plutus_witness(C.PlutusWitness.new(C.PlutusData.from_bytes(fromHex(redeemer)), utxo.datumHash && utxo.datum\n                        ? C.PlutusData.from_bytes(fromHex(utxo.datum))\n                        : undefined, undefined)));\n            }\n        });\n        return this;\n    }\n    /**\n     * All assets should be of the same policy id.\n     * You can chain mintAssets functions together if you need to mint assets with different policy ids.\n     * If the plutus script doesn't need a redeemer, you still need to specifiy the void redeemer.\n     */\n    mintAssets(assets, redeemer) {\n        this.tasks.push((that) => {\n            const units = Object.keys(assets);\n            const policyId = units[0].slice(0, 56);\n            const mintAssets = C.MintAssets.new();\n            units.forEach((unit) => {\n                if (unit.slice(0, 56) !== policyId) {\n                    throw new Error(\"Only one policy id allowed. You can chain multiple mintAssets functions together if you need to mint assets with different policy ids.\");\n                }\n                mintAssets.insert(C.AssetName.new(fromHex(unit.slice(56))), C.Int.from_str(assets[unit].toString()));\n            });\n            const scriptHash = C.ScriptHash.from_bytes(fromHex(policyId));\n            that.txBuilder.add_mint(scriptHash, mintAssets, redeemer\n                ? C.ScriptWitness.new_plutus_witness(C.PlutusWitness.new(C.PlutusData.from_bytes(fromHex(redeemer)), undefined, undefined))\n                : undefined);\n        });\n        return this;\n    }\n    /** Pay to a public key or native script address. */\n    payToAddress(address, assets) {\n        this.tasks.push((that) => {\n            const output = C.TransactionOutput.new(addressFromWithNetworkCheck(address, that.lucid), assetsToValue(assets));\n            that.txBuilder.add_output(output);\n        });\n        return this;\n    }\n    /** Pay to a public key or native script address with datum or scriptRef. */\n    payToAddressWithData(address, outputData, assets) {\n        this.tasks.push((that) => {\n            if (typeof outputData === \"string\") {\n                outputData = { asHash: outputData };\n            }\n            if ([outputData.hash, outputData.asHash, outputData.inline].filter((b) => b)\n                .length > 1) {\n                throw new Error(\"Not allowed to set hash, asHash and inline at the same time.\");\n            }\n            const output = C.TransactionOutput.new(addressFromWithNetworkCheck(address, that.lucid), assetsToValue(assets));\n            if (outputData.hash) {\n                output.set_datum(C.Datum.new_data_hash(C.DataHash.from_hex(outputData.hash)));\n            }\n            else if (outputData.asHash) {\n                const plutusData = C.PlutusData.from_bytes(fromHex(outputData.asHash));\n                output.set_datum(C.Datum.new_data_hash(C.hash_plutus_data(plutusData)));\n                that.txBuilder.add_plutus_data(plutusData);\n            }\n            else if (outputData.inline) {\n                const plutusData = C.PlutusData.from_bytes(fromHex(outputData.inline));\n                output.set_datum(C.Datum.new_data(C.Data.new(plutusData)));\n            }\n            const script = outputData.scriptRef;\n            if (script) {\n                output.set_script_ref(toScriptRef(script));\n            }\n            that.txBuilder.add_output(output);\n        });\n        return this;\n    }\n    /** Pay to a plutus script address with datum or scriptRef. */\n    payToContract(address, outputData, assets) {\n        if (typeof outputData === \"string\") {\n            outputData = { asHash: outputData };\n        }\n        if (!(outputData.hash || outputData.asHash || outputData.inline)) {\n            throw new Error(\"No datum set. Script output becomes unspendable without datum.\");\n        }\n        return this.payToAddressWithData(address, outputData, assets);\n    }\n    /** Delegate to a stake pool. */\n    delegateTo(rewardAddress, poolId, redeemer) {\n        this.tasks.push((that) => {\n            const addressDetails = that.lucid.utils.getAddressDetails(rewardAddress);\n            if (addressDetails.type !== \"Reward\" ||\n                !addressDetails.stakeCredential) {\n                throw new Error(\"Not a reward address provided.\");\n            }\n            const credential = addressDetails.stakeCredential.type === \"Key\"\n                ? C.StakeCredential.from_keyhash(C.Ed25519KeyHash.from_bytes(fromHex(addressDetails.stakeCredential.hash)))\n                : C.StakeCredential.from_scripthash(C.ScriptHash.from_bytes(fromHex(addressDetails.stakeCredential.hash)));\n            that.txBuilder.add_certificate(C.Certificate.new_stake_delegation(C.StakeDelegation.new(credential, C.Ed25519KeyHash.from_bech32(poolId))), redeemer\n                ? C.ScriptWitness.new_plutus_witness(C.PlutusWitness.new(C.PlutusData.from_bytes(fromHex(redeemer)), undefined, undefined))\n                : undefined);\n        });\n        return this;\n    }\n    /** Register a reward address in order to delegate to a pool and receive rewards. */\n    registerStake(rewardAddress) {\n        this.tasks.push((that) => {\n            const addressDetails = that.lucid.utils.getAddressDetails(rewardAddress);\n            if (addressDetails.type !== \"Reward\" ||\n                !addressDetails.stakeCredential) {\n                throw new Error(\"Not a reward address provided.\");\n            }\n            const credential = addressDetails.stakeCredential.type === \"Key\"\n                ? C.StakeCredential.from_keyhash(C.Ed25519KeyHash.from_bytes(fromHex(addressDetails.stakeCredential.hash)))\n                : C.StakeCredential.from_scripthash(C.ScriptHash.from_bytes(fromHex(addressDetails.stakeCredential.hash)));\n            that.txBuilder.add_certificate(C.Certificate.new_stake_registration(C.StakeRegistration.new(credential)), undefined);\n        });\n        return this;\n    }\n    /** Deregister a reward address. */\n    deregisterStake(rewardAddress, redeemer) {\n        this.tasks.push((that) => {\n            const addressDetails = that.lucid.utils.getAddressDetails(rewardAddress);\n            if (addressDetails.type !== \"Reward\" ||\n                !addressDetails.stakeCredential) {\n                throw new Error(\"Not a reward address provided.\");\n            }\n            const credential = addressDetails.stakeCredential.type === \"Key\"\n                ? C.StakeCredential.from_keyhash(C.Ed25519KeyHash.from_bytes(fromHex(addressDetails.stakeCredential.hash)))\n                : C.StakeCredential.from_scripthash(C.ScriptHash.from_bytes(fromHex(addressDetails.stakeCredential.hash)));\n            that.txBuilder.add_certificate(C.Certificate.new_stake_deregistration(C.StakeDeregistration.new(credential)), redeemer\n                ? C.ScriptWitness.new_plutus_witness(C.PlutusWitness.new(C.PlutusData.from_bytes(fromHex(redeemer)), undefined, undefined))\n                : undefined);\n        });\n        return this;\n    }\n    /** Register a stake pool. A pool deposit is required. The metadataUrl needs to be hosted already before making the registration. */\n    registerPool(poolParams) {\n        this.tasks.push(async (that) => {\n            const poolRegistration = await createPoolRegistration(poolParams, that.lucid);\n            const certificate = C.Certificate.new_pool_registration(poolRegistration);\n            that.txBuilder.add_certificate(certificate, undefined);\n        });\n        return this;\n    }\n    /** Update a stake pool. No pool deposit is required. The metadataUrl needs to be hosted already before making the update. */\n    updatePool(poolParams) {\n        this.tasks.push(async (that) => {\n            const poolRegistration = await createPoolRegistration(poolParams, that.lucid);\n            // This flag makes sure a pool deposit is not required\n            poolRegistration.set_is_update(true);\n            const certificate = C.Certificate.new_pool_registration(poolRegistration);\n            that.txBuilder.add_certificate(certificate, undefined);\n        });\n        return this;\n    }\n    /**\n     * Retire a stake pool. The epoch needs to be the greater than the current epoch + 1 and less than current epoch + eMax.\n     * The pool deposit will be sent to reward address as reward after full retirement of the pool.\n     */\n    retirePool(poolId, epoch) {\n        this.tasks.push((that) => {\n            const certificate = C.Certificate.new_pool_retirement(C.PoolRetirement.new(C.Ed25519KeyHash.from_bech32(poolId), epoch));\n            that.txBuilder.add_certificate(certificate, undefined);\n        });\n        return this;\n    }\n    withdraw(rewardAddress, amount, redeemer) {\n        this.tasks.push((that) => {\n            that.txBuilder.add_withdrawal(C.RewardAddress.from_address(addressFromWithNetworkCheck(rewardAddress, that.lucid)), C.BigNum.from_str(amount.toString()), redeemer\n                ? C.ScriptWitness.new_plutus_witness(C.PlutusWitness.new(C.PlutusData.from_bytes(fromHex(redeemer)), undefined, undefined))\n                : undefined);\n        });\n        return this;\n    }\n    /**\n     * Needs to be a public key address.\n     * The PaymentKeyHash is taken when providing a Base, Enterprise or Pointer address.\n     * The StakeKeyHash is taken when providing a Reward address.\n     */\n    addSigner(address) {\n        const addressDetails = this.lucid.utils.getAddressDetails(address);\n        if (!addressDetails.paymentCredential && !addressDetails.stakeCredential) {\n            throw new Error(\"Not a valid address.\");\n        }\n        const credential = addressDetails.type === \"Reward\"\n            ? addressDetails.stakeCredential\n            : addressDetails.paymentCredential;\n        if (credential.type === \"Script\") {\n            throw new Error(\"Only key hashes are allowed as signers.\");\n        }\n        return this.addSignerKey(credential.hash);\n    }\n    /** Add a payment or stake key hash as a required signer of the transaction. */\n    addSignerKey(keyHash) {\n        this.tasks.push((that) => {\n            that.txBuilder.add_required_signer(C.Ed25519KeyHash.from_bytes(fromHex(keyHash)));\n        });\n        return this;\n    }\n    validFrom(unixTime) {\n        this.tasks.push((that) => {\n            const slot = that.lucid.utils.unixTimeToSlot(unixTime);\n            that.txBuilder.set_validity_start_interval(C.BigNum.from_str(slot.toString()));\n        });\n        return this;\n    }\n    validTo(unixTime) {\n        this.tasks.push((that) => {\n            const slot = that.lucid.utils.unixTimeToSlot(unixTime);\n            that.txBuilder.set_ttl(C.BigNum.from_str(slot.toString()));\n        });\n        return this;\n    }\n    attachMetadata(label, metadata) {\n        this.tasks.push((that) => {\n            that.txBuilder.add_json_metadatum(C.BigNum.from_str(label.toString()), JSON.stringify(metadata));\n        });\n        return this;\n    }\n    /** Converts strings to bytes if prefixed with **'0x'**. */\n    attachMetadataWithConversion(label, metadata) {\n        this.tasks.push((that) => {\n            that.txBuilder.add_json_metadatum_with_schema(C.BigNum.from_str(label.toString()), JSON.stringify(metadata), C.MetadataJsonSchema.BasicConversions);\n        });\n        return this;\n    }\n    /** Explicitely set the network id in the transaction body. */\n    addNetworkId(id) {\n        this.tasks.push((that) => {\n            that.txBuilder.set_network_id(C.NetworkId.from_bytes(fromHex(id.toString(16).padStart(2, \"0\"))));\n        });\n        return this;\n    }\n    attachSpendingValidator(spendingValidator) {\n        this.tasks.push((that) => {\n            attachScript(that, spendingValidator);\n        });\n        return this;\n    }\n    attachMintingPolicy(mintingPolicy) {\n        this.tasks.push((that) => {\n            attachScript(that, mintingPolicy);\n        });\n        return this;\n    }\n    attachCertificateValidator(certValidator) {\n        this.tasks.push((that) => {\n            attachScript(that, certValidator);\n        });\n        return this;\n    }\n    attachWithdrawalValidator(withdrawalValidator) {\n        this.tasks.push((that) => {\n            attachScript(that, withdrawalValidator);\n        });\n        return this;\n    }\n    /** Compose transactions. */\n    compose(tx) {\n        if (tx)\n            this.tasks = this.tasks.concat(tx.tasks);\n        return this;\n    }\n    async complete(options) {\n        if ([\n            options?.change?.outputData?.hash,\n            options?.change?.outputData?.asHash,\n            options?.change?.outputData?.inline,\n        ].filter((b) => b)\n            .length > 1) {\n            throw new Error(\"Not allowed to set hash, asHash and inline at the same time.\");\n        }\n        let task = this.tasks.shift();\n        while (task) {\n            await task(this);\n            task = this.tasks.shift();\n        }\n        const utxos = await this.lucid.wallet.getUtxosCore();\n        const changeAddress = addressFromWithNetworkCheck(options?.change?.address || (await this.lucid.wallet.address()), this.lucid);\n        if (options?.coinSelection || options?.coinSelection === undefined) {\n            this.txBuilder.add_inputs_from(utxos, changeAddress, Uint32Array.from([\n                200,\n                1000,\n                1500,\n                800,\n                800,\n                5000, // weight utxos\n            ]));\n        }\n        this.txBuilder.balance(changeAddress, (() => {\n            if (options?.change?.outputData?.hash) {\n                return C.Datum.new_data_hash(C.DataHash.from_hex(options.change.outputData.hash));\n            }\n            else if (options?.change?.outputData?.asHash) {\n                this.txBuilder.add_plutus_data(C.PlutusData.from_bytes(fromHex(options.change.outputData.asHash)));\n                return C.Datum.new_data_hash(C.hash_plutus_data(C.PlutusData.from_bytes(fromHex(options.change.outputData.asHash))));\n            }\n            else if (options?.change?.outputData?.inline) {\n                return C.Datum.new_data(C.Data.new(C.PlutusData.from_bytes(fromHex(options.change.outputData.inline))));\n            }\n            else {\n                return undefined;\n            }\n        })());\n        return new TxComplete(this.lucid, await this.txBuilder.construct(utxos, changeAddress, options?.nativeUplc === undefined ? true : options?.nativeUplc));\n    }\n    /** Return the current transaction body in Hex encoded Cbor. */\n    async toString() {\n        let task = this.tasks.shift();\n        while (task) {\n            await task(this);\n            task = this.tasks.shift();\n        }\n        return toHex(this.txBuilder.to_bytes());\n    }\n}\nfunction attachScript(tx, { type, script }) {\n    if (type === \"Native\") {\n        return tx.txBuilder.add_native_script(C.NativeScript.from_bytes(fromHex(script)));\n    }\n    else if (type === \"PlutusV1\") {\n        return tx.txBuilder.add_plutus_script(C.PlutusScript.from_bytes(fromHex(applyDoubleCborEncoding(script))));\n    }\n    else if (type === \"PlutusV2\") {\n        return tx.txBuilder.add_plutus_v2_script(C.PlutusScript.from_bytes(fromHex(applyDoubleCborEncoding(script))));\n    }\n    throw new Error(\"No variant matched.\");\n}\nasync function createPoolRegistration(poolParams, lucid) {\n    const poolOwners = C.Ed25519KeyHashes.new();\n    poolParams.owners.forEach((owner) => {\n        const { stakeCredential } = lucid.utils.getAddressDetails(owner);\n        if (stakeCredential?.type === \"Key\") {\n            poolOwners.add(C.Ed25519KeyHash.from_hex(stakeCredential.hash));\n        }\n        else\n            throw new Error(\"Only key hashes allowed for pool owners.\");\n    });\n    const metadata = poolParams.metadataUrl\n        ? await fetch(poolParams.metadataUrl)\n            .then((res) => res.arrayBuffer())\n        : null;\n    const metadataHash = metadata\n        ? C.PoolMetadataHash.from_bytes(C.hash_blake2b256(new Uint8Array(metadata)))\n        : null;\n    const relays = C.Relays.new();\n    poolParams.relays.forEach((relay) => {\n        switch (relay.type) {\n            case \"SingleHostIp\": {\n                const ipV4 = relay.ipV4\n                    ? C.Ipv4.new(new Uint8Array(relay.ipV4.split(\".\").map((b) => parseInt(b))))\n                    : undefined;\n                const ipV6 = relay.ipV6\n                    ? C.Ipv6.new(fromHex(relay.ipV6.replaceAll(\":\", \"\")))\n                    : undefined;\n                relays.add(C.Relay.new_single_host_addr(C.SingleHostAddr.new(relay.port, ipV4, ipV6)));\n                break;\n            }\n            case \"SingleHostDomainName\": {\n                relays.add(C.Relay.new_single_host_name(C.SingleHostName.new(relay.port, C.DNSRecordAorAAAA.new(relay.domainName))));\n                break;\n            }\n            case \"MultiHost\": {\n                relays.add(C.Relay.new_multi_host_name(C.MultiHostName.new(C.DNSRecordSRV.new(relay.domainName))));\n                break;\n            }\n        }\n    });\n    return C.PoolRegistration.new(C.PoolParams.new(C.Ed25519KeyHash.from_bech32(poolParams.poolId), C.VRFKeyHash.from_hex(poolParams.vrfKeyHash), C.BigNum.from_str(poolParams.pledge.toString()), C.BigNum.from_str(poolParams.cost.toString()), C.UnitInterval.from_float(poolParams.margin), C.RewardAddress.from_address(addressFromWithNetworkCheck(poolParams.rewardAddress, lucid)), poolOwners, relays, metadataHash\n        ? C.PoolMetadata.new(C.Url.new(poolParams.metadataUrl), metadataHash)\n        : undefined));\n}\nfunction addressFromWithNetworkCheck(address, lucid) {\n    const { type, networkId } = lucid.utils.getAddressDetails(address);\n    const actualNetworkId = networkToId(lucid.network);\n    if (networkId !== actualNetworkId) {\n        throw new Error(`Invalid address: Expected address with network id ${actualNetworkId}, but got ${networkId}`);\n    }\n    return type === \"Byron\"\n        ? C.ByronAddress.from_base58(address).to_address()\n        : C.Address.from_bech32(address);\n}\n","import { C } from \"../core/mod.js\";\nimport { TxSigned } from \"./tx_signed.js\";\nimport { fromHex, toHex } from \"../utils/mod.js\";\nexport class TxComplete {\n    constructor(lucid, tx) {\n        Object.defineProperty(this, \"txComplete\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"witnessSetBuilder\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tasks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"lucid\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fee\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"exUnits\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: null\n        });\n        this.lucid = lucid;\n        this.txComplete = tx;\n        this.witnessSetBuilder = C.TransactionWitnessSetBuilder.new();\n        this.tasks = [];\n        this.fee = parseInt(tx.body().fee().to_str());\n        const redeemers = tx.witness_set().redeemers();\n        if (redeemers) {\n            const exUnits = { cpu: 0, mem: 0 };\n            for (let i = 0; i < redeemers.len(); i++) {\n                const redeemer = redeemers.get(i);\n                exUnits.cpu += parseInt(redeemer.ex_units().steps().to_str());\n                exUnits.mem += parseInt(redeemer.ex_units().mem().to_str());\n            }\n            this.exUnits = exUnits;\n        }\n    }\n    sign() {\n        this.tasks.push(async () => {\n            const witnesses = await this.lucid.wallet.signTx(this.txComplete);\n            this.witnessSetBuilder.add_existing(witnesses);\n        });\n        return this;\n    }\n    /** Add an extra signature from a private key. */\n    signWithPrivateKey(privateKey) {\n        const priv = C.PrivateKey.from_bech32(privateKey);\n        const witness = C.make_vkey_witness(C.hash_transaction(this.txComplete.body()), priv);\n        this.witnessSetBuilder.add_vkey(witness);\n        return this;\n    }\n    /** Sign the transaction and return the witnesses that were just made. */\n    async partialSign() {\n        const witnesses = await this.lucid.wallet.signTx(this.txComplete);\n        this.witnessSetBuilder.add_existing(witnesses);\n        return toHex(witnesses.to_bytes());\n    }\n    /**\n     * Sign the transaction and return the witnesses that were just made.\n     * Add an extra signature from a private key.\n     */\n    partialSignWithPrivateKey(privateKey) {\n        const priv = C.PrivateKey.from_bech32(privateKey);\n        const witness = C.make_vkey_witness(C.hash_transaction(this.txComplete.body()), priv);\n        this.witnessSetBuilder.add_vkey(witness);\n        const witnesses = C.TransactionWitnessSetBuilder.new();\n        witnesses.add_vkey(witness);\n        return toHex(witnesses.build().to_bytes());\n    }\n    /** Sign the transaction with the given witnesses. */\n    assemble(witnesses) {\n        witnesses.forEach((witness) => {\n            const witnessParsed = C.TransactionWitnessSet.from_bytes(fromHex(witness));\n            this.witnessSetBuilder.add_existing(witnessParsed);\n        });\n        return this;\n    }\n    async complete() {\n        for (const task of this.tasks) {\n            await task();\n        }\n        this.witnessSetBuilder.add_existing(this.txComplete.witness_set());\n        const signedTx = C.Transaction.new(this.txComplete.body(), this.witnessSetBuilder.build(), this.txComplete.auxiliary_data());\n        return new TxSigned(this.lucid, signedTx);\n    }\n    /** Return the transaction in Hex encoded Cbor. */\n    toString() {\n        return toHex(this.txComplete.to_bytes());\n    }\n    /** Return the transaction hash. */\n    toHash() {\n        return C.hash_transaction(this.txComplete.body()).to_hex();\n    }\n}\n","import { C } from \"../core/mod.js\";\nimport { toHex } from \"../utils/mod.js\";\nexport class TxSigned {\n    constructor(lucid, tx) {\n        Object.defineProperty(this, \"txSigned\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"lucid\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.lucid = lucid;\n        this.txSigned = tx;\n    }\n    async submit() {\n        return await (this.lucid.wallet || this.lucid.provider).submitTx(toHex(this.txSigned.to_bytes()));\n    }\n    /** Returns the transaction in Hex encoded Cbor. */\n    toString() {\n        return toHex(this.txSigned.to_bytes());\n    }\n    /** Return the transaction hash. */\n    toHash() {\n        return C.hash_transaction(this.txSigned.body()).to_hex();\n    }\n}\n","// This is a partial reimplementation of BIP39 in Deno: https://github.com/bitcoinjs/bip39\n// We only use the default Wordlist (english)\nimport { Sha256 } from \"../../deps/deno.land/std@0.153.0/hash/sha256.js\";\nimport { toHex } from \"../utils/mod.js\";\nconst INVALID_MNEMONIC = \"Invalid mnemonic\";\nconst INVALID_ENTROPY = \"Invalid entropy\";\nconst INVALID_CHECKSUM = \"Invalid mnemonic checksum\";\nconst WORDLIST_REQUIRED = \"A wordlist is required but a default could not be found.\\n\" +\n    \"Please pass a 2048 word array explicitly.\";\nexport function mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    const words = normalize(mnemonic).split(\" \");\n    if (words.length % 3 !== 0) {\n        throw new Error(INVALID_MNEMONIC);\n    }\n    // convert word indices to 11 bit binary strings\n    const bits = words\n        .map((word) => {\n        const index = wordlist.indexOf(word);\n        if (index === -1) {\n            throw new Error(INVALID_MNEMONIC);\n        }\n        return lpad(index.toString(2), \"0\", 11);\n    })\n        .join(\"\");\n    // split the binary string into ENT/CS\n    const dividerIndex = Math.floor(bits.length / 33) * 32;\n    const entropyBits = bits.slice(0, dividerIndex);\n    const checksumBits = bits.slice(dividerIndex);\n    // calculate the checksum and compare\n    const entropyBytes = entropyBits.match(/(.{1,8})/g).map(binaryToByte);\n    if (entropyBytes.length < 16) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    if (entropyBytes.length > 32) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    if (entropyBytes.length % 4 !== 0) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    const entropy = new Uint8Array(entropyBytes);\n    const newChecksum = deriveChecksumBits(entropy);\n    if (newChecksum !== checksumBits) {\n        throw new Error(INVALID_CHECKSUM);\n    }\n    return toHex(entropy);\n}\nfunction randomBytes(size) {\n    // reimplementation of: https://github.com/crypto-browserify/randombytes/blob/master/browser.js\n    const MAX_UINT32 = 4294967295;\n    const MAX_BYTES = 65536;\n    const bytes = new Uint8Array(size);\n    if (size > MAX_UINT32) {\n        throw new RangeError(\"requested too many random bytes\");\n    }\n    if (size > 0) { // getRandomValues fails on IE if size == 0\n        if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n            // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n            for (let generated = 0; generated < size; generated += MAX_BYTES) {\n                // buffer.slice automatically checks if the end is past the end of\n                // the buffer so we don't have to here\n                crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES));\n            }\n        }\n        else {\n            crypto.getRandomValues(bytes);\n        }\n    }\n    return bytes;\n}\nexport function generateMnemonic(strength, rng, wordlist) {\n    strength = strength || 128;\n    if (strength % 32 !== 0) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    rng = rng || randomBytes;\n    return entropyToMnemonic(rng(strength / 8), wordlist);\n}\nfunction entropyToMnemonic(entropy, wordlist) {\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    // 128 <= ENT <= 256\n    if (entropy.length < 16) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    if (entropy.length > 32) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    if (entropy.length % 4 !== 0) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    const entropyBits = bytesToBinary(Array.from(entropy));\n    const checksumBits = deriveChecksumBits(entropy);\n    const bits = entropyBits + checksumBits;\n    const chunks = bits.match(/(.{1,11})/g);\n    const words = chunks.map((binary) => {\n        const index = binaryToByte(binary);\n        return wordlist[index];\n    });\n    return wordlist[0] === \"\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093\" // Japanese wordlist\n        ? words.join(\"\\u3000\")\n        : words.join(\" \");\n}\nfunction deriveChecksumBits(entropyBuffer) {\n    const ENT = entropyBuffer.length * 8;\n    const CS = ENT / 32;\n    const hash = new Sha256()\n        .update(entropyBuffer)\n        .digest();\n    return bytesToBinary(Array.from(hash)).slice(0, CS);\n}\nfunction lpad(str, padString, length) {\n    while (str.length < length) {\n        str = padString + str;\n    }\n    return str;\n}\nfunction bytesToBinary(bytes) {\n    return bytes.map((x) => lpad(x.toString(2), \"0\", 8)).join(\"\");\n}\nfunction normalize(str) {\n    return (str || \"\").normalize(\"NFKD\");\n}\nfunction binaryToByte(bin) {\n    return parseInt(bin, 2);\n}\nconst DEFAULT_WORDLIST = [\n    \"abandon\",\n    \"ability\",\n    \"able\",\n    \"about\",\n    \"above\",\n    \"absent\",\n    \"absorb\",\n    \"abstract\",\n    \"absurd\",\n    \"abuse\",\n    \"access\",\n    \"accident\",\n    \"account\",\n    \"accuse\",\n    \"achieve\",\n    \"acid\",\n    \"acoustic\",\n    \"acquire\",\n    \"across\",\n    \"act\",\n    \"action\",\n    \"actor\",\n    \"actress\",\n    \"actual\",\n    \"adapt\",\n    \"add\",\n    \"addict\",\n    \"address\",\n    \"adjust\",\n    \"admit\",\n    \"adult\",\n    \"advance\",\n    \"advice\",\n    \"aerobic\",\n    \"affair\",\n    \"afford\",\n    \"afraid\",\n    \"again\",\n    \"age\",\n    \"agent\",\n    \"agree\",\n    \"ahead\",\n    \"aim\",\n    \"air\",\n    \"airport\",\n    \"aisle\",\n    \"alarm\",\n    \"album\",\n    \"alcohol\",\n    \"alert\",\n    \"alien\",\n    \"all\",\n    \"alley\",\n    \"allow\",\n    \"almost\",\n    \"alone\",\n    \"alpha\",\n    \"already\",\n    \"also\",\n    \"alter\",\n    \"always\",\n    \"amateur\",\n    \"amazing\",\n    \"among\",\n    \"amount\",\n    \"amused\",\n    \"analyst\",\n    \"anchor\",\n    \"ancient\",\n    \"anger\",\n    \"angle\",\n    \"angry\",\n    \"animal\",\n    \"ankle\",\n    \"announce\",\n    \"annual\",\n    \"another\",\n    \"answer\",\n    \"antenna\",\n    \"antique\",\n    \"anxiety\",\n    \"any\",\n    \"apart\",\n    \"apology\",\n    \"appear\",\n    \"apple\",\n    \"approve\",\n    \"april\",\n    \"arch\",\n    \"arctic\",\n    \"area\",\n    \"arena\",\n    \"argue\",\n    \"arm\",\n    \"armed\",\n    \"armor\",\n    \"army\",\n    \"around\",\n    \"arrange\",\n    \"arrest\",\n    \"arrive\",\n    \"arrow\",\n    \"art\",\n    \"artefact\",\n    \"artist\",\n    \"artwork\",\n    \"ask\",\n    \"aspect\",\n    \"assault\",\n    \"asset\",\n    \"assist\",\n    \"assume\",\n    \"asthma\",\n    \"athlete\",\n    \"atom\",\n    \"attack\",\n    \"attend\",\n    \"attitude\",\n    \"attract\",\n    \"auction\",\n    \"audit\",\n    \"august\",\n    \"aunt\",\n    \"author\",\n    \"auto\",\n    \"autumn\",\n    \"average\",\n    \"avocado\",\n    \"avoid\",\n    \"awake\",\n    \"aware\",\n    \"away\",\n    \"awesome\",\n    \"awful\",\n    \"awkward\",\n    \"axis\",\n    \"baby\",\n    \"bachelor\",\n    \"bacon\",\n    \"badge\",\n    \"bag\",\n    \"balance\",\n    \"balcony\",\n    \"ball\",\n    \"bamboo\",\n    \"banana\",\n    \"banner\",\n    \"bar\",\n    \"barely\",\n    \"bargain\",\n    \"barrel\",\n    \"base\",\n    \"basic\",\n    \"basket\",\n    \"battle\",\n    \"beach\",\n    \"bean\",\n    \"beauty\",\n    \"because\",\n    \"become\",\n    \"beef\",\n    \"before\",\n    \"begin\",\n    \"behave\",\n    \"behind\",\n    \"believe\",\n    \"below\",\n    \"belt\",\n    \"bench\",\n    \"benefit\",\n    \"best\",\n    \"betray\",\n    \"better\",\n    \"between\",\n    \"beyond\",\n    \"bicycle\",\n    \"bid\",\n    \"bike\",\n    \"bind\",\n    \"biology\",\n    \"bird\",\n    \"birth\",\n    \"bitter\",\n    \"black\",\n    \"blade\",\n    \"blame\",\n    \"blanket\",\n    \"blast\",\n    \"bleak\",\n    \"bless\",\n    \"blind\",\n    \"blood\",\n    \"blossom\",\n    \"blouse\",\n    \"blue\",\n    \"blur\",\n    \"blush\",\n    \"board\",\n    \"boat\",\n    \"body\",\n    \"boil\",\n    \"bomb\",\n    \"bone\",\n    \"bonus\",\n    \"book\",\n    \"boost\",\n    \"border\",\n    \"boring\",\n    \"borrow\",\n    \"boss\",\n    \"bottom\",\n    \"bounce\",\n    \"box\",\n    \"boy\",\n    \"bracket\",\n    \"brain\",\n    \"brand\",\n    \"brass\",\n    \"brave\",\n    \"bread\",\n    \"breeze\",\n    \"brick\",\n    \"bridge\",\n    \"brief\",\n    \"bright\",\n    \"bring\",\n    \"brisk\",\n    \"broccoli\",\n    \"broken\",\n    \"bronze\",\n    \"broom\",\n    \"brother\",\n    \"brown\",\n    \"brush\",\n    \"bubble\",\n    \"buddy\",\n    \"budget\",\n    \"buffalo\",\n    \"build\",\n    \"bulb\",\n    \"bulk\",\n    \"bullet\",\n    \"bundle\",\n    \"bunker\",\n    \"burden\",\n    \"burger\",\n    \"burst\",\n    \"bus\",\n    \"business\",\n    \"busy\",\n    \"butter\",\n    \"buyer\",\n    \"buzz\",\n    \"cabbage\",\n    \"cabin\",\n    \"cable\",\n    \"cactus\",\n    \"cage\",\n    \"cake\",\n    \"call\",\n    \"calm\",\n    \"camera\",\n    \"camp\",\n    \"can\",\n    \"canal\",\n    \"cancel\",\n    \"candy\",\n    \"cannon\",\n    \"canoe\",\n    \"canvas\",\n    \"canyon\",\n    \"capable\",\n    \"capital\",\n    \"captain\",\n    \"car\",\n    \"carbon\",\n    \"card\",\n    \"cargo\",\n    \"carpet\",\n    \"carry\",\n    \"cart\",\n    \"case\",\n    \"cash\",\n    \"casino\",\n    \"castle\",\n    \"casual\",\n    \"cat\",\n    \"catalog\",\n    \"catch\",\n    \"category\",\n    \"cattle\",\n    \"caught\",\n    \"cause\",\n    \"caution\",\n    \"cave\",\n    \"ceiling\",\n    \"celery\",\n    \"cement\",\n    \"census\",\n    \"century\",\n    \"cereal\",\n    \"certain\",\n    \"chair\",\n    \"chalk\",\n    \"champion\",\n    \"change\",\n    \"chaos\",\n    \"chapter\",\n    \"charge\",\n    \"chase\",\n    \"chat\",\n    \"cheap\",\n    \"check\",\n    \"cheese\",\n    \"chef\",\n    \"cherry\",\n    \"chest\",\n    \"chicken\",\n    \"chief\",\n    \"child\",\n    \"chimney\",\n    \"choice\",\n    \"choose\",\n    \"chronic\",\n    \"chuckle\",\n    \"chunk\",\n    \"churn\",\n    \"cigar\",\n    \"cinnamon\",\n    \"circle\",\n    \"citizen\",\n    \"city\",\n    \"civil\",\n    \"claim\",\n    \"clap\",\n    \"clarify\",\n    \"claw\",\n    \"clay\",\n    \"clean\",\n    \"clerk\",\n    \"clever\",\n    \"click\",\n    \"client\",\n    \"cliff\",\n    \"climb\",\n    \"clinic\",\n    \"clip\",\n    \"clock\",\n    \"clog\",\n    \"close\",\n    \"cloth\",\n    \"cloud\",\n    \"clown\",\n    \"club\",\n    \"clump\",\n    \"cluster\",\n    \"clutch\",\n    \"coach\",\n    \"coast\",\n    \"coconut\",\n    \"code\",\n    \"coffee\",\n    \"coil\",\n    \"coin\",\n    \"collect\",\n    \"color\",\n    \"column\",\n    \"combine\",\n    \"come\",\n    \"comfort\",\n    \"comic\",\n    \"common\",\n    \"company\",\n    \"concert\",\n    \"conduct\",\n    \"confirm\",\n    \"congress\",\n    \"connect\",\n    \"consider\",\n    \"control\",\n    \"convince\",\n    \"cook\",\n    \"cool\",\n    \"copper\",\n    \"copy\",\n    \"coral\",\n    \"core\",\n    \"corn\",\n    \"correct\",\n    \"cost\",\n    \"cotton\",\n    \"couch\",\n    \"country\",\n    \"couple\",\n    \"course\",\n    \"cousin\",\n    \"cover\",\n    \"coyote\",\n    \"crack\",\n    \"cradle\",\n    \"craft\",\n    \"cram\",\n    \"crane\",\n    \"crash\",\n    \"crater\",\n    \"crawl\",\n    \"crazy\",\n    \"cream\",\n    \"credit\",\n    \"creek\",\n    \"crew\",\n    \"cricket\",\n    \"crime\",\n    \"crisp\",\n    \"critic\",\n    \"crop\",\n    \"cross\",\n    \"crouch\",\n    \"crowd\",\n    \"crucial\",\n    \"cruel\",\n    \"cruise\",\n    \"crumble\",\n    \"crunch\",\n    \"crush\",\n    \"cry\",\n    \"crystal\",\n    \"cube\",\n    \"culture\",\n    \"cup\",\n    \"cupboard\",\n    \"curious\",\n    \"current\",\n    \"curtain\",\n    \"curve\",\n    \"cushion\",\n    \"custom\",\n    \"cute\",\n    \"cycle\",\n    \"dad\",\n    \"damage\",\n    \"damp\",\n    \"dance\",\n    \"danger\",\n    \"daring\",\n    \"dash\",\n    \"daughter\",\n    \"dawn\",\n    \"day\",\n    \"deal\",\n    \"debate\",\n    \"debris\",\n    \"decade\",\n    \"december\",\n    \"decide\",\n    \"decline\",\n    \"decorate\",\n    \"decrease\",\n    \"deer\",\n    \"defense\",\n    \"define\",\n    \"defy\",\n    \"degree\",\n    \"delay\",\n    \"deliver\",\n    \"demand\",\n    \"demise\",\n    \"denial\",\n    \"dentist\",\n    \"deny\",\n    \"depart\",\n    \"depend\",\n    \"deposit\",\n    \"depth\",\n    \"deputy\",\n    \"derive\",\n    \"describe\",\n    \"desert\",\n    \"design\",\n    \"desk\",\n    \"despair\",\n    \"destroy\",\n    \"detail\",\n    \"detect\",\n    \"develop\",\n    \"device\",\n    \"devote\",\n    \"diagram\",\n    \"dial\",\n    \"diamond\",\n    \"diary\",\n    \"dice\",\n    \"diesel\",\n    \"diet\",\n    \"differ\",\n    \"digital\",\n    \"dignity\",\n    \"dilemma\",\n    \"dinner\",\n    \"dinosaur\",\n    \"direct\",\n    \"dirt\",\n    \"disagree\",\n    \"discover\",\n    \"disease\",\n    \"dish\",\n    \"dismiss\",\n    \"disorder\",\n    \"display\",\n    \"distance\",\n    \"divert\",\n    \"divide\",\n    \"divorce\",\n    \"dizzy\",\n    \"doctor\",\n    \"document\",\n    \"dog\",\n    \"doll\",\n    \"dolphin\",\n    \"domain\",\n    \"donate\",\n    \"donkey\",\n    \"donor\",\n    \"door\",\n    \"dose\",\n    \"double\",\n    \"dove\",\n    \"draft\",\n    \"dragon\",\n    \"drama\",\n    \"drastic\",\n    \"draw\",\n    \"dream\",\n    \"dress\",\n    \"drift\",\n    \"drill\",\n    \"drink\",\n    \"drip\",\n    \"drive\",\n    \"drop\",\n    \"drum\",\n    \"dry\",\n    \"duck\",\n    \"dumb\",\n    \"dune\",\n    \"during\",\n    \"dust\",\n    \"dutch\",\n    \"duty\",\n    \"dwarf\",\n    \"dynamic\",\n    \"eager\",\n    \"eagle\",\n    \"early\",\n    \"earn\",\n    \"earth\",\n    \"easily\",\n    \"east\",\n    \"easy\",\n    \"echo\",\n    \"ecology\",\n    \"economy\",\n    \"edge\",\n    \"edit\",\n    \"educate\",\n    \"effort\",\n    \"egg\",\n    \"eight\",\n    \"either\",\n    \"elbow\",\n    \"elder\",\n    \"electric\",\n    \"elegant\",\n    \"element\",\n    \"elephant\",\n    \"elevator\",\n    \"elite\",\n    \"else\",\n    \"embark\",\n    \"embody\",\n    \"embrace\",\n    \"emerge\",\n    \"emotion\",\n    \"employ\",\n    \"empower\",\n    \"empty\",\n    \"enable\",\n    \"enact\",\n    \"end\",\n    \"endless\",\n    \"endorse\",\n    \"enemy\",\n    \"energy\",\n    \"enforce\",\n    \"engage\",\n    \"engine\",\n    \"enhance\",\n    \"enjoy\",\n    \"enlist\",\n    \"enough\",\n    \"enrich\",\n    \"enroll\",\n    \"ensure\",\n    \"enter\",\n    \"entire\",\n    \"entry\",\n    \"envelope\",\n    \"episode\",\n    \"equal\",\n    \"equip\",\n    \"era\",\n    \"erase\",\n    \"erode\",\n    \"erosion\",\n    \"error\",\n    \"erupt\",\n    \"escape\",\n    \"essay\",\n    \"essence\",\n    \"estate\",\n    \"eternal\",\n    \"ethics\",\n    \"evidence\",\n    \"evil\",\n    \"evoke\",\n    \"evolve\",\n    \"exact\",\n    \"example\",\n    \"excess\",\n    \"exchange\",\n    \"excite\",\n    \"exclude\",\n    \"excuse\",\n    \"execute\",\n    \"exercise\",\n    \"exhaust\",\n    \"exhibit\",\n    \"exile\",\n    \"exist\",\n    \"exit\",\n    \"exotic\",\n    \"expand\",\n    \"expect\",\n    \"expire\",\n    \"explain\",\n    \"expose\",\n    \"express\",\n    \"extend\",\n    \"extra\",\n    \"eye\",\n    \"eyebrow\",\n    \"fabric\",\n    \"face\",\n    \"faculty\",\n    \"fade\",\n    \"faint\",\n    \"faith\",\n    \"fall\",\n    \"false\",\n    \"fame\",\n    \"family\",\n    \"famous\",\n    \"fan\",\n    \"fancy\",\n    \"fantasy\",\n    \"farm\",\n    \"fashion\",\n    \"fat\",\n    \"fatal\",\n    \"father\",\n    \"fatigue\",\n    \"fault\",\n    \"favorite\",\n    \"feature\",\n    \"february\",\n    \"federal\",\n    \"fee\",\n    \"feed\",\n    \"feel\",\n    \"female\",\n    \"fence\",\n    \"festival\",\n    \"fetch\",\n    \"fever\",\n    \"few\",\n    \"fiber\",\n    \"fiction\",\n    \"field\",\n    \"figure\",\n    \"file\",\n    \"film\",\n    \"filter\",\n    \"final\",\n    \"find\",\n    \"fine\",\n    \"finger\",\n    \"finish\",\n    \"fire\",\n    \"firm\",\n    \"first\",\n    \"fiscal\",\n    \"fish\",\n    \"fit\",\n    \"fitness\",\n    \"fix\",\n    \"flag\",\n    \"flame\",\n    \"flash\",\n    \"flat\",\n    \"flavor\",\n    \"flee\",\n    \"flight\",\n    \"flip\",\n    \"float\",\n    \"flock\",\n    \"floor\",\n    \"flower\",\n    \"fluid\",\n    \"flush\",\n    \"fly\",\n    \"foam\",\n    \"focus\",\n    \"fog\",\n    \"foil\",\n    \"fold\",\n    \"follow\",\n    \"food\",\n    \"foot\",\n    \"force\",\n    \"forest\",\n    \"forget\",\n    \"fork\",\n    \"fortune\",\n    \"forum\",\n    \"forward\",\n    \"fossil\",\n    \"foster\",\n    \"found\",\n    \"fox\",\n    \"fragile\",\n    \"frame\",\n    \"frequent\",\n    \"fresh\",\n    \"friend\",\n    \"fringe\",\n    \"frog\",\n    \"front\",\n    \"frost\",\n    \"frown\",\n    \"frozen\",\n    \"fruit\",\n    \"fuel\",\n    \"fun\",\n    \"funny\",\n    \"furnace\",\n    \"fury\",\n    \"future\",\n    \"gadget\",\n    \"gain\",\n    \"galaxy\",\n    \"gallery\",\n    \"game\",\n    \"gap\",\n    \"garage\",\n    \"garbage\",\n    \"garden\",\n    \"garlic\",\n    \"garment\",\n    \"gas\",\n    \"gasp\",\n    \"gate\",\n    \"gather\",\n    \"gauge\",\n    \"gaze\",\n    \"general\",\n    \"genius\",\n    \"genre\",\n    \"gentle\",\n    \"genuine\",\n    \"gesture\",\n    \"ghost\",\n    \"giant\",\n    \"gift\",\n    \"giggle\",\n    \"ginger\",\n    \"giraffe\",\n    \"girl\",\n    \"give\",\n    \"glad\",\n    \"glance\",\n    \"glare\",\n    \"glass\",\n    \"glide\",\n    \"glimpse\",\n    \"globe\",\n    \"gloom\",\n    \"glory\",\n    \"glove\",\n    \"glow\",\n    \"glue\",\n    \"goat\",\n    \"goddess\",\n    \"gold\",\n    \"good\",\n    \"goose\",\n    \"gorilla\",\n    \"gospel\",\n    \"gossip\",\n    \"govern\",\n    \"gown\",\n    \"grab\",\n    \"grace\",\n    \"grain\",\n    \"grant\",\n    \"grape\",\n    \"grass\",\n    \"gravity\",\n    \"great\",\n    \"green\",\n    \"grid\",\n    \"grief\",\n    \"grit\",\n    \"grocery\",\n    \"group\",\n    \"grow\",\n    \"grunt\",\n    \"guard\",\n    \"guess\",\n    \"guide\",\n    \"guilt\",\n    \"guitar\",\n    \"gun\",\n    \"gym\",\n    \"habit\",\n    \"hair\",\n    \"half\",\n    \"hammer\",\n    \"hamster\",\n    \"hand\",\n    \"happy\",\n    \"harbor\",\n    \"hard\",\n    \"harsh\",\n    \"harvest\",\n    \"hat\",\n    \"have\",\n    \"hawk\",\n    \"hazard\",\n    \"head\",\n    \"health\",\n    \"heart\",\n    \"heavy\",\n    \"hedgehog\",\n    \"height\",\n    \"hello\",\n    \"helmet\",\n    \"help\",\n    \"hen\",\n    \"hero\",\n    \"hidden\",\n    \"high\",\n    \"hill\",\n    \"hint\",\n    \"hip\",\n    \"hire\",\n    \"history\",\n    \"hobby\",\n    \"hockey\",\n    \"hold\",\n    \"hole\",\n    \"holiday\",\n    \"hollow\",\n    \"home\",\n    \"honey\",\n    \"hood\",\n    \"hope\",\n    \"horn\",\n    \"horror\",\n    \"horse\",\n    \"hospital\",\n    \"host\",\n    \"hotel\",\n    \"hour\",\n    \"hover\",\n    \"hub\",\n    \"huge\",\n    \"human\",\n    \"humble\",\n    \"humor\",\n    \"hundred\",\n    \"hungry\",\n    \"hunt\",\n    \"hurdle\",\n    \"hurry\",\n    \"hurt\",\n    \"husband\",\n    \"hybrid\",\n    \"ice\",\n    \"icon\",\n    \"idea\",\n    \"identify\",\n    \"idle\",\n    \"ignore\",\n    \"ill\",\n    \"illegal\",\n    \"illness\",\n    \"image\",\n    \"imitate\",\n    \"immense\",\n    \"immune\",\n    \"impact\",\n    \"impose\",\n    \"improve\",\n    \"impulse\",\n    \"inch\",\n    \"include\",\n    \"income\",\n    \"increase\",\n    \"index\",\n    \"indicate\",\n    \"indoor\",\n    \"industry\",\n    \"infant\",\n    \"inflict\",\n    \"inform\",\n    \"inhale\",\n    \"inherit\",\n    \"initial\",\n    \"inject\",\n    \"injury\",\n    \"inmate\",\n    \"inner\",\n    \"innocent\",\n    \"input\",\n    \"inquiry\",\n    \"insane\",\n    \"insect\",\n    \"inside\",\n    \"inspire\",\n    \"install\",\n    \"intact\",\n    \"interest\",\n    \"into\",\n    \"invest\",\n    \"invite\",\n    \"involve\",\n    \"iron\",\n    \"island\",\n    \"isolate\",\n    \"issue\",\n    \"item\",\n    \"ivory\",\n    \"jacket\",\n    \"jaguar\",\n    \"jar\",\n    \"jazz\",\n    \"jealous\",\n    \"jeans\",\n    \"jelly\",\n    \"jewel\",\n    \"job\",\n    \"join\",\n    \"joke\",\n    \"journey\",\n    \"joy\",\n    \"judge\",\n    \"juice\",\n    \"jump\",\n    \"jungle\",\n    \"junior\",\n    \"junk\",\n    \"just\",\n    \"kangaroo\",\n    \"keen\",\n    \"keep\",\n    \"ketchup\",\n    \"key\",\n    \"kick\",\n    \"kid\",\n    \"kidney\",\n    \"kind\",\n    \"kingdom\",\n    \"kiss\",\n    \"kit\",\n    \"kitchen\",\n    \"kite\",\n    \"kitten\",\n    \"kiwi\",\n    \"knee\",\n    \"knife\",\n    \"knock\",\n    \"know\",\n    \"lab\",\n    \"label\",\n    \"labor\",\n    \"ladder\",\n    \"lady\",\n    \"lake\",\n    \"lamp\",\n    \"language\",\n    \"laptop\",\n    \"large\",\n    \"later\",\n    \"latin\",\n    \"laugh\",\n    \"laundry\",\n    \"lava\",\n    \"law\",\n    \"lawn\",\n    \"lawsuit\",\n    \"layer\",\n    \"lazy\",\n    \"leader\",\n    \"leaf\",\n    \"learn\",\n    \"leave\",\n    \"lecture\",\n    \"left\",\n    \"leg\",\n    \"legal\",\n    \"legend\",\n    \"leisure\",\n    \"lemon\",\n    \"lend\",\n    \"length\",\n    \"lens\",\n    \"leopard\",\n    \"lesson\",\n    \"letter\",\n    \"level\",\n    \"liar\",\n    \"liberty\",\n    \"library\",\n    \"license\",\n    \"life\",\n    \"lift\",\n    \"light\",\n    \"like\",\n    \"limb\",\n    \"limit\",\n    \"link\",\n    \"lion\",\n    \"liquid\",\n    \"list\",\n    \"little\",\n    \"live\",\n    \"lizard\",\n    \"load\",\n    \"loan\",\n    \"lobster\",\n    \"local\",\n    \"lock\",\n    \"logic\",\n    \"lonely\",\n    \"long\",\n    \"loop\",\n    \"lottery\",\n    \"loud\",\n    \"lounge\",\n    \"love\",\n    \"loyal\",\n    \"lucky\",\n    \"luggage\",\n    \"lumber\",\n    \"lunar\",\n    \"lunch\",\n    \"luxury\",\n    \"lyrics\",\n    \"machine\",\n    \"mad\",\n    \"magic\",\n    \"magnet\",\n    \"maid\",\n    \"mail\",\n    \"main\",\n    \"major\",\n    \"make\",\n    \"mammal\",\n    \"man\",\n    \"manage\",\n    \"mandate\",\n    \"mango\",\n    \"mansion\",\n    \"manual\",\n    \"maple\",\n    \"marble\",\n    \"march\",\n    \"margin\",\n    \"marine\",\n    \"market\",\n    \"marriage\",\n    \"mask\",\n    \"mass\",\n    \"master\",\n    \"match\",\n    \"material\",\n    \"math\",\n    \"matrix\",\n    \"matter\",\n    \"maximum\",\n    \"maze\",\n    \"meadow\",\n    \"mean\",\n    \"measure\",\n    \"meat\",\n    \"mechanic\",\n    \"medal\",\n    \"media\",\n    \"melody\",\n    \"melt\",\n    \"member\",\n    \"memory\",\n    \"mention\",\n    \"menu\",\n    \"mercy\",\n    \"merge\",\n    \"merit\",\n    \"merry\",\n    \"mesh\",\n    \"message\",\n    \"metal\",\n    \"method\",\n    \"middle\",\n    \"midnight\",\n    \"milk\",\n    \"million\",\n    \"mimic\",\n    \"mind\",\n    \"minimum\",\n    \"minor\",\n    \"minute\",\n    \"miracle\",\n    \"mirror\",\n    \"misery\",\n    \"miss\",\n    \"mistake\",\n    \"mix\",\n    \"mixed\",\n    \"mixture\",\n    \"mobile\",\n    \"model\",\n    \"modify\",\n    \"mom\",\n    \"moment\",\n    \"monitor\",\n    \"monkey\",\n    \"monster\",\n    \"month\",\n    \"moon\",\n    \"moral\",\n    \"more\",\n    \"morning\",\n    \"mosquito\",\n    \"mother\",\n    \"motion\",\n    \"motor\",\n    \"mountain\",\n    \"mouse\",\n    \"move\",\n    \"movie\",\n    \"much\",\n    \"muffin\",\n    \"mule\",\n    \"multiply\",\n    \"muscle\",\n    \"museum\",\n    \"mushroom\",\n    \"music\",\n    \"must\",\n    \"mutual\",\n    \"myself\",\n    \"mystery\",\n    \"myth\",\n    \"naive\",\n    \"name\",\n    \"napkin\",\n    \"narrow\",\n    \"nasty\",\n    \"nation\",\n    \"nature\",\n    \"near\",\n    \"neck\",\n    \"need\",\n    \"negative\",\n    \"neglect\",\n    \"neither\",\n    \"nephew\",\n    \"nerve\",\n    \"nest\",\n    \"net\",\n    \"network\",\n    \"neutral\",\n    \"never\",\n    \"news\",\n    \"next\",\n    \"nice\",\n    \"night\",\n    \"noble\",\n    \"noise\",\n    \"nominee\",\n    \"noodle\",\n    \"normal\",\n    \"north\",\n    \"nose\",\n    \"notable\",\n    \"note\",\n    \"nothing\",\n    \"notice\",\n    \"novel\",\n    \"now\",\n    \"nuclear\",\n    \"number\",\n    \"nurse\",\n    \"nut\",\n    \"oak\",\n    \"obey\",\n    \"object\",\n    \"oblige\",\n    \"obscure\",\n    \"observe\",\n    \"obtain\",\n    \"obvious\",\n    \"occur\",\n    \"ocean\",\n    \"october\",\n    \"odor\",\n    \"off\",\n    \"offer\",\n    \"office\",\n    \"often\",\n    \"oil\",\n    \"okay\",\n    \"old\",\n    \"olive\",\n    \"olympic\",\n    \"omit\",\n    \"once\",\n    \"one\",\n    \"onion\",\n    \"online\",\n    \"only\",\n    \"open\",\n    \"opera\",\n    \"opinion\",\n    \"oppose\",\n    \"option\",\n    \"orange\",\n    \"orbit\",\n    \"orchard\",\n    \"order\",\n    \"ordinary\",\n    \"organ\",\n    \"orient\",\n    \"original\",\n    \"orphan\",\n    \"ostrich\",\n    \"other\",\n    \"outdoor\",\n    \"outer\",\n    \"output\",\n    \"outside\",\n    \"oval\",\n    \"oven\",\n    \"over\",\n    \"own\",\n    \"owner\",\n    \"oxygen\",\n    \"oyster\",\n    \"ozone\",\n    \"pact\",\n    \"paddle\",\n    \"page\",\n    \"pair\",\n    \"palace\",\n    \"palm\",\n    \"panda\",\n    \"panel\",\n    \"panic\",\n    \"panther\",\n    \"paper\",\n    \"parade\",\n    \"parent\",\n    \"park\",\n    \"parrot\",\n    \"party\",\n    \"pass\",\n    \"patch\",\n    \"path\",\n    \"patient\",\n    \"patrol\",\n    \"pattern\",\n    \"pause\",\n    \"pave\",\n    \"payment\",\n    \"peace\",\n    \"peanut\",\n    \"pear\",\n    \"peasant\",\n    \"pelican\",\n    \"pen\",\n    \"penalty\",\n    \"pencil\",\n    \"people\",\n    \"pepper\",\n    \"perfect\",\n    \"permit\",\n    \"person\",\n    \"pet\",\n    \"phone\",\n    \"photo\",\n    \"phrase\",\n    \"physical\",\n    \"piano\",\n    \"picnic\",\n    \"picture\",\n    \"piece\",\n    \"pig\",\n    \"pigeon\",\n    \"pill\",\n    \"pilot\",\n    \"pink\",\n    \"pioneer\",\n    \"pipe\",\n    \"pistol\",\n    \"pitch\",\n    \"pizza\",\n    \"place\",\n    \"planet\",\n    \"plastic\",\n    \"plate\",\n    \"play\",\n    \"please\",\n    \"pledge\",\n    \"pluck\",\n    \"plug\",\n    \"plunge\",\n    \"poem\",\n    \"poet\",\n    \"point\",\n    \"polar\",\n    \"pole\",\n    \"police\",\n    \"pond\",\n    \"pony\",\n    \"pool\",\n    \"popular\",\n    \"portion\",\n    \"position\",\n    \"possible\",\n    \"post\",\n    \"potato\",\n    \"pottery\",\n    \"poverty\",\n    \"powder\",\n    \"power\",\n    \"practice\",\n    \"praise\",\n    \"predict\",\n    \"prefer\",\n    \"prepare\",\n    \"present\",\n    \"pretty\",\n    \"prevent\",\n    \"price\",\n    \"pride\",\n    \"primary\",\n    \"print\",\n    \"priority\",\n    \"prison\",\n    \"private\",\n    \"prize\",\n    \"problem\",\n    \"process\",\n    \"produce\",\n    \"profit\",\n    \"program\",\n    \"project\",\n    \"promote\",\n    \"proof\",\n    \"property\",\n    \"prosper\",\n    \"protect\",\n    \"proud\",\n    \"provide\",\n    \"public\",\n    \"pudding\",\n    \"pull\",\n    \"pulp\",\n    \"pulse\",\n    \"pumpkin\",\n    \"punch\",\n    \"pupil\",\n    \"puppy\",\n    \"purchase\",\n    \"purity\",\n    \"purpose\",\n    \"purse\",\n    \"push\",\n    \"put\",\n    \"puzzle\",\n    \"pyramid\",\n    \"quality\",\n    \"quantum\",\n    \"quarter\",\n    \"question\",\n    \"quick\",\n    \"quit\",\n    \"quiz\",\n    \"quote\",\n    \"rabbit\",\n    \"raccoon\",\n    \"race\",\n    \"rack\",\n    \"radar\",\n    \"radio\",\n    \"rail\",\n    \"rain\",\n    \"raise\",\n    \"rally\",\n    \"ramp\",\n    \"ranch\",\n    \"random\",\n    \"range\",\n    \"rapid\",\n    \"rare\",\n    \"rate\",\n    \"rather\",\n    \"raven\",\n    \"raw\",\n    \"razor\",\n    \"ready\",\n    \"real\",\n    \"reason\",\n    \"rebel\",\n    \"rebuild\",\n    \"recall\",\n    \"receive\",\n    \"recipe\",\n    \"record\",\n    \"recycle\",\n    \"reduce\",\n    \"reflect\",\n    \"reform\",\n    \"refuse\",\n    \"region\",\n    \"regret\",\n    \"regular\",\n    \"reject\",\n    \"relax\",\n    \"release\",\n    \"relief\",\n    \"rely\",\n    \"remain\",\n    \"remember\",\n    \"remind\",\n    \"remove\",\n    \"render\",\n    \"renew\",\n    \"rent\",\n    \"reopen\",\n    \"repair\",\n    \"repeat\",\n    \"replace\",\n    \"report\",\n    \"require\",\n    \"rescue\",\n    \"resemble\",\n    \"resist\",\n    \"resource\",\n    \"response\",\n    \"result\",\n    \"retire\",\n    \"retreat\",\n    \"return\",\n    \"reunion\",\n    \"reveal\",\n    \"review\",\n    \"reward\",\n    \"rhythm\",\n    \"rib\",\n    \"ribbon\",\n    \"rice\",\n    \"rich\",\n    \"ride\",\n    \"ridge\",\n    \"rifle\",\n    \"right\",\n    \"rigid\",\n    \"ring\",\n    \"riot\",\n    \"ripple\",\n    \"risk\",\n    \"ritual\",\n    \"rival\",\n    \"river\",\n    \"road\",\n    \"roast\",\n    \"robot\",\n    \"robust\",\n    \"rocket\",\n    \"romance\",\n    \"roof\",\n    \"rookie\",\n    \"room\",\n    \"rose\",\n    \"rotate\",\n    \"rough\",\n    \"round\",\n    \"route\",\n    \"royal\",\n    \"rubber\",\n    \"rude\",\n    \"rug\",\n    \"rule\",\n    \"run\",\n    \"runway\",\n    \"rural\",\n    \"sad\",\n    \"saddle\",\n    \"sadness\",\n    \"safe\",\n    \"sail\",\n    \"salad\",\n    \"salmon\",\n    \"salon\",\n    \"salt\",\n    \"salute\",\n    \"same\",\n    \"sample\",\n    \"sand\",\n    \"satisfy\",\n    \"satoshi\",\n    \"sauce\",\n    \"sausage\",\n    \"save\",\n    \"say\",\n    \"scale\",\n    \"scan\",\n    \"scare\",\n    \"scatter\",\n    \"scene\",\n    \"scheme\",\n    \"school\",\n    \"science\",\n    \"scissors\",\n    \"scorpion\",\n    \"scout\",\n    \"scrap\",\n    \"screen\",\n    \"script\",\n    \"scrub\",\n    \"sea\",\n    \"search\",\n    \"season\",\n    \"seat\",\n    \"second\",\n    \"secret\",\n    \"section\",\n    \"security\",\n    \"seed\",\n    \"seek\",\n    \"segment\",\n    \"select\",\n    \"sell\",\n    \"seminar\",\n    \"senior\",\n    \"sense\",\n    \"sentence\",\n    \"series\",\n    \"service\",\n    \"session\",\n    \"settle\",\n    \"setup\",\n    \"seven\",\n    \"shadow\",\n    \"shaft\",\n    \"shallow\",\n    \"share\",\n    \"shed\",\n    \"shell\",\n    \"sheriff\",\n    \"shield\",\n    \"shift\",\n    \"shine\",\n    \"ship\",\n    \"shiver\",\n    \"shock\",\n    \"shoe\",\n    \"shoot\",\n    \"shop\",\n    \"short\",\n    \"shoulder\",\n    \"shove\",\n    \"shrimp\",\n    \"shrug\",\n    \"shuffle\",\n    \"shy\",\n    \"sibling\",\n    \"sick\",\n    \"side\",\n    \"siege\",\n    \"sight\",\n    \"sign\",\n    \"silent\",\n    \"silk\",\n    \"silly\",\n    \"silver\",\n    \"similar\",\n    \"simple\",\n    \"since\",\n    \"sing\",\n    \"siren\",\n    \"sister\",\n    \"situate\",\n    \"six\",\n    \"size\",\n    \"skate\",\n    \"sketch\",\n    \"ski\",\n    \"skill\",\n    \"skin\",\n    \"skirt\",\n    \"skull\",\n    \"slab\",\n    \"slam\",\n    \"sleep\",\n    \"slender\",\n    \"slice\",\n    \"slide\",\n    \"slight\",\n    \"slim\",\n    \"slogan\",\n    \"slot\",\n    \"slow\",\n    \"slush\",\n    \"small\",\n    \"smart\",\n    \"smile\",\n    \"smoke\",\n    \"smooth\",\n    \"snack\",\n    \"snake\",\n    \"snap\",\n    \"sniff\",\n    \"snow\",\n    \"soap\",\n    \"soccer\",\n    \"social\",\n    \"sock\",\n    \"soda\",\n    \"soft\",\n    \"solar\",\n    \"soldier\",\n    \"solid\",\n    \"solution\",\n    \"solve\",\n    \"someone\",\n    \"song\",\n    \"soon\",\n    \"sorry\",\n    \"sort\",\n    \"soul\",\n    \"sound\",\n    \"soup\",\n    \"source\",\n    \"south\",\n    \"space\",\n    \"spare\",\n    \"spatial\",\n    \"spawn\",\n    \"speak\",\n    \"special\",\n    \"speed\",\n    \"spell\",\n    \"spend\",\n    \"sphere\",\n    \"spice\",\n    \"spider\",\n    \"spike\",\n    \"spin\",\n    \"spirit\",\n    \"split\",\n    \"spoil\",\n    \"sponsor\",\n    \"spoon\",\n    \"sport\",\n    \"spot\",\n    \"spray\",\n    \"spread\",\n    \"spring\",\n    \"spy\",\n    \"square\",\n    \"squeeze\",\n    \"squirrel\",\n    \"stable\",\n    \"stadium\",\n    \"staff\",\n    \"stage\",\n    \"stairs\",\n    \"stamp\",\n    \"stand\",\n    \"start\",\n    \"state\",\n    \"stay\",\n    \"steak\",\n    \"steel\",\n    \"stem\",\n    \"step\",\n    \"stereo\",\n    \"stick\",\n    \"still\",\n    \"sting\",\n    \"stock\",\n    \"stomach\",\n    \"stone\",\n    \"stool\",\n    \"story\",\n    \"stove\",\n    \"strategy\",\n    \"street\",\n    \"strike\",\n    \"strong\",\n    \"struggle\",\n    \"student\",\n    \"stuff\",\n    \"stumble\",\n    \"style\",\n    \"subject\",\n    \"submit\",\n    \"subway\",\n    \"success\",\n    \"such\",\n    \"sudden\",\n    \"suffer\",\n    \"sugar\",\n    \"suggest\",\n    \"suit\",\n    \"summer\",\n    \"sun\",\n    \"sunny\",\n    \"sunset\",\n    \"super\",\n    \"supply\",\n    \"supreme\",\n    \"sure\",\n    \"surface\",\n    \"surge\",\n    \"surprise\",\n    \"surround\",\n    \"survey\",\n    \"suspect\",\n    \"sustain\",\n    \"swallow\",\n    \"swamp\",\n    \"swap\",\n    \"swarm\",\n    \"swear\",\n    \"sweet\",\n    \"swift\",\n    \"swim\",\n    \"swing\",\n    \"switch\",\n    \"sword\",\n    \"symbol\",\n    \"symptom\",\n    \"syrup\",\n    \"system\",\n    \"table\",\n    \"tackle\",\n    \"tag\",\n    \"tail\",\n    \"talent\",\n    \"talk\",\n    \"tank\",\n    \"tape\",\n    \"target\",\n    \"task\",\n    \"taste\",\n    \"tattoo\",\n    \"taxi\",\n    \"teach\",\n    \"team\",\n    \"tell\",\n    \"ten\",\n    \"tenant\",\n    \"tennis\",\n    \"tent\",\n    \"term\",\n    \"test\",\n    \"text\",\n    \"thank\",\n    \"that\",\n    \"theme\",\n    \"then\",\n    \"theory\",\n    \"there\",\n    \"they\",\n    \"thing\",\n    \"this\",\n    \"thought\",\n    \"three\",\n    \"thrive\",\n    \"throw\",\n    \"thumb\",\n    \"thunder\",\n    \"ticket\",\n    \"tide\",\n    \"tiger\",\n    \"tilt\",\n    \"timber\",\n    \"time\",\n    \"tiny\",\n    \"tip\",\n    \"tired\",\n    \"tissue\",\n    \"title\",\n    \"toast\",\n    \"tobacco\",\n    \"today\",\n    \"toddler\",\n    \"toe\",\n    \"together\",\n    \"toilet\",\n    \"token\",\n    \"tomato\",\n    \"tomorrow\",\n    \"tone\",\n    \"tongue\",\n    \"tonight\",\n    \"tool\",\n    \"tooth\",\n    \"top\",\n    \"topic\",\n    \"topple\",\n    \"torch\",\n    \"tornado\",\n    \"tortoise\",\n    \"toss\",\n    \"total\",\n    \"tourist\",\n    \"toward\",\n    \"tower\",\n    \"town\",\n    \"toy\",\n    \"track\",\n    \"trade\",\n    \"traffic\",\n    \"tragic\",\n    \"train\",\n    \"transfer\",\n    \"trap\",\n    \"trash\",\n    \"travel\",\n    \"tray\",\n    \"treat\",\n    \"tree\",\n    \"trend\",\n    \"trial\",\n    \"tribe\",\n    \"trick\",\n    \"trigger\",\n    \"trim\",\n    \"trip\",\n    \"trophy\",\n    \"trouble\",\n    \"truck\",\n    \"true\",\n    \"truly\",\n    \"trumpet\",\n    \"trust\",\n    \"truth\",\n    \"try\",\n    \"tube\",\n    \"tuition\",\n    \"tumble\",\n    \"tuna\",\n    \"tunnel\",\n    \"turkey\",\n    \"turn\",\n    \"turtle\",\n    \"twelve\",\n    \"twenty\",\n    \"twice\",\n    \"twin\",\n    \"twist\",\n    \"two\",\n    \"type\",\n    \"typical\",\n    \"ugly\",\n    \"umbrella\",\n    \"unable\",\n    \"unaware\",\n    \"uncle\",\n    \"uncover\",\n    \"under\",\n    \"undo\",\n    \"unfair\",\n    \"unfold\",\n    \"unhappy\",\n    \"uniform\",\n    \"unique\",\n    \"unit\",\n    \"universe\",\n    \"unknown\",\n    \"unlock\",\n    \"until\",\n    \"unusual\",\n    \"unveil\",\n    \"update\",\n    \"upgrade\",\n    \"uphold\",\n    \"upon\",\n    \"upper\",\n    \"upset\",\n    \"urban\",\n    \"urge\",\n    \"usage\",\n    \"use\",\n    \"used\",\n    \"useful\",\n    \"useless\",\n    \"usual\",\n    \"utility\",\n    \"vacant\",\n    \"vacuum\",\n    \"vague\",\n    \"valid\",\n    \"valley\",\n    \"valve\",\n    \"van\",\n    \"vanish\",\n    \"vapor\",\n    \"various\",\n    \"vast\",\n    \"vault\",\n    \"vehicle\",\n    \"velvet\",\n    \"vendor\",\n    \"venture\",\n    \"venue\",\n    \"verb\",\n    \"verify\",\n    \"version\",\n    \"very\",\n    \"vessel\",\n    \"veteran\",\n    \"viable\",\n    \"vibrant\",\n    \"vicious\",\n    \"victory\",\n    \"video\",\n    \"view\",\n    \"village\",\n    \"vintage\",\n    \"violin\",\n    \"virtual\",\n    \"virus\",\n    \"visa\",\n    \"visit\",\n    \"visual\",\n    \"vital\",\n    \"vivid\",\n    \"vocal\",\n    \"voice\",\n    \"void\",\n    \"volcano\",\n    \"volume\",\n    \"vote\",\n    \"voyage\",\n    \"wage\",\n    \"wagon\",\n    \"wait\",\n    \"walk\",\n    \"wall\",\n    \"walnut\",\n    \"want\",\n    \"warfare\",\n    \"warm\",\n    \"warrior\",\n    \"wash\",\n    \"wasp\",\n    \"waste\",\n    \"water\",\n    \"wave\",\n    \"way\",\n    \"wealth\",\n    \"weapon\",\n    \"wear\",\n    \"weasel\",\n    \"weather\",\n    \"web\",\n    \"wedding\",\n    \"weekend\",\n    \"weird\",\n    \"welcome\",\n    \"west\",\n    \"wet\",\n    \"whale\",\n    \"what\",\n    \"wheat\",\n    \"wheel\",\n    \"when\",\n    \"where\",\n    \"whip\",\n    \"whisper\",\n    \"wide\",\n    \"width\",\n    \"wife\",\n    \"wild\",\n    \"will\",\n    \"win\",\n    \"window\",\n    \"wine\",\n    \"wing\",\n    \"wink\",\n    \"winner\",\n    \"winter\",\n    \"wire\",\n    \"wisdom\",\n    \"wise\",\n    \"wish\",\n    \"witness\",\n    \"wolf\",\n    \"woman\",\n    \"wonder\",\n    \"wood\",\n    \"wool\",\n    \"word\",\n    \"work\",\n    \"world\",\n    \"worry\",\n    \"worth\",\n    \"wrap\",\n    \"wreck\",\n    \"wrestle\",\n    \"wrist\",\n    \"write\",\n    \"wrong\",\n    \"yard\",\n    \"year\",\n    \"yellow\",\n    \"you\",\n    \"young\",\n    \"youth\",\n    \"zebra\",\n    \"zero\",\n    \"zone\",\n    \"zoo\",\n];\n","// This is a partial reimplementation of CRC-8 (node-crc) in Deno: https://github.com/alexgorbatchev/node-crc\nlet TABLE = [\n    0x00,\n    0x07,\n    0x0e,\n    0x09,\n    0x1c,\n    0x1b,\n    0x12,\n    0x15,\n    0x38,\n    0x3f,\n    0x36,\n    0x31,\n    0x24,\n    0x23,\n    0x2a,\n    0x2d,\n    0x70,\n    0x77,\n    0x7e,\n    0x79,\n    0x6c,\n    0x6b,\n    0x62,\n    0x65,\n    0x48,\n    0x4f,\n    0x46,\n    0x41,\n    0x54,\n    0x53,\n    0x5a,\n    0x5d,\n    0xe0,\n    0xe7,\n    0xee,\n    0xe9,\n    0xfc,\n    0xfb,\n    0xf2,\n    0xf5,\n    0xd8,\n    0xdf,\n    0xd6,\n    0xd1,\n    0xc4,\n    0xc3,\n    0xca,\n    0xcd,\n    0x90,\n    0x97,\n    0x9e,\n    0x99,\n    0x8c,\n    0x8b,\n    0x82,\n    0x85,\n    0xa8,\n    0xaf,\n    0xa6,\n    0xa1,\n    0xb4,\n    0xb3,\n    0xba,\n    0xbd,\n    0xc7,\n    0xc0,\n    0xc9,\n    0xce,\n    0xdb,\n    0xdc,\n    0xd5,\n    0xd2,\n    0xff,\n    0xf8,\n    0xf1,\n    0xf6,\n    0xe3,\n    0xe4,\n    0xed,\n    0xea,\n    0xb7,\n    0xb0,\n    0xb9,\n    0xbe,\n    0xab,\n    0xac,\n    0xa5,\n    0xa2,\n    0x8f,\n    0x88,\n    0x81,\n    0x86,\n    0x93,\n    0x94,\n    0x9d,\n    0x9a,\n    0x27,\n    0x20,\n    0x29,\n    0x2e,\n    0x3b,\n    0x3c,\n    0x35,\n    0x32,\n    0x1f,\n    0x18,\n    0x11,\n    0x16,\n    0x03,\n    0x04,\n    0x0d,\n    0x0a,\n    0x57,\n    0x50,\n    0x59,\n    0x5e,\n    0x4b,\n    0x4c,\n    0x45,\n    0x42,\n    0x6f,\n    0x68,\n    0x61,\n    0x66,\n    0x73,\n    0x74,\n    0x7d,\n    0x7a,\n    0x89,\n    0x8e,\n    0x87,\n    0x80,\n    0x95,\n    0x92,\n    0x9b,\n    0x9c,\n    0xb1,\n    0xb6,\n    0xbf,\n    0xb8,\n    0xad,\n    0xaa,\n    0xa3,\n    0xa4,\n    0xf9,\n    0xfe,\n    0xf7,\n    0xf0,\n    0xe5,\n    0xe2,\n    0xeb,\n    0xec,\n    0xc1,\n    0xc6,\n    0xcf,\n    0xc8,\n    0xdd,\n    0xda,\n    0xd3,\n    0xd4,\n    0x69,\n    0x6e,\n    0x67,\n    0x60,\n    0x75,\n    0x72,\n    0x7b,\n    0x7c,\n    0x51,\n    0x56,\n    0x5f,\n    0x58,\n    0x4d,\n    0x4a,\n    0x43,\n    0x44,\n    0x19,\n    0x1e,\n    0x17,\n    0x10,\n    0x05,\n    0x02,\n    0x0b,\n    0x0c,\n    0x21,\n    0x26,\n    0x2f,\n    0x28,\n    0x3d,\n    0x3a,\n    0x33,\n    0x34,\n    0x4e,\n    0x49,\n    0x40,\n    0x47,\n    0x52,\n    0x55,\n    0x5c,\n    0x5b,\n    0x76,\n    0x71,\n    0x78,\n    0x7f,\n    0x6a,\n    0x6d,\n    0x64,\n    0x63,\n    0x3e,\n    0x39,\n    0x30,\n    0x37,\n    0x22,\n    0x25,\n    0x2c,\n    0x2b,\n    0x06,\n    0x01,\n    0x08,\n    0x0f,\n    0x1a,\n    0x1d,\n    0x14,\n    0x13,\n    0xae,\n    0xa9,\n    0xa0,\n    0xa7,\n    0xb2,\n    0xb5,\n    0xbc,\n    0xbb,\n    0x96,\n    0x91,\n    0x98,\n    0x9f,\n    0x8a,\n    0x8d,\n    0x84,\n    0x83,\n    0xde,\n    0xd9,\n    0xd0,\n    0xd7,\n    0xc2,\n    0xc5,\n    0xcc,\n    0xcb,\n    0xe6,\n    0xe1,\n    0xe8,\n    0xef,\n    0xfa,\n    0xfd,\n    0xf4,\n    0xf3,\n];\nif (typeof Int32Array !== \"undefined\") {\n    TABLE = new Int32Array(TABLE);\n}\nexport function crc8(current, previous = 0) {\n    let crc = ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] & 0xff;\n    }\n    return crc;\n}\n","import { C, fromHex, M, toHex, } from \"../mod.js\";\nexport function signData(addressHex, payload, privateKey) {\n    const protectedHeaders = M.HeaderMap.new();\n    protectedHeaders.set_algorithm_id(M.Label.from_algorithm_id(M.AlgorithmId.EdDSA));\n    protectedHeaders.set_header(M.Label.new_text(\"address\"), M.CBORValue.new_bytes(fromHex(addressHex)));\n    const protectedSerialized = M.ProtectedHeaderMap.new(protectedHeaders);\n    const unprotectedHeaders = M.HeaderMap.new();\n    const headers = M.Headers.new(protectedSerialized, unprotectedHeaders);\n    const builder = M.COSESign1Builder.new(headers, fromHex(payload), false);\n    const toSign = builder.make_data_to_sign().to_bytes();\n    const priv = C.PrivateKey.from_bech32(privateKey);\n    const signedSigStruc = priv.sign(toSign).to_bytes();\n    const coseSign1 = builder.build(signedSigStruc);\n    const key = M.COSEKey.new(M.Label.from_key_type(M.KeyType.OKP));\n    key.set_algorithm_id(M.Label.from_algorithm_id(M.AlgorithmId.EdDSA));\n    key.set_header(M.Label.new_int(M.Int.new_negative(M.BigNum.from_str(\"1\"))), M.CBORValue.new_int(M.Int.new_i32(6))); // crv (-1) set to Ed25519 (6)\n    key.set_header(M.Label.new_int(M.Int.new_negative(M.BigNum.from_str(\"2\"))), M.CBORValue.new_bytes(priv.to_public().as_bytes())); // x (-2) set to public key\n    return {\n        signature: toHex(coseSign1.to_bytes()),\n        key: toHex(key.to_bytes()),\n    };\n}\nexport function verifyData(addressHex, keyHash, payload, signedMessage) {\n    const cose1 = M.COSESign1.from_bytes(fromHex(signedMessage.signature));\n    const key = M.COSEKey.from_bytes(fromHex(signedMessage.key));\n    const protectedHeaders = cose1.headers().protected()\n        .deserialized_headers();\n    const cose1Address = (() => {\n        try {\n            return toHex(protectedHeaders.header(M.Label.new_text(\"address\"))?.as_bytes());\n        }\n        catch (_e) {\n            throw new Error(\"No address found in signature.\");\n        }\n    })();\n    const cose1AlgorithmId = (() => {\n        try {\n            const int = protectedHeaders.algorithm_id()?.as_int();\n            if (int?.is_positive())\n                return parseInt(int.as_positive()?.to_str());\n            return parseInt(int?.as_negative()?.to_str());\n        }\n        catch (_e) {\n            throw new Error(\"Failed to retrieve Algorithm Id.\");\n        }\n    })();\n    const keyAlgorithmId = (() => {\n        try {\n            const int = key.algorithm_id()?.as_int();\n            if (int?.is_positive())\n                return parseInt(int.as_positive()?.to_str());\n            return parseInt(int?.as_negative()?.to_str());\n        }\n        catch (_e) {\n            throw new Error(\"Failed to retrieve Algorithm Id.\");\n        }\n    })();\n    const keyCurve = (() => {\n        try {\n            const int = key.header(M.Label.new_int(M.Int.new_negative(M.BigNum.from_str(\"1\"))))?.as_int();\n            if (int?.is_positive())\n                return parseInt(int.as_positive()?.to_str());\n            return parseInt(int?.as_negative()?.to_str());\n        }\n        catch (_e) {\n            throw new Error(\"Failed to retrieve Curve.\");\n        }\n    })();\n    const keyType = (() => {\n        try {\n            const int = key.key_type().as_int();\n            if (int?.is_positive())\n                return parseInt(int.as_positive()?.to_str());\n            return parseInt(int?.as_negative()?.to_str());\n        }\n        catch (_e) {\n            throw new Error(\"Failed to retrieve Key Type.\");\n        }\n    })();\n    const publicKey = (() => {\n        try {\n            return C.PublicKey.from_bytes(key.header(M.Label.new_int(M.Int.new_negative(M.BigNum.from_str(\"2\"))))?.as_bytes());\n        }\n        catch (_e) {\n            throw new Error(\"No public key found.\");\n        }\n    })();\n    const cose1Payload = (() => {\n        try {\n            return toHex(cose1.payload());\n        }\n        catch (_e) {\n            throw new Error(\"No payload found.\");\n        }\n    })();\n    const signature = C.Ed25519Signature.from_bytes(cose1.signature());\n    const data = cose1.signed_data(undefined, undefined).to_bytes();\n    if (cose1Address !== addressHex)\n        return false;\n    if (keyHash !== publicKey.hash().to_hex())\n        return false;\n    if (cose1AlgorithmId !== keyAlgorithmId &&\n        cose1AlgorithmId !== M.AlgorithmId.EdDSA) {\n        return false;\n    }\n    if (keyCurve !== 6)\n        return false;\n    if (keyType !== 1)\n        return false;\n    if (cose1Payload !== payload)\n        return false;\n    return publicKey.verify(data, signature);\n}\n","import { C, fromHex, getAddressDetails, toHex, } from \"../mod.js\";\nimport { mnemonicToEntropy } from \"./bip39.js\";\nexport function walletFromSeed(seed, options = { addressType: \"Base\", accountIndex: 0, network: \"Mainnet\" }) {\n    function harden(num) {\n        if (typeof num !== \"number\")\n            throw new Error(\"Type number required here!\");\n        return 0x80000000 + num;\n    }\n    const entropy = mnemonicToEntropy(seed);\n    const rootKey = C.Bip32PrivateKey.from_bip39_entropy(fromHex(entropy), options.password\n        ? new TextEncoder().encode(options.password)\n        : new Uint8Array());\n    const accountKey = rootKey.derive(harden(1852))\n        .derive(harden(1815))\n        .derive(harden(options.accountIndex));\n    const paymentKey = accountKey.derive(0).derive(0).to_raw_key();\n    const stakeKey = accountKey.derive(2).derive(0).to_raw_key();\n    const paymentKeyHash = paymentKey.to_public().hash();\n    const stakeKeyHash = stakeKey.to_public().hash();\n    const networkId = options.network === \"Mainnet\" ? 1 : 0;\n    const address = options.addressType === \"Base\"\n        ? C.BaseAddress.new(networkId, C.StakeCredential.from_keyhash(paymentKeyHash), C.StakeCredential.from_keyhash(stakeKeyHash)).to_address().to_bech32(undefined)\n        : C.EnterpriseAddress.new(networkId, C.StakeCredential.from_keyhash(paymentKeyHash)).to_address().to_bech32(undefined);\n    const rewardAddress = options.addressType === \"Base\"\n        ? C.RewardAddress.new(networkId, C.StakeCredential.from_keyhash(stakeKeyHash)).to_address().to_bech32(undefined)\n        : null;\n    return {\n        address,\n        rewardAddress,\n        paymentKey: paymentKey.to_bech32(),\n        stakeKey: options.addressType === \"Base\" ? stakeKey.to_bech32() : null,\n    };\n}\nexport function discoverOwnUsedTxKeyHashes(tx, ownKeyHashes, ownUtxos) {\n    const usedKeyHashes = [];\n    // key hashes from inputs\n    const inputs = tx.body().inputs();\n    for (let i = 0; i < inputs.len(); i++) {\n        const input = inputs.get(i);\n        const txHash = toHex(input.transaction_id().to_bytes());\n        const outputIndex = parseInt(input.index().to_str());\n        const utxo = ownUtxos.find((utxo) => utxo.txHash === txHash && utxo.outputIndex === outputIndex);\n        if (utxo) {\n            const { paymentCredential } = getAddressDetails(utxo.address);\n            usedKeyHashes.push(paymentCredential?.hash);\n        }\n    }\n    const txBody = tx.body();\n    // key hashes from certificates\n    function keyHashFromCert(txBody) {\n        const certs = txBody.certs();\n        if (!certs)\n            return;\n        for (let i = 0; i < certs.len(); i++) {\n            const cert = certs.get(i);\n            if (cert.kind() === 0) {\n                const credential = cert.as_stake_registration()?.stake_credential();\n                if (credential?.kind() === 0) {\n                    // Key hash not needed for registration\n                }\n            }\n            else if (cert.kind() === 1) {\n                const credential = cert.as_stake_deregistration()?.stake_credential();\n                if (credential?.kind() === 0) {\n                    const keyHash = toHex(credential.to_keyhash().to_bytes());\n                    usedKeyHashes.push(keyHash);\n                }\n            }\n            else if (cert.kind() === 2) {\n                const credential = cert.as_stake_delegation()?.stake_credential();\n                if (credential?.kind() === 0) {\n                    const keyHash = toHex(credential.to_keyhash().to_bytes());\n                    usedKeyHashes.push(keyHash);\n                }\n            }\n            else if (cert.kind() === 3) {\n                const poolParams = cert\n                    .as_pool_registration()?.pool_params();\n                const owners = poolParams\n                    ?.pool_owners();\n                if (!owners)\n                    break;\n                for (let i = 0; i < owners.len(); i++) {\n                    const keyHash = toHex(owners.get(i).to_bytes());\n                    usedKeyHashes.push(keyHash);\n                }\n                const operator = poolParams.operator().to_hex();\n                usedKeyHashes.push(operator);\n            }\n            else if (cert.kind() === 4) {\n                const operator = cert.as_pool_retirement().pool_keyhash().to_hex();\n                usedKeyHashes.push(operator);\n            }\n            else if (cert.kind() === 6) {\n                const instantRewards = cert\n                    .as_move_instantaneous_rewards_cert()\n                    ?.move_instantaneous_reward().as_to_stake_creds()\n                    ?.keys();\n                if (!instantRewards)\n                    break;\n                for (let i = 0; i < instantRewards.len(); i++) {\n                    const credential = instantRewards.get(i);\n                    if (credential.kind() === 0) {\n                        const keyHash = toHex(credential.to_keyhash().to_bytes());\n                        usedKeyHashes.push(keyHash);\n                    }\n                }\n            }\n        }\n    }\n    if (txBody.certs())\n        keyHashFromCert(txBody);\n    // key hashes from withdrawals\n    const withdrawals = txBody.withdrawals();\n    function keyHashFromWithdrawal(withdrawals) {\n        const rewardAddresses = withdrawals.keys();\n        for (let i = 0; i < rewardAddresses.len(); i++) {\n            const credential = rewardAddresses.get(i).payment_cred();\n            if (credential.kind() === 0) {\n                usedKeyHashes.push(credential.to_keyhash().to_hex());\n            }\n        }\n    }\n    if (withdrawals)\n        keyHashFromWithdrawal(withdrawals);\n    // key hashes from scripts\n    const scripts = tx.witness_set().native_scripts();\n    function keyHashFromScript(scripts) {\n        for (let i = 0; i < scripts.len(); i++) {\n            const script = scripts.get(i);\n            if (script.kind() === 0) {\n                const keyHash = toHex(script.as_script_pubkey().addr_keyhash().to_bytes());\n                usedKeyHashes.push(keyHash);\n            }\n            if (script.kind() === 1) {\n                keyHashFromScript(script.as_script_all().native_scripts());\n                return;\n            }\n            if (script.kind() === 2) {\n                keyHashFromScript(script.as_script_any().native_scripts());\n                return;\n            }\n            if (script.kind() === 3) {\n                keyHashFromScript(script.as_script_n_of_k().native_scripts());\n                return;\n            }\n        }\n    }\n    if (scripts)\n        keyHashFromScript(scripts);\n    // keyHashes from required signers\n    const requiredSigners = txBody.required_signers();\n    if (requiredSigners) {\n        for (let i = 0; i < requiredSigners.len(); i++) {\n            usedKeyHashes.push(toHex(requiredSigners.get(i).to_bytes()));\n        }\n    }\n    // keyHashes from collateral\n    const collateral = txBody.collateral();\n    if (collateral) {\n        for (let i = 0; i < collateral.len(); i++) {\n            const input = collateral.get(i);\n            const txHash = toHex(input.transaction_id().to_bytes());\n            const outputIndex = parseInt(input.index().to_str());\n            const utxo = ownUtxos.find((utxo) => utxo.txHash === txHash && utxo.outputIndex === outputIndex);\n            if (utxo) {\n                const { paymentCredential } = getAddressDetails(utxo.address);\n                usedKeyHashes.push(paymentCredential?.hash);\n            }\n        }\n    }\n    return usedKeyHashes.filter((k) => ownKeyHashes.includes(k));\n}\n","import { Type, } from \"../../deps/deno.land/x/typebox@0.25.13/src/typebox.js\";\nimport { C } from \"../core/mod.js\";\nimport { fromHex, fromText, toHex } from \"../utils/utils.js\";\nexport class Constr {\n    constructor(index, fields) {\n        Object.defineProperty(this, \"index\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fields\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.index = index;\n        this.fields = fields;\n    }\n}\nexport const Data = {\n    // Types\n    // Note: Recursive types are not supported (yet)\n    Integer: function (options) {\n        const integer = Type.Unsafe({ dataType: \"integer\" });\n        if (options) {\n            Object.entries(options).forEach(([key, value]) => {\n                integer[key] = value;\n            });\n        }\n        return integer;\n    },\n    Bytes: function (options) {\n        const bytes = Type.Unsafe({ dataType: \"bytes\" });\n        if (options) {\n            Object.entries(options).forEach(([key, value]) => {\n                bytes[key] = value;\n            });\n        }\n        return bytes;\n    },\n    Boolean: function () {\n        return Type.Unsafe({\n            anyOf: [\n                {\n                    title: \"False\",\n                    dataType: \"constructor\",\n                    index: 0,\n                    fields: [],\n                },\n                {\n                    title: \"True\",\n                    dataType: \"constructor\",\n                    index: 1,\n                    fields: [],\n                },\n            ],\n        });\n    },\n    Any: function () {\n        return Type.Unsafe({ description: \"Any Data.\" });\n    },\n    Array: function (items, options) {\n        const array = Type.Array(items);\n        replaceProperties(array, { dataType: \"list\", items });\n        if (options) {\n            Object.entries(options).forEach(([key, value]) => {\n                array[key] = value;\n            });\n        }\n        return array;\n    },\n    Map: function (keys, values, options) {\n        const map = Type.Unsafe({\n            dataType: \"map\",\n            keys,\n            values,\n        });\n        if (options) {\n            Object.entries(options).forEach(([key, value]) => {\n                map[key] = value;\n            });\n        }\n        return map;\n    },\n    /**\n     * Object applies by default a PlutusData Constr with index 0.\\\n     * Set 'hasConstr' to false to serialize Object as PlutusData List.\n     */\n    Object: function (properties, options) {\n        const object = Type.Object(properties);\n        replaceProperties(object, {\n            anyOf: [{\n                    dataType: \"constructor\",\n                    index: 0,\n                    fields: Object.entries(properties).map(([title, p]) => ({\n                        ...p,\n                        title,\n                    })),\n                }],\n        });\n        object.anyOf[0].hasConstr = typeof options?.hasConstr === \"undefined\" ||\n            options.hasConstr;\n        return object;\n    },\n    Enum: function (items) {\n        const union = Type.Union(items);\n        replaceProperties(union, {\n            anyOf: items.map((item, index) => item.anyOf[0].fields.length === 0\n                ? ({\n                    ...item.anyOf[0],\n                    index,\n                })\n                : ({\n                    dataType: \"constructor\",\n                    title: (() => {\n                        const title = item.anyOf[0].fields[0].title;\n                        if (title.charAt(0) !==\n                            title.charAt(0).toUpperCase()) {\n                            throw new Error(`Enum '${title}' needs to start with an uppercase letter.`);\n                        }\n                        return item.anyOf[0].fields[0].title;\n                    })(),\n                    index,\n                    fields: item.anyOf[0].fields[0].items ||\n                        item.anyOf[0].fields[0].anyOf[0].fields,\n                })),\n        });\n        return union;\n    },\n    /**\n     * Tuple is by default a PlutusData List.\\\n     * Set 'hasConstr' to true to apply a PlutusData Constr with index 0.\n     */\n    Tuple: function (items, options) {\n        const tuple = Type.Tuple(items);\n        replaceProperties(tuple, {\n            dataType: \"list\",\n            items,\n        });\n        if (options) {\n            Object.entries(options).forEach(([key, value]) => {\n                tuple[key] = value;\n            });\n        }\n        return tuple;\n    },\n    Literal: function (title) {\n        if (title.charAt(0) !== title.charAt(0).toUpperCase()) {\n            throw new Error(`Enum '${title}' needs to start with an uppercase letter.`);\n        }\n        const literal = Type.Literal(title);\n        replaceProperties(literal, {\n            anyOf: [{\n                    dataType: \"constructor\",\n                    title,\n                    index: 0,\n                    fields: [],\n                }],\n        });\n        return literal;\n    },\n    Nullable: function (item) {\n        return Type.Unsafe({\n            anyOf: [\n                {\n                    title: \"Some\",\n                    description: \"An optional value.\",\n                    dataType: \"constructor\",\n                    index: 0,\n                    fields: [\n                        item,\n                    ],\n                },\n                {\n                    title: \"None\",\n                    description: \"Nothing.\",\n                    dataType: \"constructor\",\n                    index: 1,\n                    fields: [],\n                },\n            ],\n        });\n    },\n    /**\n     * Convert PlutusData to Cbor encoded data.\\\n     * Or apply a shape and convert the provided data struct to Cbor encoded data.\n     */\n    to,\n    /** Convert Cbor encoded data to PlutusData */\n    from,\n    /**\n     * Note Constr cannot be used here.\\\n     * Strings prefixed with '0x' are not UTF-8 encoded.\n     */\n    fromJson,\n    /**\n     * Note Constr cannot be used here, also only bytes/integers as Json keys.\\\n     */\n    toJson,\n    void: function () {\n        return \"d87980\";\n    },\n    castFrom,\n    castTo,\n};\n/**\n * Convert PlutusData to Cbor encoded data.\\\n * Or apply a shape and convert the provided data struct to Cbor encoded data.\n */\nfunction to(data, type) {\n    function serialize(data) {\n        try {\n            if (typeof data === \"bigint\") {\n                return C.PlutusData.new_integer(C.BigInt.from_str(data.toString()));\n            }\n            else if (typeof data === \"string\") {\n                return C.PlutusData.new_bytes(fromHex(data));\n            }\n            else if (data instanceof Constr) {\n                const { index, fields } = data;\n                const plutusList = C.PlutusList.new();\n                fields.forEach((field) => plutusList.add(serialize(field)));\n                return C.PlutusData.new_constr_plutus_data(C.ConstrPlutusData.new(C.BigNum.from_str(index.toString()), plutusList));\n            }\n            else if (data instanceof Array) {\n                const plutusList = C.PlutusList.new();\n                data.forEach((arg) => plutusList.add(serialize(arg)));\n                return C.PlutusData.new_list(plutusList);\n            }\n            else if (data instanceof Map) {\n                const plutusMap = C.PlutusMap.new();\n                for (const [key, value] of data.entries()) {\n                    plutusMap.insert(serialize(key), serialize(value));\n                }\n                return C.PlutusData.new_map(plutusMap);\n            }\n            throw new Error(\"Unsupported type\");\n        }\n        catch (error) {\n            throw new Error(\"Could not serialize the data: \" + error);\n        }\n    }\n    const d = type ? castTo(data, type) : data;\n    return toHex(serialize(d).to_bytes());\n}\n/**\n *  Convert Cbor encoded data to Data.\\\n *  Or apply a shape and cast the cbor encoded data to a certain type.\n */\nfunction from(raw, type) {\n    function deserialize(data) {\n        if (data.kind() === 0) {\n            const constr = data.as_constr_plutus_data();\n            const l = constr.data();\n            const desL = [];\n            for (let i = 0; i < l.len(); i++) {\n                desL.push(deserialize(l.get(i)));\n            }\n            return new Constr(parseInt(constr.alternative().to_str()), desL);\n        }\n        else if (data.kind() === 1) {\n            const m = data.as_map();\n            const desM = new Map();\n            const keys = m.keys();\n            for (let i = 0; i < keys.len(); i++) {\n                desM.set(deserialize(keys.get(i)), deserialize(m.get(keys.get(i))));\n            }\n            return desM;\n        }\n        else if (data.kind() === 2) {\n            const l = data.as_list();\n            const desL = [];\n            for (let i = 0; i < l.len(); i++) {\n                desL.push(deserialize(l.get(i)));\n            }\n            return desL;\n        }\n        else if (data.kind() === 3) {\n            return BigInt(data.as_integer().to_str());\n        }\n        else if (data.kind() === 4) {\n            return toHex(data.as_bytes());\n        }\n        throw new Error(\"Unsupported type\");\n    }\n    const data = deserialize(C.PlutusData.from_bytes(fromHex(raw)));\n    return type ? castFrom(data, type) : data;\n}\n/**\n * Note Constr cannot be used here.\\\n * Strings prefixed with '0x' are not UTF-8 encoded.\n */\nfunction fromJson(json) {\n    function toData(json) {\n        if (typeof json === \"string\") {\n            return json.startsWith(\"0x\")\n                ? toHex(fromHex(json.slice(2)))\n                : fromText(json);\n        }\n        if (typeof json === \"number\")\n            return BigInt(json);\n        if (typeof json === \"bigint\")\n            return json;\n        if (json instanceof Array)\n            return json.map((v) => toData(v));\n        if (json instanceof Object) {\n            const tempMap = new Map();\n            Object.entries(json).forEach(([key, value]) => {\n                tempMap.set(toData(key), toData(value));\n            });\n            return tempMap;\n        }\n        throw new Error(\"Unsupported type\");\n    }\n    return toData(json);\n}\n/**\n * Note Constr cannot be used here, also only bytes/integers as Json keys.\\\n */\nfunction toJson(plutusData) {\n    function fromData(data) {\n        if (typeof data === \"bigint\" ||\n            typeof data === \"number\" ||\n            (typeof data === \"string\" &&\n                !isNaN(parseInt(data)) &&\n                data.slice(-1) === \"n\")) {\n            const bigint = typeof data === \"string\"\n                ? BigInt(data.slice(0, -1))\n                : data;\n            return parseInt(bigint.toString());\n        }\n        if (typeof data === \"string\") {\n            try {\n                return new TextDecoder(undefined, { fatal: true }).decode(fromHex(data));\n            }\n            catch (_) {\n                return \"0x\" + toHex(fromHex(data));\n            }\n        }\n        if (data instanceof Array)\n            return data.map((v) => fromData(v));\n        if (data instanceof Map) {\n            const tempJson = {};\n            data.forEach((value, key) => {\n                const convertedKey = fromData(key);\n                if (typeof convertedKey !== \"string\" &&\n                    typeof convertedKey !== \"number\") {\n                    throw new Error(\"Unsupported type (Note: Only bytes or integers can be keys of a JSON object)\");\n                }\n                tempJson[convertedKey] = fromData(value);\n            });\n            return tempJson;\n        }\n        throw new Error(\"Unsupported type (Note: Constructor cannot be converted to JSON)\");\n    }\n    return fromData(plutusData);\n}\nfunction castFrom(data, type) {\n    const shape = type;\n    if (!shape)\n        throw new Error(\"Could not type cast data.\");\n    const shapeType = (shape.anyOf ? \"enum\" : \"\") || shape.dataType;\n    switch (shapeType) {\n        case \"integer\": {\n            if (typeof data !== \"bigint\") {\n                throw new Error(\"Could not type cast to integer.\");\n            }\n            integerConstraints(data, shape);\n            return data;\n        }\n        case \"bytes\": {\n            if (typeof data !== \"string\") {\n                throw new Error(\"Could not type cast to bytes.\");\n            }\n            bytesConstraints(data, shape);\n            return data;\n        }\n        case \"constructor\": {\n            if (isVoid(shape)) {\n                if (!(data instanceof Constr) || data.index !== 0 ||\n                    data.fields.length !== 0) {\n                    throw new Error(\"Could not type cast to void.\");\n                }\n                return undefined;\n            }\n            else if (data instanceof Constr && data.index === shape.index &&\n                (shape.hasConstr || shape.hasConstr === undefined)) {\n                const fields = {};\n                if (shape.fields.length !== data.fields.length) {\n                    throw new Error(\"Could not type cast to object. Fields do not match.\");\n                }\n                shape.fields.forEach((field, fieldIndex) => {\n                    const title = field.title || \"wrapper\";\n                    if ((/[A-Z]/.test(title[0]))) {\n                        throw new Error(\"Could not type cast to object. Object properties need to start with a lowercase letter.\");\n                    }\n                    fields[title] = castFrom(data.fields[fieldIndex], field);\n                });\n                return fields;\n            }\n            else if (data instanceof Array && !shape.hasConstr &&\n                shape.hasConstr !== undefined) {\n                const fields = {};\n                if (shape.fields.length !== data.length) {\n                    throw new Error(\"Could not ype cast to object. Fields do not match.\");\n                }\n                shape.fields.forEach((field, fieldIndex) => {\n                    const title = field.title || \"wrapper\";\n                    if ((/[A-Z]/.test(title[0]))) {\n                        throw new Error(\"Could not type cast to object. Object properties need to start with a lowercase letter.\");\n                    }\n                    fields[title] = castFrom(data[fieldIndex], field);\n                });\n                return fields;\n            }\n            throw new Error(\"Could not type cast to object.\");\n        }\n        case \"enum\": {\n            // When enum has only one entry it's a single constructor/record object\n            if (shape.anyOf.length === 1) {\n                return castFrom(data, shape.anyOf[0]);\n            }\n            if (!(data instanceof Constr)) {\n                throw new Error(\"Could not type cast to enum.\");\n            }\n            const enumShape = shape.anyOf.find((entry) => entry.index === data.index);\n            if (!enumShape || enumShape.fields.length !== data.fields.length) {\n                throw new Error(\"Could not type cast to enum.\");\n            }\n            if (isBoolean(shape)) {\n                if (data.fields.length !== 0) {\n                    throw new Error(\"Could not type cast to boolean.\");\n                }\n                switch (data.index) {\n                    case 0:\n                        return false;\n                    case 1:\n                        return true;\n                }\n                throw new Error(\"Could not type cast to boolean.\");\n            }\n            else if (isNullable(shape)) {\n                switch (data.index) {\n                    case 0: {\n                        if (data.fields.length !== 1) {\n                            throw new Error(\"Could not type cast to nullable object.\");\n                        }\n                        return castFrom(data.fields[0], shape.anyOf[0].fields[0]);\n                    }\n                    case 1: {\n                        if (data.fields.length !== 0) {\n                            throw new Error(\"Could not type cast to nullable object.\");\n                        }\n                        return null;\n                    }\n                }\n                throw new Error(\"Could not type cast to nullable object.\");\n            }\n            switch (enumShape.dataType) {\n                case \"constructor\": {\n                    if (enumShape.fields.length === 0) {\n                        if (/[A-Z]/.test(enumShape.title[0])) {\n                            return enumShape.title;\n                        }\n                        throw new Error(\"Could not type cast to enum.\");\n                    }\n                    else {\n                        if (!(/[A-Z]/.test(enumShape.title))) {\n                            throw new Error(\"Could not type cast to enum. Enums need to start with an uppercase letter.\");\n                        }\n                        if (enumShape.fields.length !== data.fields.length) {\n                            throw new Error(\"Could not type cast to enum.\");\n                        }\n                        // check if named args\n                        const args = enumShape.fields[0].title\n                            ? Object.fromEntries(enumShape.fields.map((field, index) => [field.title, castFrom(data.fields[index], field)]))\n                            : enumShape.fields.map((field, index) => castFrom(data.fields[index], field));\n                        return {\n                            [enumShape.title]: args,\n                        };\n                    }\n                }\n            }\n            throw new Error(\"Could not type cast to enum.\");\n        }\n        case \"list\": {\n            if (shape.items instanceof Array) {\n                // tuple\n                if (data instanceof Constr &&\n                    data.index === 0 &&\n                    shape.hasConstr) {\n                    return data.fields.map((field, index) => castFrom(field, shape.items[index]));\n                }\n                else if (data instanceof Array && !shape.hasConstr) {\n                    return data.map((field, index) => castFrom(field, shape.items[index]));\n                }\n                throw new Error(\"Could not type cast to tuple.\");\n            }\n            else {\n                // array\n                if (!(data instanceof Array)) {\n                    throw new Error(\"Could not type cast to array.\");\n                }\n                listConstraints(data, shape);\n                return data.map((field) => castFrom(field, shape.items));\n            }\n        }\n        case \"map\": {\n            if (!(data instanceof Map)) {\n                throw new Error(\"Could not type cast to map.\");\n            }\n            mapConstraints(data, shape);\n            const map = new Map();\n            for (const [key, value] of (data)\n                .entries()) {\n                map.set(castFrom(key, shape.keys), castFrom(value, shape.values));\n            }\n            return map;\n        }\n        case undefined: {\n            return data;\n        }\n    }\n    throw new Error(\"Could not type cast data.\");\n}\nfunction castTo(struct, type) {\n    const shape = type;\n    if (!shape)\n        throw new Error(\"Could not type cast struct.\");\n    const shapeType = (shape.anyOf ? \"enum\" : \"\") || shape.dataType;\n    switch (shapeType) {\n        case \"integer\": {\n            if (typeof struct !== \"bigint\") {\n                throw new Error(\"Could not type cast to integer.\");\n            }\n            integerConstraints(struct, shape);\n            return struct;\n        }\n        case \"bytes\": {\n            if (typeof struct !== \"string\") {\n                throw new Error(\"Could not type cast to bytes.\");\n            }\n            bytesConstraints(struct, shape);\n            return struct;\n        }\n        case \"constructor\": {\n            if (isVoid(shape)) {\n                if (struct !== undefined) {\n                    throw new Error(\"Could not type cast to void.\");\n                }\n                return new Constr(0, []);\n            }\n            else if (typeof struct !== \"object\" || struct === null ||\n                shape.fields.length !== Object.keys(struct).length) {\n                throw new Error(\"Could not type cast to constructor.\");\n            }\n            const fields = shape.fields.map((field) => castTo(struct[field.title || \"wrapper\"], field));\n            return (shape.hasConstr || shape.hasConstr === undefined)\n                ? new Constr(shape.index, fields)\n                : fields;\n        }\n        case \"enum\": {\n            // When enum has only one entry it's a single constructor/record object\n            if (shape.anyOf.length === 1) {\n                return castTo(struct, shape.anyOf[0]);\n            }\n            if (isBoolean(shape)) {\n                if (typeof struct !== \"boolean\") {\n                    throw new Error(\"Could not type cast to boolean.\");\n                }\n                return new Constr(struct ? 1 : 0, []);\n            }\n            else if (isNullable(shape)) {\n                if (struct === null)\n                    return new Constr(1, []);\n                else {\n                    const fields = shape.anyOf[0].fields;\n                    if (fields.length !== 1) {\n                        throw new Error(\"Could not type cast to nullable object.\");\n                    }\n                    return new Constr(0, [\n                        castTo(struct, fields[0]),\n                    ]);\n                }\n            }\n            switch (typeof struct) {\n                case \"string\": {\n                    if (!(/[A-Z]/.test(struct[0]))) {\n                        throw new Error(\"Could not type cast to enum. Enum needs to start with an uppercase letter.\");\n                    }\n                    const enumIndex = shape.anyOf.findIndex((s) => s.dataType === \"constructor\" &&\n                        s.fields.length === 0 &&\n                        s.title === struct);\n                    if (enumIndex === -1)\n                        throw new Error(\"Could not type cast to enum.\");\n                    return new Constr(enumIndex, []);\n                }\n                case \"object\": {\n                    if (struct === null)\n                        throw new Error(\"Could not type cast to enum.\");\n                    const structTitle = Object.keys(struct)[0];\n                    if (!(/[A-Z]/.test(structTitle))) {\n                        throw new Error(\"Could not type cast to enum. Enum needs to start with an uppercase letter.\");\n                    }\n                    const enumEntry = shape.anyOf.find((s) => s.dataType === \"constructor\" &&\n                        s.title === structTitle);\n                    if (!enumEntry)\n                        throw new Error(\"Could not type cast to enum.\");\n                    const args = struct[structTitle];\n                    return new Constr(enumEntry.index, \n                    // check if named args\n                    args instanceof Array\n                        ? args.map((item, index) => castTo(item, enumEntry.fields[index]))\n                        : enumEntry.fields.map((entry) => {\n                            const [_, item] = Object.entries(args).find(([title]) => title === entry.title);\n                            return castTo(item, entry);\n                        }));\n                }\n            }\n            throw new Error(\"Could not type cast to enum.\");\n        }\n        case \"list\": {\n            if (!(struct instanceof Array)) {\n                throw new Error(\"Could not type cast to array/tuple.\");\n            }\n            if (shape.items instanceof Array) {\n                // tuple\n                const fields = struct.map((item, index) => castTo(item, shape.items[index]));\n                return shape.hasConstr ? new Constr(0, fields) : fields;\n            }\n            else {\n                // array\n                listConstraints(struct, shape);\n                return struct.map((item) => castTo(item, shape.items));\n            }\n        }\n        case \"map\": {\n            if (!(struct instanceof Map)) {\n                throw new Error(\"Could not type cast to map.\");\n            }\n            mapConstraints(struct, shape);\n            const map = new Map();\n            for (const [key, value] of (struct)\n                .entries()) {\n                map.set(castTo(key, shape.keys), castTo(value, shape.values));\n            }\n            return map;\n        }\n        case undefined: {\n            return struct;\n        }\n    }\n    throw new Error(\"Could not type cast struct.\");\n}\nfunction integerConstraints(integer, shape) {\n    if (shape.minimum && integer < BigInt(shape.minimum)) {\n        throw new Error(`Integer ${integer} is below the minimum ${shape.minimum}.`);\n    }\n    if (shape.maximum && integer > BigInt(shape.maximum)) {\n        throw new Error(`Integer ${integer} is above the maxiumum ${shape.maximum}.`);\n    }\n    if (shape.exclusiveMinimum && integer <= BigInt(shape.exclusiveMinimum)) {\n        throw new Error(`Integer ${integer} is below the exclusive minimum ${shape.exclusiveMinimum}.`);\n    }\n    if (shape.exclusiveMaximum && integer >= BigInt(shape.exclusiveMaximum)) {\n        throw new Error(`Integer ${integer} is above the exclusive maximum ${shape.exclusiveMaximum}.`);\n    }\n}\nfunction bytesConstraints(bytes, shape) {\n    if (shape.enum && !shape.enum.some((keyword) => keyword === bytes))\n        throw new Error(`None of the keywords match with '${bytes}'.`);\n    if (shape.minLength && bytes.length / 2 < shape.minLength) {\n        throw new Error(`Bytes need to have a length of at least ${shape.minLength} bytes.`);\n    }\n    if (shape.maxLength && bytes.length / 2 > shape.maxLength) {\n        throw new Error(`Bytes can have a length of at most ${shape.minLength} bytes.`);\n    }\n}\nfunction listConstraints(list, shape) {\n    if (shape.minItems && list.length < shape.minItems) {\n        throw new Error(`Array needs to contain at least ${shape.minItems} items.`);\n    }\n    if (shape.maxItems && list.length > shape.maxItems) {\n        throw new Error(`Array can contain at most ${shape.maxItems} items.`);\n    }\n    if (shape.uniqueItems && (new Set(list)).size !== list.length) {\n        // Note this only works for primitive types like string and bigint.\n        throw new Error(\"Array constains duplicates.\");\n    }\n}\nfunction mapConstraints(map, shape) {\n    if (shape.minItems && map.size < shape.minItems) {\n        throw new Error(`Map needs to contain at least ${shape.minItems} items.`);\n    }\n    if (shape.maxItems && map.size > shape.maxItems) {\n        throw new Error(`Map can contain at most ${shape.maxItems} items.`);\n    }\n}\nfunction isBoolean(shape) {\n    return shape.anyOf && shape.anyOf[0]?.title === \"False\" &&\n        shape.anyOf[1]?.title === \"True\";\n}\nfunction isVoid(shape) {\n    return shape.index === 0 && shape.fields.length === 0;\n}\nfunction isNullable(shape) {\n    return shape.anyOf && shape.anyOf[0]?.title === \"Some\" &&\n        shape.anyOf[1]?.title === \"None\";\n}\nfunction replaceProperties(object, properties) {\n    Object.keys(object).forEach((key) => {\n        delete object[key];\n    });\n    Object.assign(object, properties);\n}\n","export const SLOT_CONFIG_NETWORK = {\n    Mainnet: { zeroTime: 1596059091000, zeroSlot: 4492800, slotLength: 1000 },\n    Preview: { zeroTime: 1666656000000, zeroSlot: 0, slotLength: 1000 },\n    Preprod: {\n        zeroTime: 1654041600000 + 1728000000,\n        zeroSlot: 86400,\n        slotLength: 1000,\n    },\n    /** Customizable slot config (Initialized with 0 values). */\n    Custom: { zeroTime: 0, zeroSlot: 0, slotLength: 0 },\n};\nexport function slotToBeginUnixTime(slot, slotConfig) {\n    const msAfterBegin = (slot - slotConfig.zeroSlot) * slotConfig.slotLength;\n    return slotConfig.zeroTime + msAfterBegin;\n}\n// slotToBeginUnixTime and slotToEndUnixTime are identical when slotLength == 1. So we don't need to worry about this now.\n// function slotToEndUnixTime(slot: Slot, slotConfig: SlotConfig): UnixTime {\n//   return slotToBeginUnixTime(slot, slotConfig) + (slotConfig.slotLength - 1);\n// }\nexport function unixTimeToEnclosingSlot(unixTime, slotConfig) {\n    const timePassed = unixTime - slotConfig.zeroTime;\n    const slotsPassed = Math.floor(timePassed / slotConfig.slotLength);\n    return slotsPassed + slotConfig.zeroSlot;\n}\n","import { C } from \"../core/mod.js\";\nimport { applyDoubleCborEncoding, fromHex, toHex } from \"../utils/mod.js\";\nimport packageJson from \"../../package.js\";\nexport class Blockfrost {\n    constructor(url, projectId) {\n        Object.defineProperty(this, \"url\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"projectId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.url = url;\n        this.projectId = projectId || \"\";\n    }\n    async getProtocolParameters() {\n        const result = await fetch(`${this.url}/epochs/latest/parameters`, {\n            headers: { project_id: this.projectId, lucid },\n        }).then((res) => res.json());\n        return {\n            minFeeA: parseInt(result.min_fee_a),\n            minFeeB: parseInt(result.min_fee_b),\n            maxTxSize: parseInt(result.max_tx_size),\n            maxValSize: parseInt(result.max_val_size),\n            keyDeposit: BigInt(result.key_deposit),\n            poolDeposit: BigInt(result.pool_deposit),\n            priceMem: parseFloat(result.price_mem),\n            priceStep: parseFloat(result.price_step),\n            maxTxExMem: BigInt(result.max_tx_ex_mem),\n            maxTxExSteps: BigInt(result.max_tx_ex_steps),\n            coinsPerUtxoByte: BigInt(result.coins_per_utxo_size),\n            collateralPercentage: parseInt(result.collateral_percent),\n            maxCollateralInputs: parseInt(result.max_collateral_inputs),\n            costModels: result.cost_models,\n        };\n    }\n    async getUtxos(addressOrCredential) {\n        const queryPredicate = (() => {\n            if (typeof addressOrCredential === \"string\")\n                return addressOrCredential;\n            const credentialBech32 = addressOrCredential.type === \"Key\"\n                ? C.Ed25519KeyHash.from_hex(addressOrCredential.hash).to_bech32(\"addr_vkh\")\n                : C.ScriptHash.from_hex(addressOrCredential.hash).to_bech32(\"addr_vkh\"); // should be 'script' (CIP-0005)\n            return credentialBech32;\n        })();\n        let result = [];\n        let page = 1;\n        while (true) {\n            const pageResult = await fetch(`${this.url}/addresses/${queryPredicate}/utxos?page=${page}`, { headers: { project_id: this.projectId, lucid } }).then((res) => res.json());\n            if (pageResult.error) {\n                if (pageResult.status_code === 404) {\n                    return [];\n                }\n                else {\n                    throw new Error(\"Could not fetch UTxOs from Blockfrost. Try again.\");\n                }\n            }\n            result = result.concat(pageResult);\n            if (pageResult.length <= 0)\n                break;\n            page++;\n        }\n        return this.blockfrostUtxosToUtxos(result);\n    }\n    async getUtxosWithUnit(addressOrCredential, unit) {\n        const queryPredicate = (() => {\n            if (typeof addressOrCredential === \"string\")\n                return addressOrCredential;\n            const credentialBech32 = addressOrCredential.type === \"Key\"\n                ? C.Ed25519KeyHash.from_hex(addressOrCredential.hash).to_bech32(\"addr_vkh\")\n                : C.ScriptHash.from_hex(addressOrCredential.hash).to_bech32(\"addr_vkh\"); // should be 'script' (CIP-0005)\n            return credentialBech32;\n        })();\n        let result = [];\n        let page = 1;\n        while (true) {\n            const pageResult = await fetch(`${this.url}/addresses/${queryPredicate}/utxos/${unit}?page=${page}`, { headers: { project_id: this.projectId, lucid } }).then((res) => res.json());\n            if (pageResult.error) {\n                if (pageResult.status_code === 404) {\n                    return [];\n                }\n                else {\n                    throw new Error(\"Could not fetch UTxOs from Blockfrost. Try again.\");\n                }\n            }\n            result = result.concat(pageResult);\n            if (pageResult.length <= 0)\n                break;\n            page++;\n        }\n        return this.blockfrostUtxosToUtxos(result);\n    }\n    async getUtxoByUnit(unit) {\n        const addresses = await fetch(`${this.url}/assets/${unit}/addresses?count=2`, { headers: { project_id: this.projectId, lucid } }).then((res) => res.json());\n        if (!addresses || addresses.error) {\n            throw new Error(\"Unit not found.\");\n        }\n        if (addresses.length > 1) {\n            throw new Error(\"Unit needs to be an NFT or only held by one address.\");\n        }\n        const address = addresses[0].address;\n        const utxos = await this.getUtxosWithUnit(address, unit);\n        if (utxos.length > 1) {\n            throw new Error(\"Unit needs to be an NFT or only held by one address.\");\n        }\n        return utxos[0];\n    }\n    async getUtxosByOutRef(outRefs) {\n        // TODO: Make sure old already spent UTxOs are not retrievable.\n        const queryHashes = [...new Set(outRefs.map((outRef) => outRef.txHash))];\n        const utxos = await Promise.all(queryHashes.map(async (txHash) => {\n            const result = await fetch(`${this.url}/txs/${txHash}/utxos`, { headers: { project_id: this.projectId, lucid } }).then((res) => res.json());\n            if (!result || result.error) {\n                return [];\n            }\n            const utxosResult = result.outputs.map((\n            // deno-lint-ignore no-explicit-any\n            r) => ({\n                ...r,\n                tx_hash: txHash,\n            }));\n            return this.blockfrostUtxosToUtxos(utxosResult);\n        }));\n        return utxos.reduce((acc, utxos) => acc.concat(utxos), []).filter((utxo) => outRefs.some((outRef) => utxo.txHash === outRef.txHash && utxo.outputIndex === outRef.outputIndex));\n    }\n    async getDelegation(rewardAddress) {\n        const result = await fetch(`${this.url}/accounts/${rewardAddress}`, { headers: { project_id: this.projectId, lucid } }).then((res) => res.json());\n        if (!result || result.error) {\n            return { poolId: null, rewards: 0n };\n        }\n        return {\n            poolId: result.pool_id || null,\n            rewards: BigInt(result.withdrawable_amount),\n        };\n    }\n    async getDatum(datumHash) {\n        const datum = await fetch(`${this.url}/scripts/datum/${datumHash}/cbor`, {\n            headers: { project_id: this.projectId, lucid },\n        })\n            .then((res) => res.json())\n            .then((res) => res.cbor);\n        if (!datum || datum.error) {\n            throw new Error(`No datum found for datum hash: ${datumHash}`);\n        }\n        return datum;\n    }\n    awaitTx(txHash, checkInterval = 3000) {\n        return new Promise((res) => {\n            const confirmation = setInterval(async () => {\n                const isConfirmed = await fetch(`${this.url}/txs/${txHash}`, {\n                    headers: { project_id: this.projectId, lucid },\n                }).then((res) => res.json());\n                if (isConfirmed && !isConfirmed.error) {\n                    clearInterval(confirmation);\n                    await new Promise((res) => setTimeout(() => res(1), 1000));\n                    return res(true);\n                }\n            }, checkInterval);\n        });\n    }\n    async submitTx(tx) {\n        const result = await fetch(`${this.url}/tx/submit`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/cbor\",\n                project_id: this.projectId,\n                lucid,\n            },\n            body: fromHex(tx),\n        }).then((res) => res.json());\n        if (!result || result.error) {\n            if (result?.status_code === 400)\n                throw new Error(result.message);\n            else\n                throw new Error(\"Could not submit transaction.\");\n        }\n        return result;\n    }\n    async blockfrostUtxosToUtxos(result) {\n        return (await Promise.all(result.map(async (r) => ({\n            txHash: r.tx_hash,\n            outputIndex: r.output_index,\n            assets: Object.fromEntries(r.amount.map(({ unit, quantity }) => [unit, BigInt(quantity)])),\n            address: r.address,\n            datumHash: (!r.inline_datum && r.data_hash) || undefined,\n            datum: r.inline_datum || undefined,\n            scriptRef: r.reference_script_hash\n                ? (await (async () => {\n                    const { type, } = await fetch(`${this.url}/scripts/${r.reference_script_hash}`, {\n                        headers: { project_id: this.projectId, lucid },\n                    }).then((res) => res.json());\n                    // TODO: support native scripts\n                    if (type === \"Native\" || type === \"native\") {\n                        throw new Error(\"Native script ref not implemented!\");\n                    }\n                    const { cbor: script } = await fetch(`${this.url}/scripts/${r.reference_script_hash}/cbor`, { headers: { project_id: this.projectId, lucid } }).then((res) => res.json());\n                    return {\n                        type: type === \"plutusV1\" ? \"PlutusV1\" : \"PlutusV2\",\n                        script: applyDoubleCborEncoding(script),\n                    };\n                })())\n                : undefined,\n        }))));\n    }\n}\n/**\n * This function is temporarily needed only, until Blockfrost returns the datum natively in Cbor.\n * The conversion is ambigious, that's why it's better to get the datum directly in Cbor.\n */\nexport function datumJsonToCbor(json) {\n    const convert = (json) => {\n        if (!isNaN(json.int)) {\n            return C.PlutusData.new_integer(C.BigInt.from_str(json.int.toString()));\n        }\n        else if (json.bytes || !isNaN(Number(json.bytes))) {\n            return C.PlutusData.new_bytes(fromHex(json.bytes));\n        }\n        else if (json.map) {\n            const m = C.PlutusMap.new();\n            json.map.forEach(({ k, v }) => {\n                m.insert(convert(k), convert(v));\n            });\n            return C.PlutusData.new_map(m);\n        }\n        else if (json.list) {\n            const l = C.PlutusList.new();\n            json.list.forEach((v) => {\n                l.add(convert(v));\n            });\n            return C.PlutusData.new_list(l);\n        }\n        else if (!isNaN(json.constructor)) {\n            const l = C.PlutusList.new();\n            json.fields.forEach((v) => {\n                l.add(convert(v));\n            });\n            return C.PlutusData.new_constr_plutus_data(C.ConstrPlutusData.new(C.BigNum.from_str(json.constructor.toString()), l));\n        }\n        throw new Error(\"Unsupported type\");\n    };\n    return toHex(convert(json).to_bytes());\n}\nconst lucid = packageJson.version; // Lucid version\n","import { C } from \"../core/core.js\";\nimport { PROTOCOL_PARAMETERS_DEFAULT } from \"../utils/mod.js\";\nimport { coreToUtxo, fromHex, getAddressDetails, toHex, } from \"../utils/utils.js\";\nexport class Emulator {\n    constructor(accounts, protocolParameters = PROTOCOL_PARAMETERS_DEFAULT) {\n        Object.defineProperty(this, \"ledger\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"mempool\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        /**\n         * Only stake key registrations/delegations and rewards are tracked.\n         * Other certificates are not tracked.\n         */\n        Object.defineProperty(this, \"chain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"blockHeight\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"slot\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"protocolParameters\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"datumTable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        const GENESIS_HASH = \"00\".repeat(32);\n        this.blockHeight = 0;\n        this.slot = 0;\n        this.time = Date.now();\n        this.ledger = {};\n        accounts.forEach(({ address, assets }, index) => {\n            this.ledger[GENESIS_HASH + index] = {\n                utxo: {\n                    txHash: GENESIS_HASH,\n                    outputIndex: index,\n                    address,\n                    assets,\n                },\n                spent: false,\n            };\n        });\n        this.protocolParameters = protocolParameters;\n    }\n    now() {\n        return this.time;\n    }\n    awaitSlot(length = 1) {\n        this.slot += length;\n        this.time += length * 1000;\n        const currentHeight = this.blockHeight;\n        this.blockHeight = Math.floor(this.slot / 20);\n        if (this.blockHeight > currentHeight) {\n            for (const [outRef, { utxo, spent }] of Object.entries(this.mempool)) {\n                this.ledger[outRef] = { utxo, spent };\n            }\n            for (const [outRef, { spent }] of Object.entries(this.ledger)) {\n                if (spent)\n                    delete this.ledger[outRef];\n            }\n            this.mempool = {};\n        }\n    }\n    awaitBlock(height = 1) {\n        this.blockHeight += height;\n        this.slot += height * 20;\n        this.time += height * 20 * 1000;\n        for (const [outRef, { utxo, spent }] of Object.entries(this.mempool)) {\n            this.ledger[outRef] = { utxo, spent };\n        }\n        for (const [outRef, { spent }] of Object.entries(this.ledger)) {\n            if (spent)\n                delete this.ledger[outRef];\n        }\n        this.mempool = {};\n    }\n    getUtxos(addressOrCredential) {\n        const utxos = Object.values(this.ledger).flatMap(({ utxo }) => {\n            if (typeof addressOrCredential === \"string\") {\n                return addressOrCredential === utxo.address ? utxo : [];\n            }\n            else {\n                const { paymentCredential } = getAddressDetails(utxo.address);\n                return paymentCredential?.hash === addressOrCredential.hash ? utxo : [];\n            }\n        });\n        return Promise.resolve(utxos);\n    }\n    getProtocolParameters() {\n        return Promise.resolve(this.protocolParameters);\n    }\n    getDatum(datumHash) {\n        return Promise.resolve(this.datumTable[datumHash]);\n    }\n    getUtxosWithUnit(addressOrCredential, unit) {\n        const utxos = Object.values(this.ledger).flatMap(({ utxo }) => {\n            if (typeof addressOrCredential === \"string\") {\n                return addressOrCredential === utxo.address && utxo.assets[unit] > 0n\n                    ? utxo\n                    : [];\n            }\n            else {\n                const { paymentCredential } = getAddressDetails(utxo.address);\n                return paymentCredential?.hash === addressOrCredential.hash &&\n                    utxo.assets[unit] > 0n\n                    ? utxo\n                    : [];\n            }\n        });\n        return Promise.resolve(utxos);\n    }\n    getUtxosByOutRef(outRefs) {\n        return Promise.resolve(outRefs.flatMap((outRef) => this.ledger[outRef.txHash + outRef.outputIndex]?.utxo || []));\n    }\n    getUtxoByUnit(unit) {\n        const utxos = Object.values(this.ledger).flatMap(({ utxo }) => utxo.assets[unit] > 0n ? utxo : []);\n        if (utxos.length > 1) {\n            throw new Error(\"Unit needs to be an NFT or only held by one address.\");\n        }\n        return Promise.resolve(utxos[0]);\n    }\n    getDelegation(rewardAddress) {\n        return Promise.resolve({\n            poolId: this.chain[rewardAddress]?.delegation?.poolId || null,\n            rewards: this.chain[rewardAddress]?.delegation?.rewards || 0n,\n        });\n    }\n    awaitTx(txHash) {\n        if (this.mempool[txHash + 0]) {\n            this.awaitBlock();\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(true);\n    }\n    /**\n     * Emulates the behaviour of the reward distribution at epoch boundaries.\n     * Stake keys need to be registered and delegated like on a real chain in order to receive rewards.\n     */\n    distributeRewards(rewards) {\n        for (const [rewardAddress, { registeredStake, delegation }] of Object.entries(this.chain)) {\n            if (registeredStake && delegation.poolId) {\n                this.chain[rewardAddress] = {\n                    registeredStake,\n                    delegation: {\n                        poolId: delegation.poolId,\n                        rewards: delegation.rewards += rewards,\n                    },\n                };\n            }\n        }\n        this.awaitBlock();\n    }\n    submitTx(tx) {\n        /*\n            Checks that are already handled by the transaction builder:\n              - Fee calculation\n              - Phase 2 evaluation\n              - Input value == Output value (including mint value)\n              - Min ada requirement\n              - Stake key registration deposit amount\n              - Collateral\n    \r\n            Checks that need to be done:\n              - Verify witnesses\n              - Correct count of scripts and vkeys\n              - Stake key registration\n              - Withdrawals\n              - Validity interval\n         */\n        const desTx = C.Transaction.from_bytes(fromHex(tx));\n        const body = desTx.body();\n        const witnesses = desTx.witness_set();\n        const datums = witnesses.plutus_data();\n        const txHash = C.hash_transaction(body).to_hex();\n        // Validity interval\n        // Lower bound is inclusive?\n        // Upper bound is inclusive?\n        const lowerBound = body.validity_start_interval()\n            ? parseInt(body.validity_start_interval().to_str())\n            : null;\n        const upperBound = body.ttl() ? parseInt(body.ttl().to_str()) : null;\n        if (Number.isInteger(lowerBound) && this.slot < lowerBound) {\n            throw new Error(`Lower bound (${lowerBound}) not in slot range (${this.slot}).`);\n        }\n        if (Number.isInteger(upperBound) && this.slot > upperBound) {\n            throw new Error(`Upper bound (${upperBound}) not in slot range (${this.slot}).`);\n        }\n        // Datums in witness set\n        const datumTable = (() => {\n            const table = {};\n            for (let i = 0; i < (datums?.len() || 0); i++) {\n                const datum = datums.get(i);\n                const datumHash = C.hash_plutus_data(datum).to_hex();\n                table[datumHash] = toHex(datum.to_bytes());\n            }\n            return table;\n        })();\n        const consumedHashes = new Set();\n        // Witness keys\n        const keyHashes = (() => {\n            const keyHashes = [];\n            for (let i = 0; i < (witnesses.vkeys()?.len() || 0); i++) {\n                const witness = witnesses.vkeys().get(i);\n                const publicKey = witness.vkey().public_key();\n                const keyHash = publicKey.hash().to_hex();\n                if (!publicKey.verify(fromHex(txHash), witness.signature())) {\n                    throw new Error(`Invalid vkey witness. Key hash: ${keyHash}`);\n                }\n                keyHashes.push(keyHash);\n            }\n            return keyHashes;\n        })();\n        // We only need this to verify native scripts. The check happens in the CML.\n        const edKeyHashes = C.Ed25519KeyHashes.new();\n        keyHashes.forEach((keyHash) => edKeyHashes.add(C.Ed25519KeyHash.from_hex(keyHash)));\n        const nativeHashes = (() => {\n            const scriptHashes = [];\n            for (let i = 0; i < (witnesses.native_scripts()?.len() || 0); i++) {\n                const witness = witnesses.native_scripts().get(i);\n                const scriptHash = witness.hash(C.ScriptHashNamespace.NativeScript)\n                    .to_hex();\n                if (!witness.verify(Number.isInteger(lowerBound)\n                    ? C.BigNum.from_str(lowerBound.toString())\n                    : undefined, Number.isInteger(upperBound)\n                    ? C.BigNum.from_str(upperBound.toString())\n                    : undefined, edKeyHashes)) {\n                    throw new Error(`Invalid native script witness. Script hash: ${scriptHash}`);\n                }\n                for (let i = 0; i < witness.get_required_signers().len(); i++) {\n                    const keyHash = witness.get_required_signers().get(i).to_hex();\n                    consumedHashes.add(keyHash);\n                }\n                scriptHashes.push(scriptHash);\n            }\n            return scriptHashes;\n        })();\n        const nativeHashesOptional = {};\n        const plutusHashesOptional = [];\n        const plutusHashes = (() => {\n            const scriptHashes = [];\n            for (let i = 0; i < (witnesses.plutus_scripts()?.len() || 0); i++) {\n                const script = witnesses.plutus_scripts().get(i);\n                const scriptHash = script.hash(C.ScriptHashNamespace.PlutusV1)\n                    .to_hex();\n                scriptHashes.push(scriptHash);\n            }\n            for (let i = 0; i < (witnesses.plutus_v2_scripts()?.len() || 0); i++) {\n                const script = witnesses.plutus_v2_scripts().get(i);\n                const scriptHash = script.hash(C.ScriptHashNamespace.PlutusV2)\n                    .to_hex();\n                scriptHashes.push(scriptHash);\n            }\n            return scriptHashes;\n        })();\n        const inputs = body.inputs();\n        inputs.sort();\n        const resolvedInputs = [];\n        // Check existence of inputs and look for script refs.\n        for (let i = 0; i < inputs.len(); i++) {\n            const input = inputs.get(i);\n            const outRef = input.transaction_id().to_hex() + input.index().to_str();\n            const entryLedger = this.ledger[outRef];\n            const { entry, type } = !entryLedger\n                ? { entry: this.mempool[outRef], type: \"Mempool\" }\n                : { entry: entryLedger, type: \"Ledger\" };\n            if (!entry || entry.spent) {\n                throw new Error(`Could not spend UTxO: ${JSON.stringify({\n                    txHash: entry?.utxo.txHash,\n                    outputIndex: entry?.utxo.outputIndex,\n                })}\\nIt does not exist or was already spent.`);\n            }\n            const scriptRef = entry.utxo.scriptRef;\n            if (scriptRef) {\n                switch (scriptRef.type) {\n                    case \"Native\": {\n                        const script = C.NativeScript.from_bytes(fromHex(scriptRef.script));\n                        nativeHashesOptional[script.hash(C.ScriptHashNamespace.NativeScript).to_hex()] = script;\n                        break;\n                    }\n                    case \"PlutusV1\": {\n                        const script = C.PlutusScript.from_bytes(fromHex(scriptRef.script));\n                        plutusHashesOptional.push(script.hash(C.ScriptHashNamespace.PlutusV1).to_hex());\n                        break;\n                    }\n                    case \"PlutusV2\": {\n                        const script = C.PlutusScript.from_bytes(fromHex(scriptRef.script));\n                        plutusHashesOptional.push(script.hash(C.ScriptHashNamespace.PlutusV2).to_hex());\n                        break;\n                    }\n                }\n            }\n            if (entry.utxo.datumHash)\n                consumedHashes.add(entry.utxo.datumHash);\n            resolvedInputs.push({ entry, type });\n        }\n        // Check existence of reference inputs and look for script refs.\n        for (let i = 0; i < (body.reference_inputs()?.len() || 0); i++) {\n            const input = body.reference_inputs().get(i);\n            const outRef = input.transaction_id().to_hex() + input.index().to_str();\n            const entry = this.ledger[outRef] || this.mempool[outRef];\n            if (!entry || entry.spent) {\n                throw new Error(`Could not read UTxO: ${JSON.stringify({\n                    txHash: entry?.utxo.txHash,\n                    outputIndex: entry?.utxo.outputIndex,\n                })}\\nIt does not exist or was already spent.`);\n            }\n            const scriptRef = entry.utxo.scriptRef;\n            if (scriptRef) {\n                switch (scriptRef.type) {\n                    case \"Native\": {\n                        const script = C.NativeScript.from_bytes(fromHex(scriptRef.script));\n                        nativeHashesOptional[script.hash(C.ScriptHashNamespace.NativeScript).to_hex()] = script;\n                        break;\n                    }\n                    case \"PlutusV1\": {\n                        const script = C.PlutusScript.from_bytes(fromHex(scriptRef.script));\n                        plutusHashesOptional.push(script.hash(C.ScriptHashNamespace.PlutusV1).to_hex());\n                        break;\n                    }\n                    case \"PlutusV2\": {\n                        const script = C.PlutusScript.from_bytes(fromHex(scriptRef.script));\n                        plutusHashesOptional.push(script.hash(C.ScriptHashNamespace.PlutusV2).to_hex());\n                        break;\n                    }\n                }\n            }\n            if (entry.utxo.datumHash)\n                consumedHashes.add(entry.utxo.datumHash);\n        }\n        const redeemers = (() => {\n            const tagMap = {\n                0: \"Spend\",\n                1: \"Mint\",\n                2: \"Cert\",\n                3: \"Reward\",\n            };\n            const collected = [];\n            for (let i = 0; i < (witnesses.redeemers()?.len() || 0); i++) {\n                const redeemer = witnesses.redeemers().get(i);\n                collected.push({\n                    tag: tagMap[redeemer.tag().kind()],\n                    index: parseInt(redeemer.index().to_str()),\n                });\n            }\n            return collected;\n        })();\n        function checkAndConsumeHash(credential, tag, index) {\n            switch (credential.type) {\n                case \"Key\": {\n                    if (!keyHashes.includes(credential.hash)) {\n                        throw new Error(`Missing vkey witness. Key hash: ${credential.hash}`);\n                    }\n                    consumedHashes.add(credential.hash);\n                    break;\n                }\n                case \"Script\": {\n                    if (nativeHashes.includes(credential.hash)) {\n                        consumedHashes.add(credential.hash);\n                        break;\n                    }\n                    else if (nativeHashesOptional[credential.hash]) {\n                        if (!nativeHashesOptional[credential.hash].verify(Number.isInteger(lowerBound)\n                            ? C.BigNum.from_str(lowerBound.toString())\n                            : undefined, Number.isInteger(upperBound)\n                            ? C.BigNum.from_str(upperBound.toString())\n                            : undefined, edKeyHashes)) {\n                            throw new Error(`Invalid native script witness. Script hash: ${credential.hash}`);\n                        }\n                        break;\n                    }\n                    else if (plutusHashes.includes(credential.hash) ||\n                        plutusHashesOptional.includes(credential.hash)) {\n                        if (redeemers.find((redeemer) => redeemer.tag === tag && redeemer.index === index)) {\n                            consumedHashes.add(credential.hash);\n                            break;\n                        }\n                    }\n                    throw new Error(`Missing script witness. Script hash: ${credential.hash}`);\n                }\n            }\n        }\n        // Check collateral inputs\n        for (let i = 0; i < (body.collateral()?.len() || 0); i++) {\n            const input = body.collateral().get(i);\n            const outRef = input.transaction_id().to_hex() + input.index().to_str();\n            const entry = this.ledger[outRef] || this.mempool[outRef];\n            if (!entry || entry.spent) {\n                throw new Error(`Could not read UTxO: ${JSON.stringify({\n                    txHash: entry?.utxo.txHash,\n                    outputIndex: entry?.utxo.outputIndex,\n                })}\\nIt does not exist or was already spent.`);\n            }\n            const { paymentCredential } = getAddressDetails(entry.utxo.address);\n            if (paymentCredential?.type === \"Script\") {\n                throw new Error(\"Collateral inputs can only contain vkeys.\");\n            }\n            checkAndConsumeHash(paymentCredential, null, null);\n        }\n        // Check required signers\n        for (let i = 0; i < (body.required_signers()?.len() || 0); i++) {\n            const signer = body.required_signers().get(i);\n            checkAndConsumeHash({ type: \"Key\", hash: signer.to_hex() }, null, null);\n        }\n        // Check mint witnesses\n        for (let index = 0; index < (body.mint()?.keys().len() || 0); index++) {\n            const policyId = body.mint().keys().get(index).to_hex();\n            checkAndConsumeHash({ type: \"Script\", hash: policyId }, \"Mint\", index);\n        }\n        // Check withdrawal witnesses\n        const withdrawalRequests = [];\n        for (let index = 0; index < (body.withdrawals()?.keys().len() || 0); index++) {\n            const rawAddress = body.withdrawals().keys().get(index);\n            const withdrawal = BigInt(body.withdrawals().get(rawAddress).to_str());\n            const rewardAddress = rawAddress.to_address().to_bech32(undefined);\n            const { stakeCredential } = getAddressDetails(rewardAddress);\n            checkAndConsumeHash(stakeCredential, \"Reward\", index);\n            if (this.chain[rewardAddress]?.delegation.rewards !== withdrawal) {\n                throw new Error(\"Withdrawal amount doesn't match actual reward balance.\");\n            }\n            withdrawalRequests.push({ rewardAddress, withdrawal });\n        }\n        // Check cert witnesses\n        const certRequests = [];\n        for (let index = 0; index < (body.certs()?.len() || 0); index++) {\n            /*\n              Checking only:\n              1. Stake registration\n              2. Stake deregistration\n              3. Stake delegation\n      \r\n              All other certificate types are not checked and considered valid.\n            */\n            const cert = body.certs().get(index);\n            switch (cert.kind()) {\n                case 0: {\n                    const registration = cert.as_stake_registration();\n                    const rewardAddress = C.RewardAddress.new(C.NetworkInfo.testnet().network_id(), registration.stake_credential()).to_address().to_bech32(undefined);\n                    if (this.chain[rewardAddress]?.registeredStake) {\n                        throw new Error(`Stake key is already registered. Reward address: ${rewardAddress}`);\n                    }\n                    certRequests.push({ type: \"Registration\", rewardAddress });\n                    break;\n                }\n                case 1: {\n                    const deregistration = cert.as_stake_deregistration();\n                    const rewardAddress = C.RewardAddress.new(C.NetworkInfo.testnet().network_id(), deregistration.stake_credential()).to_address().to_bech32(undefined);\n                    const { stakeCredential } = getAddressDetails(rewardAddress);\n                    checkAndConsumeHash(stakeCredential, \"Cert\", index);\n                    if (!this.chain[rewardAddress]?.registeredStake) {\n                        throw new Error(`Stake key is already deregistered. Reward address: ${rewardAddress}`);\n                    }\n                    certRequests.push({ type: \"Deregistration\", rewardAddress });\n                    break;\n                }\n                case 2: {\n                    const delegation = cert.as_stake_delegation();\n                    const rewardAddress = C.RewardAddress.new(C.NetworkInfo.testnet().network_id(), delegation.stake_credential()).to_address().to_bech32(undefined);\n                    const poolId = delegation.pool_keyhash().to_bech32(\"pool\");\n                    const { stakeCredential } = getAddressDetails(rewardAddress);\n                    checkAndConsumeHash(stakeCredential, \"Cert\", index);\n                    if (!this.chain[rewardAddress]?.registeredStake &&\n                        !certRequests.find((request) => request.type === \"Registration\" &&\n                            request.rewardAddress === rewardAddress)) {\n                        throw new Error(`Stake key is not registered. Reward address: ${rewardAddress}`);\n                    }\n                    certRequests.push({ type: \"Delegation\", rewardAddress, poolId });\n                    break;\n                }\n            }\n        }\n        // Check input witnesses\n        resolvedInputs.forEach(({ entry: { utxo } }, index) => {\n            const { paymentCredential } = getAddressDetails(utxo.address);\n            checkAndConsumeHash(paymentCredential, \"Spend\", index);\n        });\n        // Create outputs and consume datum hashes\n        const outputs = (() => {\n            const collected = [];\n            for (let i = 0; i < body.outputs().len(); i++) {\n                const output = body.outputs().get(i);\n                const unspentOutput = C.TransactionUnspentOutput.new(C.TransactionInput.new(C.TransactionHash.from_hex(txHash), C.BigNum.from_str(i.toString())), output);\n                const utxo = coreToUtxo(unspentOutput);\n                if (utxo.datumHash)\n                    consumedHashes.add(utxo.datumHash);\n                collected.push({\n                    utxo,\n                    spent: false,\n                });\n            }\n            return collected;\n        })();\n        // Check consumed witnesses\n        const [extraKeyHash] = keyHashes.filter((keyHash) => !consumedHashes.has(keyHash));\n        if (extraKeyHash) {\n            throw new Error(`Extraneous vkey witness. Key hash: ${extraKeyHash}`);\n        }\n        const [extraNativeHash] = nativeHashes.filter((scriptHash) => !consumedHashes.has(scriptHash));\n        if (extraNativeHash) {\n            throw new Error(`Extraneous native script. Script hash: ${extraNativeHash}`);\n        }\n        const [extraPlutusHash] = plutusHashes.filter((scriptHash) => !consumedHashes.has(scriptHash));\n        if (extraPlutusHash) {\n            throw new Error(`Extraneous plutus script. Script hash: ${extraPlutusHash}`);\n        }\n        const [extraDatumHash] = Object.keys(datumTable).filter((datumHash) => !consumedHashes.has(datumHash));\n        if (extraDatumHash) {\n            throw new Error(`Extraneous plutus data. Datum hash: ${extraDatumHash}`);\n        }\n        // Apply transitions\n        resolvedInputs.forEach(({ entry, type }) => {\n            const outRef = entry.utxo.txHash + entry.utxo.outputIndex;\n            entry.spent = true;\n            if (type === \"Ledger\")\n                this.ledger[outRef] = entry;\n            else if (type === \"Mempool\")\n                this.mempool[outRef] = entry;\n        });\n        withdrawalRequests.forEach(({ rewardAddress, withdrawal }) => {\n            this.chain[rewardAddress].delegation.rewards -= withdrawal;\n        });\n        certRequests.forEach(({ type, rewardAddress, poolId }) => {\n            switch (type) {\n                case \"Registration\": {\n                    if (this.chain[rewardAddress]) {\n                        this.chain[rewardAddress].registeredStake = true;\n                    }\n                    else {\n                        this.chain[rewardAddress] = {\n                            registeredStake: true,\n                            delegation: { poolId: null, rewards: 0n },\n                        };\n                    }\n                    break;\n                }\n                case \"Deregistration\": {\n                    this.chain[rewardAddress].registeredStake = false;\n                    this.chain[rewardAddress].delegation.poolId = null;\n                    break;\n                }\n                case \"Delegation\": {\n                    this.chain[rewardAddress].delegation.poolId = poolId;\n                }\n            }\n        });\n        outputs.forEach(({ utxo, spent }) => {\n            this.mempool[utxo.txHash + utxo.outputIndex] = {\n                utxo,\n                spent,\n            };\n        });\n        for (const [datumHash, datum] of Object.entries(datumTable)) {\n            this.datumTable[datumHash] = datum;\n        }\n        return Promise.resolve(txHash);\n    }\n    log() {\n        function getRandomColor(unit) {\n            const seed = unit === \"lovelace\" ? \"1\" : unit;\n            // Convert the seed string to a number\n            let num = 0;\n            for (let i = 0; i < seed.length; i++) {\n                num += seed.charCodeAt(i);\n            }\n            // Generate a color based on the seed number\n            const r = (num * 123) % 256;\n            const g = (num * 321) % 256;\n            const b = (num * 213) % 256;\n            // Return the color as a hex string\n            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n        }\n        const totalBalances = {};\n        const balances = {};\n        for (const { utxo } of Object.values(this.ledger)) {\n            for (const [unit, quantity] of Object.entries(utxo.assets)) {\n                if (!balances[utxo.address]) {\n                    balances[utxo.address] = { [unit]: quantity };\n                }\n                else if (!balances[utxo.address]?.[unit]) {\n                    balances[utxo.address][unit] = quantity;\n                }\n                else {\n                    balances[utxo.address][unit] += quantity;\n                }\n                if (!totalBalances[unit]) {\n                    totalBalances[unit] = quantity;\n                }\n                else {\n                    totalBalances[unit] += quantity;\n                }\n            }\n        }\n        console.log(\"\\n%cBlockchain state\", \"color:purple\");\n        console.log(`\n    Block height:   %c${this.blockHeight}%c\n    Slot:           %c${this.slot}%c\n    Unix time:      %c${this.time}\n  `, \"color:yellow\", \"color:white\", \"color:yellow\", \"color:white\", \"color:yellow\");\n        console.log(\"\\n\");\n        for (const [address, assets] of Object.entries(balances)) {\n            console.log(`Address: %c${address}`, \"color:blue\", \"\\n\");\n            for (const [unit, quantity] of Object.entries(assets)) {\n                const barLength = Math.max(Math.floor(60 * (Number(quantity) / Number(totalBalances[unit]))), 1);\n                console.log(`%c${\"\\u2586\".repeat(barLength) + \" \".repeat(60 - barLength)}`, `color: ${getRandomColor(unit)}`, \"\", `${unit}:`, quantity, \"\");\n            }\n            console.log(`\\n${\"\\u2581\".repeat(60)}\\n`);\n        }\n    }\n}\n","import { C } from \"../core/mod.js\";\nimport { applyDoubleCborEncoding, fromHex } from \"../utils/mod.js\";\nimport packageJson from \"../../package.js\";\nexport class Maestro {\n    constructor({ network, apiKey, turboSubmit = false }) {\n        Object.defineProperty(this, \"url\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"turboSubmit\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.url = `https://${network}.gomaestro-api.org/v1`;\n        this.apiKey = apiKey;\n        this.turboSubmit = turboSubmit;\n    }\n    async getProtocolParameters() {\n        const timestampedResult = await fetch(`${this.url}/protocol-params`, {\n            headers: this.commonHeaders(),\n        }).then((res) => res.json());\n        const result = timestampedResult.data;\n        // Decimal numbers in Maestro are given as ratio of two numbers represented by string of format \"firstNumber/secondNumber\".\n        const decimalFromRationalString = (str) => {\n            const forwardSlashIndex = str.indexOf(\"/\");\n            return parseInt(str.slice(0, forwardSlashIndex)) / parseInt(str.slice(forwardSlashIndex + 1));\n        };\n        // To rename keys in an object by the given key-map.\n        // deno-lint-ignore no-explicit-any\n        const renameKeysAndSort = (obj, newKeys) => {\n            const entries = Object.keys(obj).sort().map((key) => {\n                const newKey = newKeys[key] || key;\n                return {\n                    [newKey]: Object.fromEntries(Object.entries(obj[key]).sort(([k, _v], [k2, _v2]) => k.localeCompare(k2))),\n                };\n            });\n            return Object.assign({}, ...entries);\n        };\n        return {\n            minFeeA: parseInt(result.min_fee_coefficient),\n            minFeeB: parseInt(result.min_fee_constant),\n            maxTxSize: parseInt(result.max_tx_size),\n            maxValSize: parseInt(result.max_value_size),\n            keyDeposit: BigInt(result.stake_key_deposit),\n            poolDeposit: BigInt(result.pool_deposit),\n            priceMem: decimalFromRationalString(result.prices.memory),\n            priceStep: decimalFromRationalString(result.prices.steps),\n            maxTxExMem: BigInt(result.max_execution_units_per_transaction.memory),\n            maxTxExSteps: BigInt(result.max_execution_units_per_transaction.steps),\n            coinsPerUtxoByte: BigInt(result.coins_per_utxo_byte),\n            collateralPercentage: parseInt(result.collateral_percentage),\n            maxCollateralInputs: parseInt(result.max_collateral_inputs),\n            costModels: renameKeysAndSort(result.cost_models, {\n                \"plutus:v1\": \"PlutusV1\",\n                \"plutus:v2\": \"PlutusV2\",\n            }),\n        };\n    }\n    async getUtxos(addressOrCredential) {\n        const queryPredicate = (() => {\n            if (typeof addressOrCredential === \"string\")\n                return \"/addresses/\" + addressOrCredential;\n            let credentialBech32Query = \"/addresses/cred/\";\n            credentialBech32Query += addressOrCredential.type === \"Key\"\n                ? C.Ed25519KeyHash.from_hex(addressOrCredential.hash).to_bech32(\"addr_vkh\")\n                : C.ScriptHash.from_hex(addressOrCredential.hash).to_bech32(\"addr_shared_vkh\");\n            return credentialBech32Query;\n        })();\n        let result = [];\n        let nextCursor = null;\n        while (true) {\n            const appendCursorString = nextCursor === null ? \"\" : `&cursor=${nextCursor}`;\n            const response = await fetch(`${this.url}${queryPredicate}/utxos?count=100${appendCursorString}`, { headers: this.commonHeaders() });\n            const pageResult = await response.json();\n            if (!response.ok) {\n                throw new Error(\"Could not fetch UTxOs from Maestro. Received status code: \" + response.status);\n            }\n            nextCursor = pageResult.next_cursor;\n            result = result.concat(pageResult.data);\n            if (nextCursor == null)\n                break;\n        }\n        return result.map(this.maestroUtxoToUtxo);\n    }\n    async getUtxosWithUnit(addressOrCredential, unit) {\n        const utxos = await this.getUtxos(addressOrCredential);\n        return utxos.filter((utxo) => utxo.assets[unit]);\n    }\n    async getUtxoByUnit(unit) {\n        const timestampedAddressesResponse = await fetch(`${this.url}/assets/${unit}/addresses?count=2`, { headers: this.commonHeaders() });\n        const timestampedAddresses = await timestampedAddressesResponse.json();\n        if (!timestampedAddressesResponse.ok) {\n            if (timestampedAddresses.message)\n                throw new Error(timestampedAddresses.message);\n            throw new Error(\"Couldn't perform query. Received status code: \" + timestampedAddressesResponse.status);\n        }\n        const addressesWithAmount = timestampedAddresses.data;\n        if (addressesWithAmount.length === 0) {\n            throw new Error(\"Unit not found.\");\n        }\n        if (addressesWithAmount.length > 1) {\n            throw new Error(\"Unit needs to be an NFT or only held by one address.\");\n        }\n        const address = addressesWithAmount[0].address;\n        const utxos = await this.getUtxosWithUnit(address, unit);\n        if (utxos.length > 1) {\n            throw new Error(\"Unit needs to be an NFT or only held by one address.\");\n        }\n        return utxos[0];\n    }\n    async getUtxosByOutRef(outRefs) {\n        const response = await fetch(`${this.url}/transactions/outputs`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                ...this.commonHeaders()\n            },\n            body: JSON.stringify(outRefs.map(({ txHash, outputIndex }) => `${txHash}#${outputIndex}`)),\n        });\n        if (!response.ok)\n            return [];\n        const utxos = (await response.json()).data;\n        return utxos.map(this.maestroUtxoToUtxo);\n    }\n    async getDelegation(rewardAddress) {\n        const timestampedResultResponse = await fetch(`${this.url}/accounts/${rewardAddress}`, { headers: this.commonHeaders() });\n        if (!timestampedResultResponse.ok) {\n            return { poolId: null, rewards: 0n };\n        }\n        const timestampedResult = await timestampedResultResponse.json();\n        const result = timestampedResult.data;\n        return {\n            poolId: result.delegated_pool || null,\n            rewards: BigInt(result.rewards_available),\n        };\n    }\n    async getDatum(datumHash) {\n        const timestampedResultResponse = await fetch(`${this.url}/datum/${datumHash}`, {\n            headers: this.commonHeaders(),\n        });\n        if (!timestampedResultResponse.ok) {\n            if (timestampedResultResponse.status === 404)\n                throw new Error(`No datum found for datum hash: ${datumHash}`);\n            else\n                throw new Error(\"Couldn't successfully perform query. Received status code: \" + timestampedResultResponse.status);\n        }\n        const timestampedResult = await timestampedResultResponse.json();\n        return timestampedResult.data.bytes;\n    }\n    awaitTx(txHash, checkInterval = 3000) {\n        return new Promise((res) => {\n            const confirmation = setInterval(async () => {\n                const isConfirmedResponse = await fetch(`${this.url}/transactions/${txHash}/cbor`, {\n                    headers: this.commonHeaders(),\n                });\n                if (isConfirmedResponse.ok) {\n                    await isConfirmedResponse.json();\n                    clearInterval(confirmation);\n                    await new Promise((res) => setTimeout(() => res(1), 1000));\n                    return res(true);\n                }\n            }, checkInterval);\n        });\n    }\n    async submitTx(tx) {\n        let queryUrl = `${this.url}/txmanager`;\n        queryUrl += this.turboSubmit ? '/turbosubmit' : '';\n        const response = await fetch(queryUrl, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/cbor\",\n                \"Accept\": \"text/plain\",\n                ...this.commonHeaders(),\n            },\n            body: fromHex(tx),\n        });\n        const result = await response.text();\n        if (!response.ok) {\n            if (response.status === 400)\n                throw new Error(result);\n            else\n                throw new Error(\"Could not submit transaction. Received status code: \" + response.status);\n        }\n        return result;\n    }\n    commonHeaders() {\n        return { \"api-key\": this.apiKey, lucid };\n    }\n    maestroUtxoToUtxo(result) {\n        return {\n            txHash: result.tx_hash,\n            outputIndex: result.index,\n            assets: (() => {\n                const a = {};\n                result.assets.forEach((am) => {\n                    a[am.unit] = BigInt(am.amount);\n                });\n                return a;\n            })(),\n            address: result.address,\n            datumHash: result.datum\n                ? result.datum.type == \"inline\" ? undefined : result.datum.hash\n                : undefined,\n            datum: result.datum?.bytes,\n            scriptRef: result.reference_script\n                ? result.reference_script.type == \"native\" ? undefined : {\n                    type: result.reference_script.type == \"plutusv1\"\n                        ? \"PlutusV1\"\n                        : \"PlutusV2\",\n                    script: applyDoubleCborEncoding(result.reference_script.bytes),\n                }\n                : undefined,\n        };\n    }\n}\nconst lucid = packageJson.version; // Lucid version\n","import { C } from \"../core/mod.js\";\nexport function createCostModels(costModels) {\n    const costmdls = C.Costmdls.new();\n    // add plutus v1\n    const costmdlV1 = C.CostModel.new();\n    Object.values(costModels.PlutusV1).forEach((cost, index) => {\n        costmdlV1.set(index, C.Int.new(C.BigNum.from_str(cost.toString())));\n    });\n    costmdls.insert(C.Language.new_plutus_v1(), costmdlV1);\n    // add plutus v2\n    const costmdlV2 = C.CostModel.new_plutus_v2();\n    Object.values(costModels.PlutusV2 || []).forEach((cost, index) => {\n        costmdlV2.set(index, C.Int.new(C.BigNum.from_str(cost.toString())));\n    });\n    costmdls.insert(C.Language.new_plutus_v2(), costmdlV2);\n    return costmdls;\n}\nexport const PROTOCOL_PARAMETERS_DEFAULT = {\n    minFeeA: 44,\n    minFeeB: 155381,\n    maxTxSize: 16384,\n    maxValSize: 5000,\n    keyDeposit: 2000000n,\n    poolDeposit: 500000000n,\n    priceMem: 0.0577,\n    priceStep: 0.0000721,\n    maxTxExMem: 14000000n,\n    maxTxExSteps: 10000000000n,\n    coinsPerUtxoByte: 4310n,\n    collateralPercentage: 150,\n    maxCollateralInputs: 3,\n    costModels: {\n        PlutusV1: {\n            \"addInteger-cpu-arguments-intercept\": 205665,\n            \"addInteger-cpu-arguments-slope\": 812,\n            \"addInteger-memory-arguments-intercept\": 1,\n            \"addInteger-memory-arguments-slope\": 1,\n            \"appendByteString-cpu-arguments-intercept\": 1000,\n            \"appendByteString-cpu-arguments-slope\": 571,\n            \"appendByteString-memory-arguments-intercept\": 0,\n            \"appendByteString-memory-arguments-slope\": 1,\n            \"appendString-cpu-arguments-intercept\": 1000,\n            \"appendString-cpu-arguments-slope\": 24177,\n            \"appendString-memory-arguments-intercept\": 4,\n            \"appendString-memory-arguments-slope\": 1,\n            \"bData-cpu-arguments\": 1000,\n            \"bData-memory-arguments\": 32,\n            \"blake2b_256-cpu-arguments-intercept\": 117366,\n            \"blake2b_256-cpu-arguments-slope\": 10475,\n            \"blake2b_256-memory-arguments\": 4,\n            \"cekApplyCost-exBudgetCPU\": 23000,\n            \"cekApplyCost-exBudgetMemory\": 100,\n            \"cekBuiltinCost-exBudgetCPU\": 23000,\n            \"cekBuiltinCost-exBudgetMemory\": 100,\n            \"cekConstCost-exBudgetCPU\": 23000,\n            \"cekConstCost-exBudgetMemory\": 100,\n            \"cekDelayCost-exBudgetCPU\": 23000,\n            \"cekDelayCost-exBudgetMemory\": 100,\n            \"cekForceCost-exBudgetCPU\": 23000,\n            \"cekForceCost-exBudgetMemory\": 100,\n            \"cekLamCost-exBudgetCPU\": 23000,\n            \"cekLamCost-exBudgetMemory\": 100,\n            \"cekStartupCost-exBudgetCPU\": 100,\n            \"cekStartupCost-exBudgetMemory\": 100,\n            \"cekVarCost-exBudgetCPU\": 23000,\n            \"cekVarCost-exBudgetMemory\": 100,\n            \"chooseData-cpu-arguments\": 19537,\n            \"chooseData-memory-arguments\": 32,\n            \"chooseList-cpu-arguments\": 175354,\n            \"chooseList-memory-arguments\": 32,\n            \"chooseUnit-cpu-arguments\": 46417,\n            \"chooseUnit-memory-arguments\": 4,\n            \"consByteString-cpu-arguments-intercept\": 221973,\n            \"consByteString-cpu-arguments-slope\": 511,\n            \"consByteString-memory-arguments-intercept\": 0,\n            \"consByteString-memory-arguments-slope\": 1,\n            \"constrData-cpu-arguments\": 89141,\n            \"constrData-memory-arguments\": 32,\n            \"decodeUtf8-cpu-arguments-intercept\": 497525,\n            \"decodeUtf8-cpu-arguments-slope\": 14068,\n            \"decodeUtf8-memory-arguments-intercept\": 4,\n            \"decodeUtf8-memory-arguments-slope\": 2,\n            \"divideInteger-cpu-arguments-constant\": 196500,\n            \"divideInteger-cpu-arguments-model-arguments-intercept\": 453240,\n            \"divideInteger-cpu-arguments-model-arguments-slope\": 220,\n            \"divideInteger-memory-arguments-intercept\": 0,\n            \"divideInteger-memory-arguments-minimum\": 1,\n            \"divideInteger-memory-arguments-slope\": 1,\n            \"encodeUtf8-cpu-arguments-intercept\": 1000,\n            \"encodeUtf8-cpu-arguments-slope\": 28662,\n            \"encodeUtf8-memory-arguments-intercept\": 4,\n            \"encodeUtf8-memory-arguments-slope\": 2,\n            \"equalsByteString-cpu-arguments-constant\": 245000,\n            \"equalsByteString-cpu-arguments-intercept\": 216773,\n            \"equalsByteString-cpu-arguments-slope\": 62,\n            \"equalsByteString-memory-arguments\": 1,\n            \"equalsData-cpu-arguments-intercept\": 1060367,\n            \"equalsData-cpu-arguments-slope\": 12586,\n            \"equalsData-memory-arguments\": 1,\n            \"equalsInteger-cpu-arguments-intercept\": 208512,\n            \"equalsInteger-cpu-arguments-slope\": 421,\n            \"equalsInteger-memory-arguments\": 1,\n            \"equalsString-cpu-arguments-constant\": 187000,\n            \"equalsString-cpu-arguments-intercept\": 1000,\n            \"equalsString-cpu-arguments-slope\": 52998,\n            \"equalsString-memory-arguments\": 1,\n            \"fstPair-cpu-arguments\": 80436,\n            \"fstPair-memory-arguments\": 32,\n            \"headList-cpu-arguments\": 43249,\n            \"headList-memory-arguments\": 32,\n            \"iData-cpu-arguments\": 1000,\n            \"iData-memory-arguments\": 32,\n            \"ifThenElse-cpu-arguments\": 80556,\n            \"ifThenElse-memory-arguments\": 1,\n            \"indexByteString-cpu-arguments\": 57667,\n            \"indexByteString-memory-arguments\": 4,\n            \"lengthOfByteString-cpu-arguments\": 1000,\n            \"lengthOfByteString-memory-arguments\": 10,\n            \"lessThanByteString-cpu-arguments-intercept\": 197145,\n            \"lessThanByteString-cpu-arguments-slope\": 156,\n            \"lessThanByteString-memory-arguments\": 1,\n            \"lessThanEqualsByteString-cpu-arguments-intercept\": 197145,\n            \"lessThanEqualsByteString-cpu-arguments-slope\": 156,\n            \"lessThanEqualsByteString-memory-arguments\": 1,\n            \"lessThanEqualsInteger-cpu-arguments-intercept\": 204924,\n            \"lessThanEqualsInteger-cpu-arguments-slope\": 473,\n            \"lessThanEqualsInteger-memory-arguments\": 1,\n            \"lessThanInteger-cpu-arguments-intercept\": 208896,\n            \"lessThanInteger-cpu-arguments-slope\": 511,\n            \"lessThanInteger-memory-arguments\": 1,\n            \"listData-cpu-arguments\": 52467,\n            \"listData-memory-arguments\": 32,\n            \"mapData-cpu-arguments\": 64832,\n            \"mapData-memory-arguments\": 32,\n            \"mkCons-cpu-arguments\": 65493,\n            \"mkCons-memory-arguments\": 32,\n            \"mkNilData-cpu-arguments\": 22558,\n            \"mkNilData-memory-arguments\": 32,\n            \"mkNilPairData-cpu-arguments\": 16563,\n            \"mkNilPairData-memory-arguments\": 32,\n            \"mkPairData-cpu-arguments\": 76511,\n            \"mkPairData-memory-arguments\": 32,\n            \"modInteger-cpu-arguments-constant\": 196500,\n            \"modInteger-cpu-arguments-model-arguments-intercept\": 453240,\n            \"modInteger-cpu-arguments-model-arguments-slope\": 220,\n            \"modInteger-memory-arguments-intercept\": 0,\n            \"modInteger-memory-arguments-minimum\": 1,\n            \"modInteger-memory-arguments-slope\": 1,\n            \"multiplyInteger-cpu-arguments-intercept\": 69522,\n            \"multiplyInteger-cpu-arguments-slope\": 11687,\n            \"multiplyInteger-memory-arguments-intercept\": 0,\n            \"multiplyInteger-memory-arguments-slope\": 1,\n            \"nullList-cpu-arguments\": 60091,\n            \"nullList-memory-arguments\": 32,\n            \"quotientInteger-cpu-arguments-constant\": 196500,\n            \"quotientInteger-cpu-arguments-model-arguments-intercept\": 453240,\n            \"quotientInteger-cpu-arguments-model-arguments-slope\": 220,\n            \"quotientInteger-memory-arguments-intercept\": 0,\n            \"quotientInteger-memory-arguments-minimum\": 1,\n            \"quotientInteger-memory-arguments-slope\": 1,\n            \"remainderInteger-cpu-arguments-constant\": 196500,\n            \"remainderInteger-cpu-arguments-model-arguments-intercept\": 453240,\n            \"remainderInteger-cpu-arguments-model-arguments-slope\": 220,\n            \"remainderInteger-memory-arguments-intercept\": 0,\n            \"remainderInteger-memory-arguments-minimum\": 1,\n            \"remainderInteger-memory-arguments-slope\": 1,\n            \"sha2_256-cpu-arguments-intercept\": 806990,\n            \"sha2_256-cpu-arguments-slope\": 30482,\n            \"sha2_256-memory-arguments\": 4,\n            \"sha3_256-cpu-arguments-intercept\": 1927926,\n            \"sha3_256-cpu-arguments-slope\": 82523,\n            \"sha3_256-memory-arguments\": 4,\n            \"sliceByteString-cpu-arguments-intercept\": 265318,\n            \"sliceByteString-cpu-arguments-slope\": 0,\n            \"sliceByteString-memory-arguments-intercept\": 4,\n            \"sliceByteString-memory-arguments-slope\": 0,\n            \"sndPair-cpu-arguments\": 85931,\n            \"sndPair-memory-arguments\": 32,\n            \"subtractInteger-cpu-arguments-intercept\": 205665,\n            \"subtractInteger-cpu-arguments-slope\": 812,\n            \"subtractInteger-memory-arguments-intercept\": 1,\n            \"subtractInteger-memory-arguments-slope\": 1,\n            \"tailList-cpu-arguments\": 41182,\n            \"tailList-memory-arguments\": 32,\n            \"trace-cpu-arguments\": 212342,\n            \"trace-memory-arguments\": 32,\n            \"unBData-cpu-arguments\": 31220,\n            \"unBData-memory-arguments\": 32,\n            \"unConstrData-cpu-arguments\": 32696,\n            \"unConstrData-memory-arguments\": 32,\n            \"unIData-cpu-arguments\": 43357,\n            \"unIData-memory-arguments\": 32,\n            \"unListData-cpu-arguments\": 32247,\n            \"unListData-memory-arguments\": 32,\n            \"unMapData-cpu-arguments\": 38314,\n            \"unMapData-memory-arguments\": 32,\n            \"verifyEd25519Signature-cpu-arguments-intercept\": 9462713,\n            \"verifyEd25519Signature-cpu-arguments-slope\": 1021,\n            \"verifyEd25519Signature-memory-arguments\": 10,\n        },\n        PlutusV2: {\n            \"addInteger-cpu-arguments-intercept\": 205665,\n            \"addInteger-cpu-arguments-slope\": 812,\n            \"addInteger-memory-arguments-intercept\": 1,\n            \"addInteger-memory-arguments-slope\": 1,\n            \"appendByteString-cpu-arguments-intercept\": 1000,\n            \"appendByteString-cpu-arguments-slope\": 571,\n            \"appendByteString-memory-arguments-intercept\": 0,\n            \"appendByteString-memory-arguments-slope\": 1,\n            \"appendString-cpu-arguments-intercept\": 1000,\n            \"appendString-cpu-arguments-slope\": 24177,\n            \"appendString-memory-arguments-intercept\": 4,\n            \"appendString-memory-arguments-slope\": 1,\n            \"bData-cpu-arguments\": 1000,\n            \"bData-memory-arguments\": 32,\n            \"blake2b_256-cpu-arguments-intercept\": 117366,\n            \"blake2b_256-cpu-arguments-slope\": 10475,\n            \"blake2b_256-memory-arguments\": 4,\n            \"cekApplyCost-exBudgetCPU\": 23000,\n            \"cekApplyCost-exBudgetMemory\": 100,\n            \"cekBuiltinCost-exBudgetCPU\": 23000,\n            \"cekBuiltinCost-exBudgetMemory\": 100,\n            \"cekConstCost-exBudgetCPU\": 23000,\n            \"cekConstCost-exBudgetMemory\": 100,\n            \"cekDelayCost-exBudgetCPU\": 23000,\n            \"cekDelayCost-exBudgetMemory\": 100,\n            \"cekForceCost-exBudgetCPU\": 23000,\n            \"cekForceCost-exBudgetMemory\": 100,\n            \"cekLamCost-exBudgetCPU\": 23000,\n            \"cekLamCost-exBudgetMemory\": 100,\n            \"cekStartupCost-exBudgetCPU\": 100,\n            \"cekStartupCost-exBudgetMemory\": 100,\n            \"cekVarCost-exBudgetCPU\": 23000,\n            \"cekVarCost-exBudgetMemory\": 100,\n            \"chooseData-cpu-arguments\": 19537,\n            \"chooseData-memory-arguments\": 32,\n            \"chooseList-cpu-arguments\": 175354,\n            \"chooseList-memory-arguments\": 32,\n            \"chooseUnit-cpu-arguments\": 46417,\n            \"chooseUnit-memory-arguments\": 4,\n            \"consByteString-cpu-arguments-intercept\": 221973,\n            \"consByteString-cpu-arguments-slope\": 511,\n            \"consByteString-memory-arguments-intercept\": 0,\n            \"consByteString-memory-arguments-slope\": 1,\n            \"constrData-cpu-arguments\": 89141,\n            \"constrData-memory-arguments\": 32,\n            \"decodeUtf8-cpu-arguments-intercept\": 497525,\n            \"decodeUtf8-cpu-arguments-slope\": 14068,\n            \"decodeUtf8-memory-arguments-intercept\": 4,\n            \"decodeUtf8-memory-arguments-slope\": 2,\n            \"divideInteger-cpu-arguments-constant\": 196500,\n            \"divideInteger-cpu-arguments-model-arguments-intercept\": 453240,\n            \"divideInteger-cpu-arguments-model-arguments-slope\": 220,\n            \"divideInteger-memory-arguments-intercept\": 0,\n            \"divideInteger-memory-arguments-minimum\": 1,\n            \"divideInteger-memory-arguments-slope\": 1,\n            \"encodeUtf8-cpu-arguments-intercept\": 1000,\n            \"encodeUtf8-cpu-arguments-slope\": 28662,\n            \"encodeUtf8-memory-arguments-intercept\": 4,\n            \"encodeUtf8-memory-arguments-slope\": 2,\n            \"equalsByteString-cpu-arguments-constant\": 245000,\n            \"equalsByteString-cpu-arguments-intercept\": 216773,\n            \"equalsByteString-cpu-arguments-slope\": 62,\n            \"equalsByteString-memory-arguments\": 1,\n            \"equalsData-cpu-arguments-intercept\": 1060367,\n            \"equalsData-cpu-arguments-slope\": 12586,\n            \"equalsData-memory-arguments\": 1,\n            \"equalsInteger-cpu-arguments-intercept\": 208512,\n            \"equalsInteger-cpu-arguments-slope\": 421,\n            \"equalsInteger-memory-arguments\": 1,\n            \"equalsString-cpu-arguments-constant\": 187000,\n            \"equalsString-cpu-arguments-intercept\": 1000,\n            \"equalsString-cpu-arguments-slope\": 52998,\n            \"equalsString-memory-arguments\": 1,\n            \"fstPair-cpu-arguments\": 80436,\n            \"fstPair-memory-arguments\": 32,\n            \"headList-cpu-arguments\": 43249,\n            \"headList-memory-arguments\": 32,\n            \"iData-cpu-arguments\": 1000,\n            \"iData-memory-arguments\": 32,\n            \"ifThenElse-cpu-arguments\": 80556,\n            \"ifThenElse-memory-arguments\": 1,\n            \"indexByteString-cpu-arguments\": 57667,\n            \"indexByteString-memory-arguments\": 4,\n            \"lengthOfByteString-cpu-arguments\": 1000,\n            \"lengthOfByteString-memory-arguments\": 10,\n            \"lessThanByteString-cpu-arguments-intercept\": 197145,\n            \"lessThanByteString-cpu-arguments-slope\": 156,\n            \"lessThanByteString-memory-arguments\": 1,\n            \"lessThanEqualsByteString-cpu-arguments-intercept\": 197145,\n            \"lessThanEqualsByteString-cpu-arguments-slope\": 156,\n            \"lessThanEqualsByteString-memory-arguments\": 1,\n            \"lessThanEqualsInteger-cpu-arguments-intercept\": 204924,\n            \"lessThanEqualsInteger-cpu-arguments-slope\": 473,\n            \"lessThanEqualsInteger-memory-arguments\": 1,\n            \"lessThanInteger-cpu-arguments-intercept\": 208896,\n            \"lessThanInteger-cpu-arguments-slope\": 511,\n            \"lessThanInteger-memory-arguments\": 1,\n            \"listData-cpu-arguments\": 52467,\n            \"listData-memory-arguments\": 32,\n            \"mapData-cpu-arguments\": 64832,\n            \"mapData-memory-arguments\": 32,\n            \"mkCons-cpu-arguments\": 65493,\n            \"mkCons-memory-arguments\": 32,\n            \"mkNilData-cpu-arguments\": 22558,\n            \"mkNilData-memory-arguments\": 32,\n            \"mkNilPairData-cpu-arguments\": 16563,\n            \"mkNilPairData-memory-arguments\": 32,\n            \"mkPairData-cpu-arguments\": 76511,\n            \"mkPairData-memory-arguments\": 32,\n            \"modInteger-cpu-arguments-constant\": 196500,\n            \"modInteger-cpu-arguments-model-arguments-intercept\": 453240,\n            \"modInteger-cpu-arguments-model-arguments-slope\": 220,\n            \"modInteger-memory-arguments-intercept\": 0,\n            \"modInteger-memory-arguments-minimum\": 1,\n            \"modInteger-memory-arguments-slope\": 1,\n            \"multiplyInteger-cpu-arguments-intercept\": 69522,\n            \"multiplyInteger-cpu-arguments-slope\": 11687,\n            \"multiplyInteger-memory-arguments-intercept\": 0,\n            \"multiplyInteger-memory-arguments-slope\": 1,\n            \"nullList-cpu-arguments\": 60091,\n            \"nullList-memory-arguments\": 32,\n            \"quotientInteger-cpu-arguments-constant\": 196500,\n            \"quotientInteger-cpu-arguments-model-arguments-intercept\": 453240,\n            \"quotientInteger-cpu-arguments-model-arguments-slope\": 220,\n            \"quotientInteger-memory-arguments-intercept\": 0,\n            \"quotientInteger-memory-arguments-minimum\": 1,\n            \"quotientInteger-memory-arguments-slope\": 1,\n            \"remainderInteger-cpu-arguments-constant\": 196500,\n            \"remainderInteger-cpu-arguments-model-arguments-intercept\": 453240,\n            \"remainderInteger-cpu-arguments-model-arguments-slope\": 220,\n            \"remainderInteger-memory-arguments-intercept\": 0,\n            \"remainderInteger-memory-arguments-minimum\": 1,\n            \"remainderInteger-memory-arguments-slope\": 1,\n            \"serialiseData-cpu-arguments-intercept\": 1159724,\n            \"serialiseData-cpu-arguments-slope\": 392670,\n            \"serialiseData-memory-arguments-intercept\": 0,\n            \"serialiseData-memory-arguments-slope\": 2,\n            \"sha2_256-cpu-arguments-intercept\": 806990,\n            \"sha2_256-cpu-arguments-slope\": 30482,\n            \"sha2_256-memory-arguments\": 4,\n            \"sha3_256-cpu-arguments-intercept\": 1927926,\n            \"sha3_256-cpu-arguments-slope\": 82523,\n            \"sha3_256-memory-arguments\": 4,\n            \"sliceByteString-cpu-arguments-intercept\": 265318,\n            \"sliceByteString-cpu-arguments-slope\": 0,\n            \"sliceByteString-memory-arguments-intercept\": 4,\n            \"sliceByteString-memory-arguments-slope\": 0,\n            \"sndPair-cpu-arguments\": 85931,\n            \"sndPair-memory-arguments\": 32,\n            \"subtractInteger-cpu-arguments-intercept\": 205665,\n            \"subtractInteger-cpu-arguments-slope\": 812,\n            \"subtractInteger-memory-arguments-intercept\": 1,\n            \"subtractInteger-memory-arguments-slope\": 1,\n            \"tailList-cpu-arguments\": 41182,\n            \"tailList-memory-arguments\": 32,\n            \"trace-cpu-arguments\": 212342,\n            \"trace-memory-arguments\": 32,\n            \"unBData-cpu-arguments\": 31220,\n            \"unBData-memory-arguments\": 32,\n            \"unConstrData-cpu-arguments\": 32696,\n            \"unConstrData-memory-arguments\": 32,\n            \"unIData-cpu-arguments\": 43357,\n            \"unIData-memory-arguments\": 32,\n            \"unListData-cpu-arguments\": 32247,\n            \"unListData-memory-arguments\": 32,\n            \"unMapData-cpu-arguments\": 38314,\n            \"unMapData-memory-arguments\": 32,\n            \"verifyEcdsaSecp256k1Signature-cpu-arguments\": 35892428,\n            \"verifyEcdsaSecp256k1Signature-memory-arguments\": 10,\n            \"verifyEd25519Signature-cpu-arguments-intercept\": 57996947,\n            \"verifyEd25519Signature-cpu-arguments-slope\": 18975,\n            \"verifyEd25519Signature-memory-arguments\": 10,\n            \"verifySchnorrSecp256k1Signature-cpu-arguments-intercept\": 38887044,\n            \"verifySchnorrSecp256k1Signature-cpu-arguments-slope\": 32947,\n            \"verifySchnorrSecp256k1Signature-memory-arguments\": 10,\n        },\n    },\n};\n","import { decode, decodeString, encodeToString, } from \"../../deps/deno.land/std@0.100.0/encoding/hex.js\";\nimport { C } from \"../core/mod.js\";\nimport { generateMnemonic } from \"../misc/bip39.js\";\nimport { crc8 } from \"../misc/crc8.js\";\nimport { SLOT_CONFIG_NETWORK, slotToBeginUnixTime, unixTimeToEnclosingSlot, } from \"../plutus/time.js\";\nimport { Data } from \"../plutus/data.js\";\nexport class Utils {\n    constructor(lucid) {\n        Object.defineProperty(this, \"lucid\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.lucid = lucid;\n    }\n    validatorToAddress(validator, stakeCredential) {\n        const validatorHash = this.validatorToScriptHash(validator);\n        if (stakeCredential) {\n            return C.BaseAddress.new(networkToId(this.lucid.network), C.StakeCredential.from_scripthash(C.ScriptHash.from_hex(validatorHash)), stakeCredential.type === \"Key\"\n                ? C.StakeCredential.from_keyhash(C.Ed25519KeyHash.from_hex(stakeCredential.hash))\n                : C.StakeCredential.from_scripthash(C.ScriptHash.from_hex(stakeCredential.hash)))\n                .to_address()\n                .to_bech32(undefined);\n        }\n        else {\n            return C.EnterpriseAddress.new(networkToId(this.lucid.network), C.StakeCredential.from_scripthash(C.ScriptHash.from_hex(validatorHash)))\n                .to_address()\n                .to_bech32(undefined);\n        }\n    }\n    credentialToAddress(paymentCredential, stakeCredential) {\n        if (stakeCredential) {\n            return C.BaseAddress.new(networkToId(this.lucid.network), paymentCredential.type === \"Key\"\n                ? C.StakeCredential.from_keyhash(C.Ed25519KeyHash.from_hex(paymentCredential.hash))\n                : C.StakeCredential.from_scripthash(C.ScriptHash.from_hex(paymentCredential.hash)), stakeCredential.type === \"Key\"\n                ? C.StakeCredential.from_keyhash(C.Ed25519KeyHash.from_hex(stakeCredential.hash))\n                : C.StakeCredential.from_scripthash(C.ScriptHash.from_hex(stakeCredential.hash)))\n                .to_address()\n                .to_bech32(undefined);\n        }\n        else {\n            return C.EnterpriseAddress.new(networkToId(this.lucid.network), paymentCredential.type === \"Key\"\n                ? C.StakeCredential.from_keyhash(C.Ed25519KeyHash.from_hex(paymentCredential.hash))\n                : C.StakeCredential.from_scripthash(C.ScriptHash.from_hex(paymentCredential.hash)))\n                .to_address()\n                .to_bech32(undefined);\n        }\n    }\n    validatorToRewardAddress(validator) {\n        const validatorHash = this.validatorToScriptHash(validator);\n        return C.RewardAddress.new(networkToId(this.lucid.network), C.StakeCredential.from_scripthash(C.ScriptHash.from_hex(validatorHash)))\n            .to_address()\n            .to_bech32(undefined);\n    }\n    credentialToRewardAddress(stakeCredential) {\n        return C.RewardAddress.new(networkToId(this.lucid.network), stakeCredential.type === \"Key\"\n            ? C.StakeCredential.from_keyhash(C.Ed25519KeyHash.from_hex(stakeCredential.hash))\n            : C.StakeCredential.from_scripthash(C.ScriptHash.from_hex(stakeCredential.hash)))\n            .to_address()\n            .to_bech32(undefined);\n    }\n    validatorToScriptHash(validator) {\n        switch (validator.type) {\n            case \"Native\":\n                return C.NativeScript.from_bytes(fromHex(validator.script))\n                    .hash(C.ScriptHashNamespace.NativeScript)\n                    .to_hex();\n            case \"PlutusV1\":\n                return C.PlutusScript.from_bytes(fromHex(applyDoubleCborEncoding(validator.script)))\n                    .hash(C.ScriptHashNamespace.PlutusV1)\n                    .to_hex();\n            case \"PlutusV2\":\n                return C.PlutusScript.from_bytes(fromHex(applyDoubleCborEncoding(validator.script)))\n                    .hash(C.ScriptHashNamespace.PlutusV2)\n                    .to_hex();\n            default:\n                throw new Error(\"No variant matched\");\n        }\n    }\n    mintingPolicyToId(mintingPolicy) {\n        return this.validatorToScriptHash(mintingPolicy);\n    }\n    datumToHash(datum) {\n        return C.hash_plutus_data(C.PlutusData.from_bytes(fromHex(datum))).to_hex();\n    }\n    scriptHashToCredential(scriptHash) {\n        return {\n            type: \"Script\",\n            hash: scriptHash,\n        };\n    }\n    keyHashToCredential(keyHash) {\n        return {\n            type: \"Key\",\n            hash: keyHash,\n        };\n    }\n    generatePrivateKey() {\n        return generatePrivateKey();\n    }\n    generateSeedPhrase() {\n        return generateSeedPhrase();\n    }\n    unixTimeToSlot(unixTime) {\n        return unixTimeToEnclosingSlot(unixTime, SLOT_CONFIG_NETWORK[this.lucid.network]);\n    }\n    slotToUnixTime(slot) {\n        return slotToBeginUnixTime(slot, SLOT_CONFIG_NETWORK[this.lucid.network]);\n    }\n    /** Address can be in Bech32 or Hex. */\n    getAddressDetails(address) {\n        return getAddressDetails(address);\n    }\n    /**\n     * Convert a native script from Json to the Hex representation.\n     * It follows this Json format: https://github.com/input-output-hk/cardano-node/blob/master/doc/reference/simple-scripts.md\n     */\n    nativeScriptFromJson(nativeScript) {\n        return nativeScriptFromJson(nativeScript);\n    }\n    paymentCredentialOf(address) {\n        return paymentCredentialOf(address);\n    }\n    stakeCredentialOf(rewardAddress) {\n        return stakeCredentialOf(rewardAddress);\n    }\n}\nfunction addressFromHexOrBech32(address) {\n    try {\n        return C.Address.from_bytes(fromHex(address));\n    }\n    catch (_e) {\n        try {\n            return C.Address.from_bech32(address);\n        }\n        catch (_e) {\n            throw new Error(\"Could not deserialize address.\");\n        }\n    }\n}\n/** Address can be in Bech32 or Hex. */\nexport function getAddressDetails(address) {\n    // Base Address\n    try {\n        const parsedAddress = C.BaseAddress.from_address(addressFromHexOrBech32(address));\n        const paymentCredential = parsedAddress.payment_cred().kind() === 0\n            ? {\n                type: \"Key\",\n                hash: toHex(parsedAddress.payment_cred().to_keyhash().to_bytes()),\n            }\n            : {\n                type: \"Script\",\n                hash: toHex(parsedAddress.payment_cred().to_scripthash().to_bytes()),\n            };\n        const stakeCredential = parsedAddress.stake_cred().kind() === 0\n            ? {\n                type: \"Key\",\n                hash: toHex(parsedAddress.stake_cred().to_keyhash().to_bytes()),\n            }\n            : {\n                type: \"Script\",\n                hash: toHex(parsedAddress.stake_cred().to_scripthash().to_bytes()),\n            };\n        return {\n            type: \"Base\",\n            networkId: parsedAddress.to_address().network_id(),\n            address: {\n                bech32: parsedAddress.to_address().to_bech32(undefined),\n                hex: toHex(parsedAddress.to_address().to_bytes()),\n            },\n            paymentCredential,\n            stakeCredential,\n        };\n    }\n    catch (_e) { /* pass */ }\n    // Enterprise Address\n    try {\n        const parsedAddress = C.EnterpriseAddress.from_address(addressFromHexOrBech32(address));\n        const paymentCredential = parsedAddress.payment_cred().kind() === 0\n            ? {\n                type: \"Key\",\n                hash: toHex(parsedAddress.payment_cred().to_keyhash().to_bytes()),\n            }\n            : {\n                type: \"Script\",\n                hash: toHex(parsedAddress.payment_cred().to_scripthash().to_bytes()),\n            };\n        return {\n            type: \"Enterprise\",\n            networkId: parsedAddress.to_address().network_id(),\n            address: {\n                bech32: parsedAddress.to_address().to_bech32(undefined),\n                hex: toHex(parsedAddress.to_address().to_bytes()),\n            },\n            paymentCredential,\n        };\n    }\n    catch (_e) { /* pass */ }\n    // Pointer Address\n    try {\n        const parsedAddress = C.PointerAddress.from_address(addressFromHexOrBech32(address));\n        const paymentCredential = parsedAddress.payment_cred().kind() === 0\n            ? {\n                type: \"Key\",\n                hash: toHex(parsedAddress.payment_cred().to_keyhash().to_bytes()),\n            }\n            : {\n                type: \"Script\",\n                hash: toHex(parsedAddress.payment_cred().to_scripthash().to_bytes()),\n            };\n        return {\n            type: \"Pointer\",\n            networkId: parsedAddress.to_address().network_id(),\n            address: {\n                bech32: parsedAddress.to_address().to_bech32(undefined),\n                hex: toHex(parsedAddress.to_address().to_bytes()),\n            },\n            paymentCredential,\n        };\n    }\n    catch (_e) { /* pass */ }\n    // Reward Address\n    try {\n        const parsedAddress = C.RewardAddress.from_address(addressFromHexOrBech32(address));\n        const stakeCredential = parsedAddress.payment_cred().kind() === 0\n            ? {\n                type: \"Key\",\n                hash: toHex(parsedAddress.payment_cred().to_keyhash().to_bytes()),\n            }\n            : {\n                type: \"Script\",\n                hash: toHex(parsedAddress.payment_cred().to_scripthash().to_bytes()),\n            };\n        return {\n            type: \"Reward\",\n            networkId: parsedAddress.to_address().network_id(),\n            address: {\n                bech32: parsedAddress.to_address().to_bech32(undefined),\n                hex: toHex(parsedAddress.to_address().to_bytes()),\n            },\n            stakeCredential,\n        };\n    }\n    catch (_e) { /* pass */ }\n    // Limited support for Byron addresses\n    try {\n        const parsedAddress = ((address) => {\n            try {\n                return C.ByronAddress.from_bytes(fromHex(address));\n            }\n            catch (_e) {\n                try {\n                    return C.ByronAddress.from_base58(address);\n                }\n                catch (_e) {\n                    throw new Error(\"Could not deserialize address.\");\n                }\n            }\n        })(address);\n        return {\n            type: \"Byron\",\n            networkId: parsedAddress.network_id(),\n            address: {\n                bech32: \"\",\n                hex: toHex(parsedAddress.to_address().to_bytes()),\n            },\n        };\n    }\n    catch (_e) { /* pass */ }\n    throw new Error(\"No address type matched for: \" + address);\n}\nexport function paymentCredentialOf(address) {\n    const { paymentCredential } = getAddressDetails(address);\n    if (!paymentCredential) {\n        throw new Error(\"The specified address does not contain a payment credential.\");\n    }\n    return paymentCredential;\n}\nexport function stakeCredentialOf(rewardAddress) {\n    const { stakeCredential } = getAddressDetails(rewardAddress);\n    if (!stakeCredential) {\n        throw new Error(\"The specified address does not contain a stake credential.\");\n    }\n    return stakeCredential;\n}\nexport function generatePrivateKey() {\n    return C.PrivateKey.generate_ed25519().to_bech32();\n}\nexport function generateSeedPhrase() {\n    return generateMnemonic(256);\n}\nexport function valueToAssets(value) {\n    const assets = {};\n    assets[\"lovelace\"] = BigInt(value.coin().to_str());\n    const ma = value.multiasset();\n    if (ma) {\n        const multiAssets = ma.keys();\n        for (let j = 0; j < multiAssets.len(); j++) {\n            const policy = multiAssets.get(j);\n            const policyAssets = ma.get(policy);\n            const assetNames = policyAssets.keys();\n            for (let k = 0; k < assetNames.len(); k++) {\n                const policyAsset = assetNames.get(k);\n                const quantity = policyAssets.get(policyAsset);\n                const unit = toHex(policy.to_bytes()) + toHex(policyAsset.name());\n                assets[unit] = BigInt(quantity.to_str());\n            }\n        }\n    }\n    return assets;\n}\nexport function assetsToValue(assets) {\n    const multiAsset = C.MultiAsset.new();\n    const lovelace = assets[\"lovelace\"];\n    const units = Object.keys(assets);\n    const policies = Array.from(new Set(units\n        .filter((unit) => unit !== \"lovelace\")\n        .map((unit) => unit.slice(0, 56))));\n    policies.forEach((policy) => {\n        const policyUnits = units.filter((unit) => unit.slice(0, 56) === policy);\n        const assetsValue = C.Assets.new();\n        policyUnits.forEach((unit) => {\n            assetsValue.insert(C.AssetName.new(fromHex(unit.slice(56))), C.BigNum.from_str(assets[unit].toString()));\n        });\n        multiAsset.insert(C.ScriptHash.from_bytes(fromHex(policy)), assetsValue);\n    });\n    const value = C.Value.new(C.BigNum.from_str(lovelace ? lovelace.toString() : \"0\"));\n    if (units.length > 1 || !lovelace)\n        value.set_multiasset(multiAsset);\n    return value;\n}\nexport function fromScriptRef(scriptRef) {\n    const kind = scriptRef.get().kind();\n    switch (kind) {\n        case 0:\n            return {\n                type: \"Native\",\n                script: toHex(scriptRef.get().as_native().to_bytes()),\n            };\n        case 1:\n            return {\n                type: \"PlutusV1\",\n                script: toHex(scriptRef.get().as_plutus_v1().to_bytes()),\n            };\n        case 2:\n            return {\n                type: \"PlutusV2\",\n                script: toHex(scriptRef.get().as_plutus_v2().to_bytes()),\n            };\n        default:\n            throw new Error(\"No variant matched.\");\n    }\n}\nexport function toScriptRef(script) {\n    switch (script.type) {\n        case \"Native\":\n            return C.ScriptRef.new(C.Script.new_native(C.NativeScript.from_bytes(fromHex(script.script))));\n        case \"PlutusV1\":\n            return C.ScriptRef.new(C.Script.new_plutus_v1(C.PlutusScript.from_bytes(fromHex(applyDoubleCborEncoding(script.script)))));\n        case \"PlutusV2\":\n            return C.ScriptRef.new(C.Script.new_plutus_v2(C.PlutusScript.from_bytes(fromHex(applyDoubleCborEncoding(script.script)))));\n        default:\n            throw new Error(\"No variant matched.\");\n    }\n}\nexport function utxoToCore(utxo) {\n    const address = (() => {\n        try {\n            return C.Address.from_bech32(utxo.address);\n        }\n        catch (_e) {\n            return C.ByronAddress.from_base58(utxo.address).to_address();\n        }\n    })();\n    const output = C.TransactionOutput.new(address, assetsToValue(utxo.assets));\n    if (utxo.datumHash) {\n        output.set_datum(C.Datum.new_data_hash(C.DataHash.from_bytes(fromHex(utxo.datumHash))));\n    }\n    // inline datum\n    if (!utxo.datumHash && utxo.datum) {\n        output.set_datum(C.Datum.new_data(C.Data.new(C.PlutusData.from_bytes(fromHex(utxo.datum)))));\n    }\n    if (utxo.scriptRef) {\n        output.set_script_ref(toScriptRef(utxo.scriptRef));\n    }\n    return C.TransactionUnspentOutput.new(C.TransactionInput.new(C.TransactionHash.from_bytes(fromHex(utxo.txHash)), C.BigNum.from_str(utxo.outputIndex.toString())), output);\n}\nexport function coreToUtxo(coreUtxo) {\n    return {\n        txHash: toHex(coreUtxo.input().transaction_id().to_bytes()),\n        outputIndex: parseInt(coreUtxo.input().index().to_str()),\n        assets: valueToAssets(coreUtxo.output().amount()),\n        address: coreUtxo.output().address().as_byron()\n            ? coreUtxo.output().address().as_byron()?.to_base58()\n            : coreUtxo.output().address().to_bech32(undefined),\n        datumHash: coreUtxo.output()?.datum()?.as_data_hash()?.to_hex(),\n        datum: coreUtxo.output()?.datum()?.as_data() &&\n            toHex(coreUtxo.output().datum().as_data().get().to_bytes()),\n        scriptRef: coreUtxo.output()?.script_ref() &&\n            fromScriptRef(coreUtxo.output().script_ref()),\n    };\n}\nexport function networkToId(network) {\n    switch (network) {\n        case \"Preview\":\n            return 0;\n        case \"Preprod\":\n            return 0;\n        case \"Custom\":\n            return 0;\n        case \"Mainnet\":\n            return 1;\n        default:\n            throw new Error(\"Network not found\");\n    }\n}\nexport function fromHex(hex) {\n    return decodeString(hex);\n}\nexport function toHex(bytes) {\n    return encodeToString(bytes);\n}\n/** Convert a Hex encoded string to a Utf-8 encoded string. */\nexport function toText(hex) {\n    return new TextDecoder().decode(decode(new TextEncoder().encode(hex)));\n}\n/** Convert a Utf-8 encoded string to a Hex encoded string. */\nexport function fromText(text) {\n    return toHex(new TextEncoder().encode(text));\n}\nexport function toPublicKey(privateKey) {\n    return C.PrivateKey.from_bech32(privateKey).to_public().to_bech32();\n}\n/** Padded number in Hex. */\nfunction checksum(num) {\n    return crc8(fromHex(num)).toString(16).padStart(2, \"0\");\n}\nexport function toLabel(num) {\n    if (num < 0 || num > 65535) {\n        throw new Error(`Label ${num} out of range: min label 1 - max label 65535.`);\n    }\n    const numHex = num.toString(16).padStart(4, \"0\");\n    return \"0\" + numHex + checksum(numHex) + \"0\";\n}\nexport function fromLabel(label) {\n    if (label.length !== 8 || !(label[0] === \"0\" && label[7] === \"0\")) {\n        return null;\n    }\n    const numHex = label.slice(1, 5);\n    const num = parseInt(numHex, 16);\n    const check = label.slice(5, 7);\n    return check === checksum(numHex) ? num : null;\n}\n/**\n * @param name Hex encoded\n */\nexport function toUnit(policyId, name, label) {\n    const hexLabel = Number.isInteger(label) ? toLabel(label) : \"\";\n    const n = name ? name : \"\";\n    if ((n + hexLabel).length > 64) {\n        throw new Error(\"Asset name size exceeds 32 bytes.\");\n    }\n    if (policyId.length !== 56) {\n        throw new Error(`Policy id invalid: ${policyId}.`);\n    }\n    return policyId + hexLabel + n;\n}\n/**\n * Splits unit into policy id, asset name (entire asset name), name (asset name without label) and label if applicable.\n * name will be returned in Hex.\n */\nexport function fromUnit(unit) {\n    const policyId = unit.slice(0, 56);\n    const assetName = unit.slice(56) || null;\n    const label = fromLabel(unit.slice(56, 64));\n    const name = (() => {\n        const hexName = Number.isInteger(label) ? unit.slice(64) : unit.slice(56);\n        return hexName || null;\n    })();\n    return { policyId, assetName, name, label };\n}\n/**\n * Convert a native script from Json to the Hex representation.\n * It follows this Json format: https://github.com/input-output-hk/cardano-node/blob/master/doc/reference/simple-scripts.md\n */\nexport function nativeScriptFromJson(nativeScript) {\n    return {\n        type: \"Native\",\n        script: toHex(C.encode_json_str_to_native_script(JSON.stringify(nativeScript), \"\", C.ScriptSchema.Node).to_bytes()),\n    };\n}\nexport function applyParamsToScript(plutusScript, params, type) {\n    const p = (type ? Data.castTo(params, type) : params);\n    return toHex(C.apply_params_to_plutus_script(C.PlutusList.from_bytes(fromHex(Data.to(p))), C.PlutusScript.from_bytes(fromHex(applyDoubleCborEncoding(plutusScript)))).to_bytes());\n}\n/** Returns double cbor encoded script. If script is already double cbor encoded it's returned as it is. */\nexport function applyDoubleCborEncoding(script) {\n    try {\n        C.PlutusScript.from_bytes(C.PlutusScript.from_bytes(fromHex(script)).bytes());\n        return script;\n    }\n    catch (_e) {\n        return toHex(C.PlutusScript.new(fromHex(script)).to_bytes());\n    }\n}\nexport function addAssets(...assets) {\n    return assets.reduce((a, b) => {\n        for (const k in b) {\n            if (Object.hasOwn(b, k)) {\n                a[k] = (a[k] || 0n) + b[k];\n            }\n        }\n        return a;\n    }, {});\n}\n"],"names":["components","ProductsView","SlotsView","setup","getUserData","entryAPI","getProducts","getSlots","setupLucid","getLucid","dashboardAPI","update","lucid","async","Lucid","new","products","then","console","info","catch","err","log","slots","document","addEventListener","event","detail","data","type","selectedNav","lucidClient","navTabs","name","text","icon","index","path","methods","selectTab","e","this","getPubKeyHash","addr","wallet","address","details","getAddressDetails","paymentCredential","hash","mounted","api","window","cardano","nami","enable","selectWallet","LoadingBars","getSlotsData","createProduct","createSlot","startEndpoint","productList","ref","value","product","id","seller_id","description","category","price","collateral","stock","stock_status","keywords","theme","country","moderated","image_base","image_path","image_main","image_set","created_at","schema_t","schema_v","slots_count","invalidProductName","invalidProductDescription","invalidProductCategory","invalidSlotQuantity","invalidProductCollateral","invalidProductStock","invalidProductKeywords","invalidProductImages","messageModalVisible","messageModal","errorModal","disableUpload","resetForm","productMenuRef","productMenu","label","items","slotMenuRef","slotMenu","openProductMenu","toggle","openSlotMenu","createSlotForm","batch_mode","product_units","batch_number","product_discount","createSlotFormErrors","mediaHostURL","HOST","createSlotLoader","activeSlotLoader","createSlotDialogVisible","createSlotIndex","deleteProductDialog","deleteProductsDialog","descriptionLengthLimit","nameLengthLimit","minProductImages","slotListDialogVisible","slotListDialogIndex","customers","code","company","date","status","verified","activity","representative","image","balance","maxProductImages","selectedProducts","filters","categories","statuses","created","setupFilters","computed","computedMode","computedSlots","computedUnits","computedCollateral","total","units","computedPrice","originalPrice","discountPercentage","discountAmount","discountedPrice","runTX","tx","res","balanceTx","activeSlot","actived","params","slot_id","seller_pubkeyhash","response","payload","transaction","$toast","add","severity","summary","life","error","getStateBarValue","openSlotListDialog","productIndex","onBeforeUpload","length","openMessageDialog","message","errors","formatDate","split","closeAllModals","onAdvancedUpload","JSON","parse","xhr","success","push","formatCurrency","openProductDialog","closeProductDialog","createSlots","checkUnitNumber","checkBatchNumber","checkProductDiscount","Object","values","includes","wallet_id","product_id","finally","batchMode","openCreateSlotDialog","confirmDeleteProduct","productData","deleteProduct","filter","val","checkMainImage","setMainImage","getImages","map","imageId","main","exportCSV","$refs","productListTable","confirmDeleteSelected","deleteSelectedProducts","global","matchMode","FilterMatchMode","CONTAINS","getStatusLabel","store","useStore","fetchProductData","dispatch","createImages","sleep","timeInMs","Promise","resolve","setTimeout","getProductsData","getters","class","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3","__exports__","render","style","for","_hoisted_58","_hoisted_61","_hoisted_64","_hoisted_75","_hoisted_76","_hoisted_79","_hoisted_80","_createVNode","_component_Dialog","visible","$setup","$event","modal","header","draggable","width","breakpoints","footer","_withCtx","_component_Button","onClick","$options","hideModals","_toDisplayString","_Fragment","_renderList","key","$data","_cache","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","productDialog","closeOnEscape","hideDialog","submitForm","_createBlock","_component_Carousel","numVisible","numScroll","orientation","verticalViewPortHeight","contentClass","item","slotProps","_hoisted_9","_hoisted_10","_component_Image","src","imageStyle","alt","height","preview","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_normalizeClass","mainImage","isMainImage","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_component_InputText","placeholder","required","autofocus","invalid","formValidator","_hoisted_21","formValidatorText","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_component_Textarea","rows","cols","autoResize","descriptionLimit","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_component_Dropdown","options","optionLabel","highlightOnSelect","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_component_InputNumber","showButtons","integeronly","suffix","locale","min","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","max","_hoisted_47","_hoisted_48","_hoisted_49","_component_Chips","allowDuplicate","separator","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_component_Toast","_component_FileUpload","customUpload","multiple","fileLimit","accept","maxFileSize","onSelect","onSelectedFiles","chooseCallback","uploadCallback","clearCallback","files","_hoisted_56","disabled","uploadEvent","content","removeFileCallback","_hoisted_66","_hoisted_67","file","size","role","objectURL","_hoisted_69","_hoisted_70","formatSize","_hoisted_71","_hoisted_72","onRemoveTemplatingFile","_hoisted_73","empty","filesUploaded","_hoisted_74","_hoisted_77","_hoisted_78","_hoisted_81","images","_hoisted_82","_hoisted_83","_hoisted_84","_component_DataTable","resizableColumns","selection","selectionMode","dataKey","paginator","paginatorTemplate","rowsPerPageOptions","currentPageReportTemplate","_hoisted_85","_hoisted_86","_hoisted_87","_hoisted_88","_component_Toolbar","start","newProduct","end","_component_Column","exportable","body","field","sortable","slice","checkModerated","_component_Tag","_component_Rating","modelValue","rating","readonly","cancel","_hoisted_89","outlined","rounded","editProduct","totalSize","totalSizePercent","parseInt","onClearTemplatingUpload","clear","forEach","callback","toast","formData","FormData","append","bytes","k","dm","sizes","$primevue","config","fileSizeTypes","i","Math","floor","formattedSize","parseFloat","pow","toFixed","usePrimeVue","useToast","nameLimit","handleMessage","onFileRemoved","onUpload","validateName","validateDescription","validateCategory","validatePrice","validateCollateral","validateStock","validateKeywords","validateImages","join","categoryCode","categoryName","charAt","toUpperCase","dt","Number","isInteger","_imports_0","selected","args","username","_component_ProductsView","_component_SlotsView","_component_LoadingBars","_component_InputSwitch","_hoisted_16","maximizable","contentStyle","stripedRows","scrollable","scrollHeight","tableStyle","contract_price","contract_collateral","onChange","target","ariaChecked","contract_utx_0","contract_stage","_component_ProgressBar","contract_state","showValue","_component_Menu","model","popup","_ctx","expandedRows","expansion","expander","hasOwn","defineProperty","object","property","TypeError","prototype","hasOwnProperty","call","configurable","enumerable","writable","hexTable","TextEncoder","encode","errInvalidByte","byte","Error","TextDecoder","decode","Uint8Array","errLength","fromHexChar","encodedLen","n","dst","v","encodeToString","decodedLen","a","b","x","decodeString","s","_Sha256_block","_Sha256_blocks","_Sha256_bytes","_Sha256_finalized","_Sha256_first","_Sha256_h0","_Sha256_h1","_Sha256_h2","_Sha256_h3","_Sha256_h4","_Sha256_h5","_Sha256_h6","_Sha256_h7","_Sha256_hashed","_Sha256_hBytes","_Sha256_is224","_Sha256_lastByteIndex","_Sha256_start","__classPrivateFieldSet","receiver","state","kind","f","has","set","__classPrivateFieldGet","get","HEX_CHARS","EXTRA","SHIFT","K","blocks","Sha256","constructor","is224","sharedMemory","init","msg","ArrayBuffer","charCodeAt","finalize","c","d","g","h","s0","s1","maj","t1","t2","ch","ab","da","cd","bc","j","hex","h0","h1","h2","h3","h4","h5","h6","h7","toString","digest","arr","array","arrayBuffer","buffer","dataView","DataView","setUint32","WeakMap","Kind","Symbol","Hint","Modifier","TypeOrdinal","TypeBuilder","ReadonlyOptional","Readonly","Optional","Any","Create","Array","Boolean","ConstructorParameters","schema","Tuple","parameters","Constructor","returns","inner","undefined","instanceOf","globalThis","isArray","Date","Enum","keys","isNaN","anyOf","const","Function","InstanceType","Clone","Integer","Intersect","objects","isOptional","optional","Set","entries","properties","KeyOf","Literal","Never","allOf","Null","property_names","modifier","Omit","select","next","Parameters","Type","Partial","modifer","Pick","Record","reduce","acc","literal","pattern","patternProperties","additionalProperties","Recursive","$id","self","$ref","Ref","RegEx","regex","source","Required","ReturnType","Strict","stringify","String","additionalItems","minItems","maxItems","Undefined","typeOf","Union","Unknown","Unsafe","Void","isObject","getOwnPropertySymbols","isNode","process","versions","node","btoa","str","Buffer","from","atob","b64Encoded","fetch","import","Crypto","WebSocket","fs","crypto","default","Headers","Request","Response","C","_e","M","unsafeInstantiate","module","instantiate","all","provider","network","protocolParameters","getProtocolParameters","Emulator","SLOT_CONFIG_NETWORK","zeroTime","now","zeroSlot","slotLength","slotConfig","txBuilderConfig","TransactionBuilderConfigBuilder","coins_per_utxo_byte","BigNum","from_str","coinsPerUtxoByte","fee_algo","LinearFee","minFeeA","minFeeB","key_deposit","keyDeposit","pool_deposit","poolDeposit","max_tx_size","maxTxSize","max_value_size","maxValSize","collateral_percentage","collateralPercentage","max_collateral_inputs","maxCollateralInputs","max_tx_ex_units","ExUnits","maxTxExMem","maxTxExSteps","ex_unit_prices","ExUnitPrices","from_float","priceMem","priceStep","slot_config","blockfrost","Blockfrost","url","projectId","costmdls","createCostModels","costModels","build","utils","Utils","switchProvider","newTx","Tx","fromTx","TxComplete","Transaction","from_bytes","fromHex","newMessage","Message","verifyMessage","signedMessage","stakeCredential","addressHex","keyHash","verifyData","currentSlot","unixTimeToSlot","utxosAt","addressOrCredential","getUtxos","utxosAtWithUnit","unit","getUtxosWithUnit","utxoByUnit","getUtxoByUnit","utxosByOutRef","outRefs","getUtxosByOutRef","delegationAt","rewardAddress","getDelegation","awaitTx","txHash","checkInterval","datumOf","utxo","datum","datumHash","getDatum","Data","metadataOf","policyId","fromUnit","toUnit","metadata","toJson","fields","selectWalletFromPrivateKey","privateKey","priv","PrivateKey","from_bech32","pubKeyHash","to_public","EnterpriseAddress","StakeCredential","from_keyhash","to_address","to_bech32","paymentCredentialOf","getUtxosCore","utxos","coreUtxos","TransactionUnspentOutputs","utxoToCore","poolId","rewards","signTx","witness","make_vkey_witness","hash_transaction","txWitnessSetBuilder","TransactionWitnessSetBuilder","add_vkey","signMessage","hexAddress","originalKeyHash","to_hex","signData","submitTx","getAddressHex","getUsedAddresses","unusedAddressHex","getUnusedAddresses","Address","rewardAddressHex","getRewardAddresses","RewardAddress","from_address","parsedUtxo","TransactionUnspentOutput","coreToUtxo","rewardAddr","witnessSet","toHex","to_bytes","TransactionWitnessSet","selectWalletFrom","addressDetails","Ed25519KeyHash","from_hex","from_scripthash","ScriptHash","selectWalletFromSeed","seed","paymentKey","stakeKey","walletFromSeed","addressType","accountIndex","password","paymentKeyHash","stakeKeyHash","privKeyHashMap","ownKeyHashes","usedKeyHashes","discoverOwnUsedTxKeyHashes","sign","signWithPrivateKey","keyHashOriginal","txBuilder","TransactionBuilder","tasks","readFrom","to","that","plutusData","PlutusData","add_plutus_data","coreUtxo","add_reference_input","collectFrom","redeemer","add_input","ScriptWitness","new_plutus_witness","PlutusWitness","mintAssets","assets","MintAssets","insert","AssetName","Int","scriptHash","add_mint","payToAddress","output","TransactionOutput","addressFromWithNetworkCheck","assetsToValue","add_output","payToAddressWithData","outputData","asHash","inline","set_datum","Datum","new_data_hash","DataHash","hash_plutus_data","new_data","script","scriptRef","set_script_ref","toScriptRef","payToContract","delegateTo","credential","add_certificate","Certificate","new_stake_delegation","StakeDelegation","registerStake","new_stake_registration","StakeRegistration","deregisterStake","new_stake_deregistration","StakeDeregistration","registerPool","poolParams","poolRegistration","createPoolRegistration","certificate","new_pool_registration","updatePool","set_is_update","retirePool","epoch","new_pool_retirement","PoolRetirement","withdraw","amount","add_withdrawal","addSigner","addSignerKey","add_required_signer","validFrom","unixTime","slot","set_validity_start_interval","validTo","set_ttl","attachMetadata","add_json_metadatum","attachMetadataWithConversion","add_json_metadatum_with_schema","MetadataJsonSchema","BasicConversions","addNetworkId","set_network_id","NetworkId","padStart","attachSpendingValidator","spendingValidator","attachScript","attachMintingPolicy","mintingPolicy","attachCertificateValidator","certValidator","attachWithdrawalValidator","withdrawalValidator","compose","concat","complete","change","task","shift","changeAddress","coinSelection","add_inputs_from","Uint32Array","construct","nativeUplc","add_native_script","NativeScript","add_plutus_script","PlutusScript","applyDoubleCborEncoding","add_plutus_v2_script","poolOwners","Ed25519KeyHashes","owners","owner","metadataUrl","metadataHash","PoolMetadataHash","hash_blake2b256","relays","Relays","relay","ipV4","Ipv4","ipV6","Ipv6","replaceAll","Relay","new_single_host_addr","SingleHostAddr","port","new_single_host_name","SingleHostName","DNSRecordAorAAAA","domainName","new_multi_host_name","MultiHostName","DNSRecordSRV","PoolRegistration","PoolParams","VRFKeyHash","vrfKeyHash","pledge","cost","UnitInterval","margin","PoolMetadata","Url","networkId","actualNetworkId","networkToId","ByronAddress","from_base58","txComplete","witnessSetBuilder","fee","to_str","redeemers","witness_set","exUnits","cpu","mem","len","ex_units","steps","witnesses","add_existing","partialSign","partialSignWithPrivateKey","assemble","witnessParsed","signedTx","auxiliary_data","TxSigned","toHash","txSigned","submit","INVALID_MNEMONIC","INVALID_ENTROPY","INVALID_CHECKSUM","WORDLIST_REQUIRED","mnemonicToEntropy","mnemonic","wordlist","DEFAULT_WORDLIST","words","normalize","bits","word","indexOf","lpad","dividerIndex","entropyBits","checksumBits","entropyBytes","match","binaryToByte","entropy","newChecksum","deriveChecksumBits","randomBytes","MAX_UINT32","MAX_BYTES","RangeError","generated","getRandomValues","generateMnemonic","strength","rng","entropyToMnemonic","bytesToBinary","chunks","binary","entropyBuffer","ENT","CS","padString","bin","TABLE","crc8","current","previous","crc","Int32Array","protectedHeaders","HeaderMap","set_algorithm_id","Label","from_algorithm_id","AlgorithmId","EdDSA","set_header","new_text","CBORValue","new_bytes","protectedSerialized","ProtectedHeaderMap","unprotectedHeaders","headers","builder","COSESign1Builder","toSign","make_data_to_sign","signedSigStruc","coseSign1","COSEKey","from_key_type","KeyType","OKP","new_int","new_negative","new_i32","as_bytes","signature","cose1","COSESign1","protected","deserialized_headers","cose1Address","cose1AlgorithmId","int","algorithm_id","as_int","is_positive","as_positive","as_negative","keyAlgorithmId","keyCurve","keyType","key_type","publicKey","PublicKey","cose1Payload","Ed25519Signature","signed_data","verify","harden","num","rootKey","Bip32PrivateKey","from_bip39_entropy","accountKey","derive","to_raw_key","BaseAddress","ownUtxos","inputs","input","transaction_id","outputIndex","find","txBody","keyHashFromCert","certs","cert","as_stake_registration","stake_credential","as_stake_deregistration","to_keyhash","as_stake_delegation","as_pool_registration","pool_params","pool_owners","operator","as_pool_retirement","pool_keyhash","instantRewards","as_move_instantaneous_rewards_cert","move_instantaneous_reward","as_to_stake_creds","withdrawals","keyHashFromWithdrawal","rewardAddresses","payment_cred","scripts","native_scripts","keyHashFromScript","as_script_pubkey","addr_keyhash","as_script_all","as_script_any","as_script_n_of_k","requiredSigners","required_signers","Constr","integer","dataType","Bytes","title","replaceProperties","Map","p","hasConstr","union","tuple","Nullable","fromJson","void","castFrom","castTo","serialize","new_integer","BigInt","plutusList","PlutusList","new_constr_plutus_data","ConstrPlutusData","arg","new_list","plutusMap","PlutusMap","new_map","raw","deserialize","constr","as_constr_plutus_data","l","desL","alternative","m","as_map","desM","as_list","as_integer","json","toData","startsWith","fromText","tempMap","fromData","bigint","fatal","_","tempJson","convertedKey","shape","shapeType","integerConstraints","bytesConstraints","isVoid","fieldIndex","test","enumShape","entry","isBoolean","isNullable","fromEntries","listConstraints","mapConstraints","struct","enumIndex","findIndex","structTitle","enumEntry","minimum","maximum","exclusiveMinimum","exclusiveMaximum","enum","some","keyword","minLength","maxLength","list","uniqueItems","assign","Mainnet","Preview","Preprod","Custom","slotToBeginUnixTime","msAfterBegin","unixTimeToEnclosingSlot","timePassed","slotsPassed","packageJson","version","accounts","PROTOCOL_PARAMETERS_DEFAULT","GENESIS_HASH","repeat","blockHeight","time","ledger","spent","awaitSlot","currentHeight","outRef","mempool","awaitBlock","flatMap","datumTable","chain","delegation","distributeRewards","registeredStake","desTx","datums","plutus_data","lowerBound","validity_start_interval","upperBound","ttl","table","consumedHashes","keyHashes","vkeys","vkey","public_key","edKeyHashes","nativeHashes","scriptHashes","ScriptHashNamespace","get_required_signers","nativeHashesOptional","plutusHashesOptional","plutusHashes","plutus_scripts","PlutusV1","plutus_v2_scripts","PlutusV2","sort","resolvedInputs","entryLedger","reference_inputs","tagMap","collected","tag","checkAndConsumeHash","signer","mint","withdrawalRequests","rawAddress","withdrawal","certRequests","registration","NetworkInfo","testnet","network_id","deregistration","request","outputs","unspentOutput","TransactionInput","TransactionHash","extraKeyHash","extraNativeHash","extraPlutusHash","extraDatumHash","getRandomColor","r","totalBalances","balances","quantity","barLength","Costmdls","costmdlV1","CostModel","Language","new_plutus_v1","costmdlV2","new_plutus_v2","validatorToAddress","validator","validatorHash","validatorToScriptHash","credentialToAddress","validatorToRewardAddress","credentialToRewardAddress","mintingPolicyToId","datumToHash","scriptHashToCredential","keyHashToCredential","generatePrivateKey","generateSeedPhrase","slotToUnixTime","nativeScriptFromJson","nativeScript","stakeCredentialOf","addressFromHexOrBech32","parsedAddress","to_scripthash","stake_cred","bech32","PointerAddress","generate_ed25519","valueToAssets","coin","ma","multiasset","multiAssets","policy","policyAssets","assetNames","policyAsset","multiAsset","MultiAsset","lovelace","policies","policyUnits","assetsValue","Assets","Value","set_multiasset","fromScriptRef","as_native","as_plutus_v1","as_plutus_v2","ScriptRef","Script","new_native","as_byron","to_base58","as_data_hash","as_data","script_ref","checksum","toLabel","numHex","fromLabel","check","hexLabel","assetName","hexName","encode_json_str_to_native_script","ScriptSchema","Node"],"sourceRoot":""}